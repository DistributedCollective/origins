!function(e){var t={};function n(a){if(t[a])return t[a].exports;var i=t[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(a,i,function(t){return e[t]}.bind(null,i));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=10)}([function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";(function(e,n){
/*!
 * Vue.js v2.6.13
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */
var a=Object.freeze({});function i(e){return null==e}function s(e){return null!=e}function r(e){return!0===e}function o(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function u(e){return null!==e&&"object"==typeof e}var d=Object.prototype.toString;function p(e){return"[object Object]"===d.call(e)}function l(e){return"[object RegExp]"===d.call(e)}function c(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function y(e){return s(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function m(e){return null==e?"":Array.isArray(e)||p(e)&&e.toString===d?JSON.stringify(e,null,2):String(e)}function f(e){var t=parseFloat(e);return isNaN(t)?e:t}function h(e,t){for(var n=Object.create(null),a=e.split(","),i=0;i<a.length;i++)n[a[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var b=h("slot,component",!0),T=h("key,ref,slot,slot-scope,is");function v(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var g=Object.prototype.hasOwnProperty;function w(e,t){return g.call(e,t)}function k(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var _=/-(\w)/g,S=k((function(e){return e.replace(_,(function(e,t){return t?t.toUpperCase():""}))})),x=k((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),O=/\B([A-Z])/g,M=k((function(e){return e.replace(O,"-$1").toLowerCase()}));var A=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var a=arguments.length;return a?a>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function C(e,t){t=t||0;for(var n=e.length-t,a=new Array(n);n--;)a[n]=e[n+t];return a}function I(e,t){for(var n in t)e[n]=t[n];return e}function V(e){for(var t={},n=0;n<e.length;n++)e[n]&&I(t,e[n]);return t}function D(e,t,n){}var R=function(e,t,n){return!1},E=function(e){return e};function P(e,t){if(e===t)return!0;var n=u(e),a=u(t);if(!n||!a)return!n&&!a&&String(e)===String(t);try{var i=Array.isArray(e),s=Array.isArray(t);if(i&&s)return e.length===t.length&&e.every((function(e,n){return P(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(i||s)return!1;var r=Object.keys(e),o=Object.keys(t);return r.length===o.length&&r.every((function(n){return P(e[n],t[n])}))}catch(e){return!1}}function L(e,t){for(var n=0;n<e.length;n++)if(P(e[n],t))return n;return-1}function B(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var F=["component","directive","filter"],$=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],U={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:R,isReservedAttr:R,isUnknownElement:R,getTagNamespace:D,parsePlatformTagName:E,mustUseProp:R,async:!0,_lifecycleHooks:$},N=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function W(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function j(e,t,n,a){Object.defineProperty(e,t,{value:n,enumerable:!!a,writable:!0,configurable:!0})}var H=new RegExp("[^"+N.source+".$_\\d]");var G,q="__proto__"in{},z="undefined"!=typeof window,Y="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,K=Y&&WXEnvironment.platform.toLowerCase(),J=z&&window.navigator.userAgent.toLowerCase(),X=J&&/msie|trident/.test(J),Z=J&&J.indexOf("msie 9.0")>0,Q=J&&J.indexOf("edge/")>0,ee=(J&&J.indexOf("android"),J&&/iphone|ipad|ipod|ios/.test(J)||"ios"===K),te=(J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J),J&&J.match(/firefox\/(\d+)/)),ne={}.watch,ae=!1;if(z)try{var ie={};Object.defineProperty(ie,"passive",{get:function(){ae=!0}}),window.addEventListener("test-passive",null,ie)}catch(e){}var se=function(){return void 0===G&&(G=!z&&!Y&&void 0!==e&&(e.process&&"server"===e.process.env.VUE_ENV)),G},re=z&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function oe(e){return"function"==typeof e&&/native code/.test(e.toString())}var ue,de="undefined"!=typeof Symbol&&oe(Symbol)&&"undefined"!=typeof Reflect&&oe(Reflect.ownKeys);ue="undefined"!=typeof Set&&oe(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var pe=D,le=0,ce=function(){this.id=le++,this.subs=[]};ce.prototype.addSub=function(e){this.subs.push(e)},ce.prototype.removeSub=function(e){v(this.subs,e)},ce.prototype.depend=function(){ce.target&&ce.target.addDep(this)},ce.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},ce.target=null;var ye=[];function me(e){ye.push(e),ce.target=e}function fe(){ye.pop(),ce.target=ye[ye.length-1]}var he=function(e,t,n,a,i,s,r,o){this.tag=e,this.data=t,this.children=n,this.text=a,this.elm=i,this.ns=void 0,this.context=s,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=r,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=o,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},be={child:{configurable:!0}};be.child.get=function(){return this.componentInstance},Object.defineProperties(he.prototype,be);var Te=function(e){void 0===e&&(e="");var t=new he;return t.text=e,t.isComment=!0,t};function ve(e){return new he(void 0,void 0,void 0,String(e))}function ge(e){var t=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var we=Array.prototype,ke=Object.create(we);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=we[e];j(ke,e,(function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];var i,s=t.apply(this,n),r=this.__ob__;switch(e){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2)}return i&&r.observeArray(i),r.dep.notify(),s}))}));var _e=Object.getOwnPropertyNames(ke),Se=!0;function xe(e){Se=e}var Oe=function(e){this.value=e,this.dep=new ce,this.vmCount=0,j(e,"__ob__",this),Array.isArray(e)?(q?function(e,t){e.__proto__=t}(e,ke):function(e,t,n){for(var a=0,i=n.length;a<i;a++){var s=n[a];j(e,s,t[s])}}(e,ke,_e),this.observeArray(e)):this.walk(e)};function Me(e,t){var n;if(u(e)&&!(e instanceof he))return w(e,"__ob__")&&e.__ob__ instanceof Oe?n=e.__ob__:Se&&!se()&&(Array.isArray(e)||p(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new Oe(e)),t&&n&&n.vmCount++,n}function Ae(e,t,n,a,i){var s=new ce,r=Object.getOwnPropertyDescriptor(e,t);if(!r||!1!==r.configurable){var o=r&&r.get,u=r&&r.set;o&&!u||2!==arguments.length||(n=e[t]);var d=!i&&Me(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=o?o.call(e):n;return ce.target&&(s.depend(),d&&(d.dep.depend(),Array.isArray(t)&&Ve(t))),t},set:function(t){var a=o?o.call(e):n;t===a||t!=t&&a!=a||o&&!u||(u?u.call(e,t):n=t,d=!i&&Me(t),s.notify())}})}}function Ce(e,t,n){if(Array.isArray(e)&&c(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var a=e.__ob__;return e._isVue||a&&a.vmCount?n:a?(Ae(a.value,t,n),a.dep.notify(),n):(e[t]=n,n)}function Ie(e,t){if(Array.isArray(e)&&c(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||w(e,t)&&(delete e[t],n&&n.dep.notify())}}function Ve(e){for(var t=void 0,n=0,a=e.length;n<a;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Ve(t)}Oe.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)Ae(e,t[n])},Oe.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Me(e[t])};var De=U.optionMergeStrategies;function Re(e,t){if(!t)return e;for(var n,a,i,s=de?Reflect.ownKeys(t):Object.keys(t),r=0;r<s.length;r++)"__ob__"!==(n=s[r])&&(a=e[n],i=t[n],w(e,n)?a!==i&&p(a)&&p(i)&&Re(a,i):Ce(e,n,i));return e}function Ee(e,t,n){return n?function(){var a="function"==typeof t?t.call(n,n):t,i="function"==typeof e?e.call(n,n):e;return a?Re(a,i):i}:t?e?function(){return Re("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Pe(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Le(e,t,n,a){var i=Object.create(e||null);return t?I(i,t):i}De.data=function(e,t,n){return n?Ee(e,t,n):t&&"function"!=typeof t?e:Ee(e,t)},$.forEach((function(e){De[e]=Pe})),F.forEach((function(e){De[e+"s"]=Le})),De.watch=function(e,t,n,a){if(e===ne&&(e=void 0),t===ne&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var i={};for(var s in I(i,e),t){var r=i[s],o=t[s];r&&!Array.isArray(r)&&(r=[r]),i[s]=r?r.concat(o):Array.isArray(o)?o:[o]}return i},De.props=De.methods=De.inject=De.computed=function(e,t,n,a){if(!e)return t;var i=Object.create(null);return I(i,e),t&&I(i,t),i},De.provide=Ee;var Be=function(e,t){return void 0===t?e:t};function Fe(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var a,i,s={};if(Array.isArray(n))for(a=n.length;a--;)"string"==typeof(i=n[a])&&(s[S(i)]={type:null});else if(p(n))for(var r in n)i=n[r],s[S(r)]=p(i)?i:{type:i};else 0;e.props=s}}(t),function(e,t){var n=e.inject;if(n){var a=e.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)a[n[i]]={from:n[i]};else if(p(n))for(var s in n){var r=n[s];a[s]=p(r)?I({from:s},r):{from:r}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var a=t[n];"function"==typeof a&&(t[n]={bind:a,update:a})}}(t),!t._base&&(t.extends&&(e=Fe(e,t.extends,n)),t.mixins))for(var a=0,i=t.mixins.length;a<i;a++)e=Fe(e,t.mixins[a],n);var s,r={};for(s in e)o(s);for(s in t)w(e,s)||o(s);function o(a){var i=De[a]||Be;r[a]=i(e[a],t[a],n,a)}return r}function $e(e,t,n,a){if("string"==typeof n){var i=e[t];if(w(i,n))return i[n];var s=S(n);if(w(i,s))return i[s];var r=x(s);return w(i,r)?i[r]:i[n]||i[s]||i[r]}}function Ue(e,t,n,a){var i=t[e],s=!w(n,e),r=n[e],o=He(Boolean,i.type);if(o>-1)if(s&&!w(i,"default"))r=!1;else if(""===r||r===M(e)){var u=He(String,i.type);(u<0||o<u)&&(r=!0)}if(void 0===r){r=function(e,t,n){if(!w(t,"default"))return;var a=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof a&&"Function"!==We(t.type)?a.call(e):a}(a,i,e);var d=Se;xe(!0),Me(r),xe(d)}return r}var Ne=/^\s*function (\w+)/;function We(e){var t=e&&e.toString().match(Ne);return t?t[1]:""}function je(e,t){return We(e)===We(t)}function He(e,t){if(!Array.isArray(t))return je(t,e)?0:-1;for(var n=0,a=t.length;n<a;n++)if(je(t[n],e))return n;return-1}function Ge(e,t,n){me();try{if(t)for(var a=t;a=a.$parent;){var i=a.$options.errorCaptured;if(i)for(var s=0;s<i.length;s++)try{if(!1===i[s].call(a,e,t,n))return}catch(e){ze(e,a,"errorCaptured hook")}}ze(e,t,n)}finally{fe()}}function qe(e,t,n,a,i){var s;try{(s=n?e.apply(t,n):e.call(t))&&!s._isVue&&y(s)&&!s._handled&&(s.catch((function(e){return Ge(e,a,i+" (Promise/async)")})),s._handled=!0)}catch(e){Ge(e,a,i)}return s}function ze(e,t,n){if(U.errorHandler)try{return U.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Ye(t,null,"config.errorHandler")}Ye(e,t,n)}function Ye(e,t,n){if(!z&&!Y||"undefined"==typeof console)throw e;console.error(e)}var Ke,Je=!1,Xe=[],Ze=!1;function Qe(){Ze=!1;var e=Xe.slice(0);Xe.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&oe(Promise)){var et=Promise.resolve();Ke=function(){et.then(Qe),ee&&setTimeout(D)},Je=!0}else if(X||"undefined"==typeof MutationObserver||!oe(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ke=void 0!==n&&oe(n)?function(){n(Qe)}:function(){setTimeout(Qe,0)};else{var tt=1,nt=new MutationObserver(Qe),at=document.createTextNode(String(tt));nt.observe(at,{characterData:!0}),Ke=function(){tt=(tt+1)%2,at.data=String(tt)},Je=!0}function it(e,t){var n;if(Xe.push((function(){if(e)try{e.call(t)}catch(e){Ge(e,t,"nextTick")}else n&&n(t)})),Ze||(Ze=!0,Ke()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var st=new ue;function rt(e){!function e(t,n){var a,i,s=Array.isArray(t);if(!s&&!u(t)||Object.isFrozen(t)||t instanceof he)return;if(t.__ob__){var r=t.__ob__.dep.id;if(n.has(r))return;n.add(r)}if(s)for(a=t.length;a--;)e(t[a],n);else for(i=Object.keys(t),a=i.length;a--;)e(t[i[a]],n)}(e,st),st.clear()}var ot=k((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),a="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:n,capture:a,passive:t}}));function ut(e,t){function n(){var e=arguments,a=n.fns;if(!Array.isArray(a))return qe(a,null,arguments,t,"v-on handler");for(var i=a.slice(),s=0;s<i.length;s++)qe(i[s],null,e,t,"v-on handler")}return n.fns=e,n}function dt(e,t,n,a,s,o){var u,d,p,l;for(u in e)d=e[u],p=t[u],l=ot(u),i(d)||(i(p)?(i(d.fns)&&(d=e[u]=ut(d,o)),r(l.once)&&(d=e[u]=s(l.name,d,l.capture)),n(l.name,d,l.capture,l.passive,l.params)):d!==p&&(p.fns=d,e[u]=p));for(u in t)i(e[u])&&a((l=ot(u)).name,t[u],l.capture)}function pt(e,t,n){var a;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var o=e[t];function u(){n.apply(this,arguments),v(a.fns,u)}i(o)?a=ut([u]):s(o.fns)&&r(o.merged)?(a=o).fns.push(u):a=ut([o,u]),a.merged=!0,e[t]=a}function lt(e,t,n,a,i){if(s(t)){if(w(t,n))return e[n]=t[n],i||delete t[n],!0;if(w(t,a))return e[n]=t[a],i||delete t[a],!0}return!1}function ct(e){return o(e)?[ve(e)]:Array.isArray(e)?function e(t,n){var a,u,d,p,l=[];for(a=0;a<t.length;a++)i(u=t[a])||"boolean"==typeof u||(d=l.length-1,p=l[d],Array.isArray(u)?u.length>0&&(yt((u=e(u,(n||"")+"_"+a))[0])&&yt(p)&&(l[d]=ve(p.text+u[0].text),u.shift()),l.push.apply(l,u)):o(u)?yt(p)?l[d]=ve(p.text+u):""!==u&&l.push(ve(u)):yt(u)&&yt(p)?l[d]=ve(p.text+u.text):(r(t._isVList)&&s(u.tag)&&i(u.key)&&s(n)&&(u.key="__vlist"+n+"_"+a+"__"),l.push(u)));return l}(e):void 0}function yt(e){return s(e)&&s(e.text)&&!1===e.isComment}function mt(e,t){if(e){for(var n=Object.create(null),a=de?Reflect.ownKeys(e):Object.keys(e),i=0;i<a.length;i++){var s=a[i];if("__ob__"!==s){for(var r=e[s].from,o=t;o;){if(o._provided&&w(o._provided,r)){n[s]=o._provided[r];break}o=o.$parent}if(!o)if("default"in e[s]){var u=e[s].default;n[s]="function"==typeof u?u.call(t):u}else 0}}return n}}function ft(e,t){if(!e||!e.length)return{};for(var n={},a=0,i=e.length;a<i;a++){var s=e[a],r=s.data;if(r&&r.attrs&&r.attrs.slot&&delete r.attrs.slot,s.context!==t&&s.fnContext!==t||!r||null==r.slot)(n.default||(n.default=[])).push(s);else{var o=r.slot,u=n[o]||(n[o]=[]);"template"===s.tag?u.push.apply(u,s.children||[]):u.push(s)}}for(var d in n)n[d].every(ht)&&delete n[d];return n}function ht(e){return e.isComment&&!e.asyncFactory||" "===e.text}function bt(e){return e.isComment&&e.asyncFactory}function Tt(e,t,n){var i,s=Object.keys(t).length>0,r=e?!!e.$stable:!s,o=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(r&&n&&n!==a&&o===n.$key&&!s&&!n.$hasNormal)return n;for(var u in i={},e)e[u]&&"$"!==u[0]&&(i[u]=vt(t,u,e[u]))}else i={};for(var d in t)d in i||(i[d]=gt(t,d));return e&&Object.isExtensible(e)&&(e._normalized=i),j(i,"$stable",r),j(i,"$key",o),j(i,"$hasNormal",s),i}function vt(e,t,n){var a=function(){var e=arguments.length?n.apply(null,arguments):n({}),t=(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:ct(e))&&e[0];return e&&(!t||t.isComment&&!bt(t))?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:a,enumerable:!0,configurable:!0}),a}function gt(e,t){return function(){return e[t]}}function wt(e,t){var n,a,i,r,o;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),a=0,i=e.length;a<i;a++)n[a]=t(e[a],a);else if("number"==typeof e)for(n=new Array(e),a=0;a<e;a++)n[a]=t(a+1,a);else if(u(e))if(de&&e[Symbol.iterator]){n=[];for(var d=e[Symbol.iterator](),p=d.next();!p.done;)n.push(t(p.value,n.length)),p=d.next()}else for(r=Object.keys(e),n=new Array(r.length),a=0,i=r.length;a<i;a++)o=r[a],n[a]=t(e[o],o,a);return s(n)||(n=[]),n._isVList=!0,n}function kt(e,t,n,a){var i,s=this.$scopedSlots[e];s?(n=n||{},a&&(n=I(I({},a),n)),i=s(n)||("function"==typeof t?t():t)):i=this.$slots[e]||("function"==typeof t?t():t);var r=n&&n.slot;return r?this.$createElement("template",{slot:r},i):i}function _t(e){return $e(this.$options,"filters",e)||E}function St(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function xt(e,t,n,a,i){var s=U.keyCodes[t]||n;return i&&a&&!U.keyCodes[t]?St(i,a):s?St(s,e):a?M(a)!==t:void 0===e}function Ot(e,t,n,a,i){if(n)if(u(n)){var s;Array.isArray(n)&&(n=V(n));var r=function(r){if("class"===r||"style"===r||T(r))s=e;else{var o=e.attrs&&e.attrs.type;s=a||U.mustUseProp(t,o,r)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var u=S(r),d=M(r);u in s||d in s||(s[r]=n[r],i&&((e.on||(e.on={}))["update:"+r]=function(e){n[r]=e}))};for(var o in n)r(o)}else;return e}function Mt(e,t){var n=this._staticTrees||(this._staticTrees=[]),a=n[e];return a&&!t||Ct(a=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),a}function At(e,t,n){return Ct(e,"__once__"+t+(n?"_"+n:""),!0),e}function Ct(e,t,n){if(Array.isArray(e))for(var a=0;a<e.length;a++)e[a]&&"string"!=typeof e[a]&&It(e[a],t+"_"+a,n);else It(e,t,n)}function It(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Vt(e,t){if(t)if(p(t)){var n=e.on=e.on?I({},e.on):{};for(var a in t){var i=n[a],s=t[a];n[a]=i?[].concat(i,s):s}}else;return e}function Dt(e,t,n,a){t=t||{$stable:!n};for(var i=0;i<e.length;i++){var s=e[i];Array.isArray(s)?Dt(s,t,n):s&&(s.proxy&&(s.fn.proxy=!0),t[s.key]=s.fn)}return a&&(t.$key=a),t}function Rt(e,t){for(var n=0;n<t.length;n+=2){var a=t[n];"string"==typeof a&&a&&(e[t[n]]=t[n+1])}return e}function Et(e,t){return"string"==typeof e?t+e:e}function Pt(e){e._o=At,e._n=f,e._s=m,e._l=wt,e._t=kt,e._q=P,e._i=L,e._m=Mt,e._f=_t,e._k=xt,e._b=Ot,e._v=ve,e._e=Te,e._u=Dt,e._g=Vt,e._d=Rt,e._p=Et}function Lt(e,t,n,i,s){var o,u=this,d=s.options;w(i,"_uid")?(o=Object.create(i))._original=i:(o=i,i=i._original);var p=r(d._compiled),l=!p;this.data=e,this.props=t,this.children=n,this.parent=i,this.listeners=e.on||a,this.injections=mt(d.inject,i),this.slots=function(){return u.$slots||Tt(e.scopedSlots,u.$slots=ft(n,i)),u.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return Tt(e.scopedSlots,this.slots())}}),p&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=Tt(e.scopedSlots,this.$slots)),d._scopeId?this._c=function(e,t,n,a){var s=jt(o,e,t,n,a,l);return s&&!Array.isArray(s)&&(s.fnScopeId=d._scopeId,s.fnContext=i),s}:this._c=function(e,t,n,a){return jt(o,e,t,n,a,l)}}function Bt(e,t,n,a,i){var s=ge(e);return s.fnContext=n,s.fnOptions=a,t.slot&&((s.data||(s.data={})).slot=t.slot),s}function Ft(e,t){for(var n in t)e[S(n)]=t[n]}Pt(Lt.prototype);var $t={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;$t.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},a=e.data.inlineTemplate;s(a)&&(n.render=a.render,n.staticRenderFns=a.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Zt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,i,s){0;var r=i.data.scopedSlots,o=e.$scopedSlots,u=!!(r&&!r.$stable||o!==a&&!o.$stable||r&&e.$scopedSlots.$key!==r.$key||!r&&e.$scopedSlots.$key),d=!!(s||e.$options._renderChildren||u);e.$options._parentVnode=i,e.$vnode=i,e._vnode&&(e._vnode.parent=i);if(e.$options._renderChildren=s,e.$attrs=i.data.attrs||a,e.$listeners=n||a,t&&e.$options.props){xe(!1);for(var p=e._props,l=e.$options._propKeys||[],c=0;c<l.length;c++){var y=l[c],m=e.$options.props;p[y]=Ue(y,m,t,e)}xe(!0),e.$options.propsData=t}n=n||a;var f=e.$options._parentListeners;e.$options._parentListeners=n,Xt(e,n,f),d&&(e.$slots=ft(s,i.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,nn(a,"mounted")),e.data.keepAlive&&(n._isMounted?((t=a)._inactive=!1,sn.push(t)):tn(a,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,en(t)))return;if(!t._inactive){t._inactive=!0;for(var a=0;a<t.$children.length;a++)e(t.$children[a]);nn(t,"deactivated")}}(t,!0):t.$destroy())}},Ut=Object.keys($t);function Nt(e,t,n,o,d){if(!i(e)){var p=n.$options._base;if(u(e)&&(e=p.extend(e)),"function"==typeof e){var l;if(i(e.cid)&&void 0===(e=function(e,t){if(r(e.error)&&s(e.errorComp))return e.errorComp;if(s(e.resolved))return e.resolved;var n=Gt;n&&s(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(r(e.loading)&&s(e.loadingComp))return e.loadingComp;if(n&&!s(e.owners)){var a=e.owners=[n],o=!0,d=null,p=null;n.$on("hook:destroyed",(function(){return v(a,n)}));var l=function(e){for(var t=0,n=a.length;t<n;t++)a[t].$forceUpdate();e&&(a.length=0,null!==d&&(clearTimeout(d),d=null),null!==p&&(clearTimeout(p),p=null))},c=B((function(n){e.resolved=qt(n,t),o?a.length=0:l(!0)})),m=B((function(t){s(e.errorComp)&&(e.error=!0,l(!0))})),f=e(c,m);return u(f)&&(y(f)?i(e.resolved)&&f.then(c,m):y(f.component)&&(f.component.then(c,m),s(f.error)&&(e.errorComp=qt(f.error,t)),s(f.loading)&&(e.loadingComp=qt(f.loading,t),0===f.delay?e.loading=!0:d=setTimeout((function(){d=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,l(!1))}),f.delay||200)),s(f.timeout)&&(p=setTimeout((function(){p=null,i(e.resolved)&&m(null)}),f.timeout)))),o=!1,e.loading?e.loadingComp:e.resolved}}(l=e,p)))return function(e,t,n,a,i){var s=Te();return s.asyncFactory=e,s.asyncMeta={data:t,context:n,children:a,tag:i},s}(l,t,n,o,d);t=t||{},xn(e),s(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",a=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var i=t.on||(t.on={}),r=i[a],o=t.model.callback;s(r)?(Array.isArray(r)?-1===r.indexOf(o):r!==o)&&(i[a]=[o].concat(r)):i[a]=o}(e.options,t);var c=function(e,t,n){var a=t.options.props;if(!i(a)){var r={},o=e.attrs,u=e.props;if(s(o)||s(u))for(var d in a){var p=M(d);lt(r,u,d,p,!0)||lt(r,o,d,p,!1)}return r}}(t,e);if(r(e.options.functional))return function(e,t,n,i,r){var o=e.options,u={},d=o.props;if(s(d))for(var p in d)u[p]=Ue(p,d,t||a);else s(n.attrs)&&Ft(u,n.attrs),s(n.props)&&Ft(u,n.props);var l=new Lt(n,u,r,i,e),c=o.render.call(null,l._c,l);if(c instanceof he)return Bt(c,n,l.parent,o,l);if(Array.isArray(c)){for(var y=ct(c)||[],m=new Array(y.length),f=0;f<y.length;f++)m[f]=Bt(y[f],n,l.parent,o,l);return m}}(e,c,t,n,o);var m=t.on;if(t.on=t.nativeOn,r(e.options.abstract)){var f=t.slot;t={},f&&(t.slot=f)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Ut.length;n++){var a=Ut[n],i=t[a],s=$t[a];i===s||i&&i._merged||(t[a]=i?Wt(s,i):s)}}(t);var h=e.options.name||d;return new he("vue-component-"+e.cid+(h?"-"+h:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:c,listeners:m,tag:d,children:o},l)}}}function Wt(e,t){var n=function(n,a){e(n,a),t(n,a)};return n._merged=!0,n}function jt(e,t,n,a,d,p){return(Array.isArray(n)||o(n))&&(d=a,a=n,n=void 0),r(p)&&(d=2),function(e,t,n,a,o){if(s(n)&&s(n.__ob__))return Te();s(n)&&s(n.is)&&(t=n.is);if(!t)return Te();0;Array.isArray(a)&&"function"==typeof a[0]&&((n=n||{}).scopedSlots={default:a[0]},a.length=0);2===o?a=ct(a):1===o&&(a=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(a));var d,p;if("string"==typeof t){var l;p=e.$vnode&&e.$vnode.ns||U.getTagNamespace(t),d=U.isReservedTag(t)?new he(U.parsePlatformTagName(t),n,a,void 0,void 0,e):n&&n.pre||!s(l=$e(e.$options,"components",t))?new he(t,n,a,void 0,void 0,e):Nt(l,n,e,a,t)}else d=Nt(t,n,e,a);return Array.isArray(d)?d:s(d)?(s(p)&&function e(t,n,a){t.ns=n,"foreignObject"===t.tag&&(n=void 0,a=!0);if(s(t.children))for(var o=0,u=t.children.length;o<u;o++){var d=t.children[o];s(d.tag)&&(i(d.ns)||r(a)&&"svg"!==d.tag)&&e(d,n,a)}}(d,p),s(n)&&function(e){u(e.style)&&rt(e.style);u(e.class)&&rt(e.class)}(n),d):Te()}(e,t,n,a,d)}var Ht,Gt=null;function qt(e,t){return(e.__esModule||de&&"Module"===e[Symbol.toStringTag])&&(e=e.default),u(e)?t.extend(e):e}function zt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(s(n)&&(s(n.componentOptions)||bt(n)))return n}}function Yt(e,t){Ht.$on(e,t)}function Kt(e,t){Ht.$off(e,t)}function Jt(e,t){var n=Ht;return function a(){var i=t.apply(null,arguments);null!==i&&n.$off(e,a)}}function Xt(e,t,n){Ht=e,dt(t,n||{},Yt,Kt,Jt,e),Ht=void 0}var Zt=null;function Qt(e){var t=Zt;return Zt=e,function(){Zt=t}}function en(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function tn(e,t){if(t){if(e._directInactive=!1,en(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)tn(e.$children[n]);nn(e,"activated")}}function nn(e,t){me();var n=e.$options[t],a=t+" hook";if(n)for(var i=0,s=n.length;i<s;i++)qe(n[i],e,null,e,a);e._hasHookEvent&&e.$emit("hook:"+t),fe()}var an=[],sn=[],rn={},on=!1,un=!1,dn=0;var pn=0,ln=Date.now;if(z&&!X){var cn=window.performance;cn&&"function"==typeof cn.now&&ln()>document.createEvent("Event").timeStamp&&(ln=function(){return cn.now()})}function yn(){var e,t;for(pn=ln(),un=!0,an.sort((function(e,t){return e.id-t.id})),dn=0;dn<an.length;dn++)(e=an[dn]).before&&e.before(),t=e.id,rn[t]=null,e.run();var n=sn.slice(),a=an.slice();dn=an.length=sn.length=0,rn={},on=un=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,tn(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],a=n.vm;a._watcher===n&&a._isMounted&&!a._isDestroyed&&nn(a,"updated")}}(a),re&&U.devtools&&re.emit("flush")}var mn=0,fn=function(e,t,n,a,i){this.vm=e,i&&(e._watcher=this),e._watchers.push(this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++mn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ue,this.newDepIds=new ue,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!H.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=D)),this.value=this.lazy?void 0:this.get()};fn.prototype.get=function(){var e;me(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Ge(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&rt(e),fe(),this.cleanupDeps()}return e},fn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},fn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},fn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==rn[t]){if(rn[t]=!0,un){for(var n=an.length-1;n>dn&&an[n].id>e.id;)n--;an.splice(n+1,0,e)}else an.push(e);on||(on=!0,it(yn))}}(this)},fn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||u(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'+this.expression+'"';qe(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},fn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},fn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},fn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||v(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var hn={enumerable:!0,configurable:!0,get:D,set:D};function bn(e,t,n){hn.get=function(){return this[t][n]},hn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,hn)}function Tn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},a=e._props={},i=e.$options._propKeys=[];e.$parent&&xe(!1);var s=function(s){i.push(s);var r=Ue(s,t,n,e);Ae(a,s,r),s in e||bn(e,"_props",s)};for(var r in t)s(r);xe(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?D:A(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;p(t=e._data="function"==typeof t?function(e,t){me();try{return e.call(t,t)}catch(e){return Ge(e,t,"data()"),{}}finally{fe()}}(t,e):t||{})||(t={});var n=Object.keys(t),a=e.$options.props,i=(e.$options.methods,n.length);for(;i--;){var s=n[i];0,a&&w(a,s)||W(s)||bn(e,"_data",s)}Me(t,!0)}(e):Me(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),a=se();for(var i in t){var s=t[i],r="function"==typeof s?s:s.get;0,a||(n[i]=new fn(e,r||D,D,vn)),i in e||gn(e,i,s)}}(e,t.computed),t.watch&&t.watch!==ne&&function(e,t){for(var n in t){var a=t[n];if(Array.isArray(a))for(var i=0;i<a.length;i++)_n(e,n,a[i]);else _n(e,n,a)}}(e,t.watch)}var vn={lazy:!0};function gn(e,t,n){var a=!se();"function"==typeof n?(hn.get=a?wn(t):kn(n),hn.set=D):(hn.get=n.get?a&&!1!==n.cache?wn(t):kn(n.get):D,hn.set=n.set||D),Object.defineProperty(e,t,hn)}function wn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),ce.target&&t.depend(),t.value}}function kn(e){return function(){return e.call(this,this)}}function _n(e,t,n,a){return p(n)&&(a=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,a)}var Sn=0;function xn(e){var t=e.options;if(e.super){var n=xn(e.super);if(n!==e.superOptions){e.superOptions=n;var a=function(e){var t,n=e.options,a=e.sealedOptions;for(var i in n)n[i]!==a[i]&&(t||(t={}),t[i]=n[i]);return t}(e);a&&I(e.extendOptions,a),(t=e.options=Fe(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function On(e){this._init(e)}function Mn(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,a=n.cid,i=e._Ctor||(e._Ctor={});if(i[a])return i[a];var s=e.name||n.options.name;var r=function(e){this._init(e)};return(r.prototype=Object.create(n.prototype)).constructor=r,r.cid=t++,r.options=Fe(n.options,e),r.super=n,r.options.props&&function(e){var t=e.options.props;for(var n in t)bn(e.prototype,"_props",n)}(r),r.options.computed&&function(e){var t=e.options.computed;for(var n in t)gn(e.prototype,n,t[n])}(r),r.extend=n.extend,r.mixin=n.mixin,r.use=n.use,F.forEach((function(e){r[e]=n[e]})),s&&(r.options.components[s]=r),r.superOptions=n.options,r.extendOptions=e,r.sealedOptions=I({},r.options),i[a]=r,r}}function An(e){return e&&(e.Ctor.options.name||e.tag)}function Cn(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!l(e)&&e.test(t)}function In(e,t){var n=e.cache,a=e.keys,i=e._vnode;for(var s in n){var r=n[s];if(r){var o=r.name;o&&!t(o)&&Vn(n,s,a,i)}}}function Vn(e,t,n,a){var i=e[t];!i||a&&i.tag===a.tag||i.componentInstance.$destroy(),e[t]=null,v(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=Sn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),a=t._parentVnode;n.parent=t.parent,n._parentVnode=a;var i=a.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Fe(xn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Xt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,i=n&&n.context;e.$slots=ft(t._renderChildren,i),e.$scopedSlots=a,e._c=function(t,n,a,i){return jt(e,t,n,a,i,!1)},e.$createElement=function(t,n,a,i){return jt(e,t,n,a,i,!0)};var s=n&&n.data;Ae(e,"$attrs",s&&s.attrs||a,null,!0),Ae(e,"$listeners",t._parentListeners||a,null,!0)}(t),nn(t,"beforeCreate"),function(e){var t=mt(e.$options.inject,e);t&&(xe(!1),Object.keys(t).forEach((function(n){Ae(e,n,t[n])})),xe(!0))}(t),Tn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),nn(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(On),function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Ce,e.prototype.$delete=Ie,e.prototype.$watch=function(e,t,n){if(p(t))return _n(this,e,t,n);(n=n||{}).user=!0;var a=new fn(this,e,t,n);if(n.immediate){var i='callback for immediate watcher "'+a.expression+'"';me(),qe(t,this,[a.value],this,i),fe()}return function(){a.teardown()}}}(On),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var a=this;if(Array.isArray(e))for(var i=0,s=e.length;i<s;i++)a.$on(e[i],n);else(a._events[e]||(a._events[e]=[])).push(n),t.test(e)&&(a._hasHookEvent=!0);return a},e.prototype.$once=function(e,t){var n=this;function a(){n.$off(e,a),t.apply(n,arguments)}return a.fn=t,n.$on(e,a),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var a=0,i=e.length;a<i;a++)n.$off(e[a],t);return n}var s,r=n._events[e];if(!r)return n;if(!t)return n._events[e]=null,n;for(var o=r.length;o--;)if((s=r[o])===t||s.fn===t){r.splice(o,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?C(n):n;for(var a=C(arguments,1),i='event handler for "'+e+'"',s=0,r=n.length;s<r;s++)qe(n[s],t,a,t,i)}return t}}(On),function(e){e.prototype._update=function(e,t){var n=this,a=n.$el,i=n._vnode,s=Qt(n);n._vnode=e,n.$el=i?n.__patch__(i,e):n.__patch__(n.$el,e,t,!1),s(),a&&(a.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){nn(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||v(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),nn(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(On),function(e){Pt(e.prototype),e.prototype.$nextTick=function(e){return it(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,a=n.render,i=n._parentVnode;i&&(t.$scopedSlots=Tt(i.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=i;try{Gt=t,e=a.call(t._renderProxy,t.$createElement)}catch(n){Ge(n,t,"render"),e=t._vnode}finally{Gt=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof he||(e=Te()),e.parent=i,e}}(On);var Dn=[String,RegExp,Array],Rn={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Dn,exclude:Dn,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,t=this.keys,n=this.vnodeToCache,a=this.keyToCache;if(n){var i=n.tag,s=n.componentInstance,r=n.componentOptions;e[a]={name:An(r),tag:i,componentInstance:s},t.push(a),this.max&&t.length>parseInt(this.max)&&Vn(e,t[0],t,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Vn(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){In(e,(function(e){return Cn(t,e)}))})),this.$watch("exclude",(function(t){In(e,(function(e){return!Cn(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=zt(e),n=t&&t.componentOptions;if(n){var a=An(n),i=this.include,s=this.exclude;if(i&&(!a||!Cn(i,a))||s&&a&&Cn(s,a))return t;var r=this.cache,o=this.keys,u=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;r[u]?(t.componentInstance=r[u].componentInstance,v(o,u),o.push(u)):(this.vnodeToCache=t,this.keyToCache=u),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return U}};Object.defineProperty(e,"config",t),e.util={warn:pe,extend:I,mergeOptions:Fe,defineReactive:Ae},e.set=Ce,e.delete=Ie,e.nextTick=it,e.observable=function(e){return Me(e),e},e.options=Object.create(null),F.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,I(e.options.components,Rn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=C(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Fe(this.options,e),this}}(e),Mn(e),function(e){F.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&p(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(On),Object.defineProperty(On.prototype,"$isServer",{get:se}),Object.defineProperty(On.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(On,"FunctionalRenderContext",{value:Lt}),On.version="2.6.13";var En=h("style,class"),Pn=h("input,textarea,option,select,progress"),Ln=function(e,t,n){return"value"===n&&Pn(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Bn=h("contenteditable,draggable,spellcheck"),Fn=h("events,caret,typing,plaintext-only"),$n=h("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Un="http://www.w3.org/1999/xlink",Nn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Wn=function(e){return Nn(e)?e.slice(6,e.length):""},jn=function(e){return null==e||!1===e};function Hn(e){for(var t=e.data,n=e,a=e;s(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(t=Gn(a.data,t));for(;s(n=n.parent);)n&&n.data&&(t=Gn(t,n.data));return function(e,t){if(s(e)||s(t))return qn(e,zn(t));return""}(t.staticClass,t.class)}function Gn(e,t){return{staticClass:qn(e.staticClass,t.staticClass),class:s(e.class)?[e.class,t.class]:t.class}}function qn(e,t){return e?t?e+" "+t:e:t||""}function zn(e){return Array.isArray(e)?function(e){for(var t,n="",a=0,i=e.length;a<i;a++)s(t=zn(e[a]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):u(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Yn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Kn=h("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Jn=h("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Xn=function(e){return Kn(e)||Jn(e)};function Zn(e){return Jn(e)?"svg":"math"===e?"math":void 0}var Qn=Object.create(null);var ea=h("text,number,password,search,email,tel,url");function ta(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}var na=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Yn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),aa={create:function(e,t){ia(t)},update:function(e,t){e.data.ref!==t.data.ref&&(ia(e,!0),ia(t))},destroy:function(e){ia(e,!0)}};function ia(e,t){var n=e.data.ref;if(s(n)){var a=e.context,i=e.componentInstance||e.elm,r=a.$refs;t?Array.isArray(r[n])?v(r[n],i):r[n]===i&&(r[n]=void 0):e.data.refInFor?Array.isArray(r[n])?r[n].indexOf(i)<0&&r[n].push(i):r[n]=[i]:r[n]=i}}var sa=new he("",{},[]),ra=["create","activate","update","remove","destroy"];function oa(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&s(e.data)===s(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,a=s(n=e.data)&&s(n=n.attrs)&&n.type,i=s(n=t.data)&&s(n=n.attrs)&&n.type;return a===i||ea(a)&&ea(i)}(e,t)||r(e.isAsyncPlaceholder)&&i(t.asyncFactory.error))}function ua(e,t,n){var a,i,r={};for(a=t;a<=n;++a)s(i=e[a].key)&&(r[i]=a);return r}var da={create:pa,update:pa,destroy:function(e){pa(e,sa)}};function pa(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,a,i,s=e===sa,r=t===sa,o=ca(e.data.directives,e.context),u=ca(t.data.directives,t.context),d=[],p=[];for(n in u)a=o[n],i=u[n],a?(i.oldValue=a.value,i.oldArg=a.arg,ma(i,"update",t,e),i.def&&i.def.componentUpdated&&p.push(i)):(ma(i,"bind",t,e),i.def&&i.def.inserted&&d.push(i));if(d.length){var l=function(){for(var n=0;n<d.length;n++)ma(d[n],"inserted",t,e)};s?pt(t,"insert",l):l()}p.length&&pt(t,"postpatch",(function(){for(var n=0;n<p.length;n++)ma(p[n],"componentUpdated",t,e)}));if(!s)for(n in o)u[n]||ma(o[n],"unbind",e,e,r)}(e,t)}var la=Object.create(null);function ca(e,t){var n,a,i=Object.create(null);if(!e)return i;for(n=0;n<e.length;n++)(a=e[n]).modifiers||(a.modifiers=la),i[ya(a)]=a,a.def=$e(t.$options,"directives",a.name);return i}function ya(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function ma(e,t,n,a,i){var s=e.def&&e.def[t];if(s)try{s(n.elm,e,n,a,i)}catch(a){Ge(a,n.context,"directive "+e.name+" "+t+" hook")}}var fa=[aa,da];function ha(e,t){var n=t.componentOptions;if(!(s(n)&&!1===n.Ctor.options.inheritAttrs||i(e.data.attrs)&&i(t.data.attrs))){var a,r,o=t.elm,u=e.data.attrs||{},d=t.data.attrs||{};for(a in s(d.__ob__)&&(d=t.data.attrs=I({},d)),d)r=d[a],u[a]!==r&&ba(o,a,r,t.data.pre);for(a in(X||Q)&&d.value!==u.value&&ba(o,"value",d.value),u)i(d[a])&&(Nn(a)?o.removeAttributeNS(Un,Wn(a)):Bn(a)||o.removeAttribute(a))}}function ba(e,t,n,a){a||e.tagName.indexOf("-")>-1?Ta(e,t,n):$n(t)?jn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):Bn(t)?e.setAttribute(t,function(e,t){return jn(t)||"false"===t?"false":"contenteditable"===e&&Fn(t)?t:"true"}(t,n)):Nn(t)?jn(n)?e.removeAttributeNS(Un,Wn(t)):e.setAttributeNS(Un,t,n):Ta(e,t,n)}function Ta(e,t,n){if(jn(n))e.removeAttribute(t);else{if(X&&!Z&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var a=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(t,n)}}var va={create:ha,update:ha};function ga(e,t){var n=t.elm,a=t.data,r=e.data;if(!(i(a.staticClass)&&i(a.class)&&(i(r)||i(r.staticClass)&&i(r.class)))){var o=Hn(t),u=n._transitionClasses;s(u)&&(o=qn(o,zn(u))),o!==n._prevClass&&(n.setAttribute("class",o),n._prevClass=o)}}var wa,ka,_a,Sa,xa,Oa,Ma={create:ga,update:ga},Aa=/[\w).+\-_$\]]/;function Ca(e){var t,n,a,i,s,r=!1,o=!1,u=!1,d=!1,p=0,l=0,c=0,y=0;for(a=0;a<e.length;a++)if(n=t,t=e.charCodeAt(a),r)39===t&&92!==n&&(r=!1);else if(o)34===t&&92!==n&&(o=!1);else if(u)96===t&&92!==n&&(u=!1);else if(d)47===t&&92!==n&&(d=!1);else if(124!==t||124===e.charCodeAt(a+1)||124===e.charCodeAt(a-1)||p||l||c){switch(t){case 34:o=!0;break;case 39:r=!0;break;case 96:u=!0;break;case 40:c++;break;case 41:c--;break;case 91:l++;break;case 93:l--;break;case 123:p++;break;case 125:p--}if(47===t){for(var m=a-1,f=void 0;m>=0&&" "===(f=e.charAt(m));m--);f&&Aa.test(f)||(d=!0)}}else void 0===i?(y=a+1,i=e.slice(0,a).trim()):h();function h(){(s||(s=[])).push(e.slice(y,a).trim()),y=a+1}if(void 0===i?i=e.slice(0,a).trim():0!==y&&h(),s)for(a=0;a<s.length;a++)i=Ia(i,s[a]);return i}function Ia(e,t){var n=t.indexOf("(");if(n<0)return'_f("'+t+'")('+e+")";var a=t.slice(0,n),i=t.slice(n+1);return'_f("'+a+'")('+e+(")"!==i?","+i:i)}function Va(e,t){console.error("[Vue compiler]: "+e)}function Da(e,t){return e?e.map((function(e){return e[t]})).filter((function(e){return e})):[]}function Ra(e,t,n,a,i){(e.props||(e.props=[])).push(Wa({name:t,value:n,dynamic:i},a)),e.plain=!1}function Ea(e,t,n,a,i){(i?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(Wa({name:t,value:n,dynamic:i},a)),e.plain=!1}function Pa(e,t,n,a){e.attrsMap[t]=n,e.attrsList.push(Wa({name:t,value:n},a))}function La(e,t,n,a,i,s,r,o){(e.directives||(e.directives=[])).push(Wa({name:t,rawName:n,value:a,arg:i,isDynamicArg:s,modifiers:r},o)),e.plain=!1}function Ba(e,t,n){return n?"_p("+t+',"'+e+'")':e+t}function Fa(e,t,n,i,s,r,o,u){var d;(i=i||a).right?u?t="("+t+")==='click'?'contextmenu':("+t+")":"click"===t&&(t="contextmenu",delete i.right):i.middle&&(u?t="("+t+")==='click'?'mouseup':("+t+")":"click"===t&&(t="mouseup")),i.capture&&(delete i.capture,t=Ba("!",t,u)),i.once&&(delete i.once,t=Ba("~",t,u)),i.passive&&(delete i.passive,t=Ba("&",t,u)),i.native?(delete i.native,d=e.nativeEvents||(e.nativeEvents={})):d=e.events||(e.events={});var p=Wa({value:n.trim(),dynamic:u},o);i!==a&&(p.modifiers=i);var l=d[t];Array.isArray(l)?s?l.unshift(p):l.push(p):d[t]=l?s?[p,l]:[l,p]:p,e.plain=!1}function $a(e,t,n){var a=Ua(e,":"+t)||Ua(e,"v-bind:"+t);if(null!=a)return Ca(a);if(!1!==n){var i=Ua(e,t);if(null!=i)return JSON.stringify(i)}}function Ua(e,t,n){var a;if(null!=(a=e.attrsMap[t]))for(var i=e.attrsList,s=0,r=i.length;s<r;s++)if(i[s].name===t){i.splice(s,1);break}return n&&delete e.attrsMap[t],a}function Na(e,t){for(var n=e.attrsList,a=0,i=n.length;a<i;a++){var s=n[a];if(t.test(s.name))return n.splice(a,1),s}}function Wa(e,t){return t&&(null!=t.start&&(e.start=t.start),null!=t.end&&(e.end=t.end)),e}function ja(e,t,n){var a=n||{},i=a.number,s="$$v";a.trim&&(s="(typeof $$v === 'string'? $$v.trim(): $$v)"),i&&(s="_n("+s+")");var r=Ha(t,s);e.model={value:"("+t+")",expression:JSON.stringify(t),callback:"function ($$v) {"+r+"}"}}function Ha(e,t){var n=function(e){if(e=e.trim(),wa=e.length,e.indexOf("[")<0||e.lastIndexOf("]")<wa-1)return(Sa=e.lastIndexOf("."))>-1?{exp:e.slice(0,Sa),key:'"'+e.slice(Sa+1)+'"'}:{exp:e,key:null};ka=e,Sa=xa=Oa=0;for(;!qa();)za(_a=Ga())?Ka(_a):91===_a&&Ya(_a);return{exp:e.slice(0,xa),key:e.slice(xa+1,Oa)}}(e);return null===n.key?e+"="+t:"$set("+n.exp+", "+n.key+", "+t+")"}function Ga(){return ka.charCodeAt(++Sa)}function qa(){return Sa>=wa}function za(e){return 34===e||39===e}function Ya(e){var t=1;for(xa=Sa;!qa();)if(za(e=Ga()))Ka(e);else if(91===e&&t++,93===e&&t--,0===t){Oa=Sa;break}}function Ka(e){for(var t=e;!qa()&&(e=Ga())!==t;);}var Ja;function Xa(e,t,n){var a=Ja;return function i(){var s=t.apply(null,arguments);null!==s&&ei(e,i,n,a)}}var Za=Je&&!(te&&Number(te[1])<=53);function Qa(e,t,n,a){if(Za){var i=pn,s=t;t=s._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return s.apply(this,arguments)}}Ja.addEventListener(e,t,ae?{capture:n,passive:a}:n)}function ei(e,t,n,a){(a||Ja).removeEventListener(e,t._wrapper||t,n)}function ti(e,t){if(!i(e.data.on)||!i(t.data.on)){var n=t.data.on||{},a=e.data.on||{};Ja=t.elm,function(e){if(s(e.__r)){var t=X?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}s(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),dt(n,a,Qa,ei,Xa,t.context),Ja=void 0}}var ni,ai={create:ti,update:ti};function ii(e,t){if(!i(e.data.domProps)||!i(t.data.domProps)){var n,a,r=t.elm,o=e.data.domProps||{},u=t.data.domProps||{};for(n in s(u.__ob__)&&(u=t.data.domProps=I({},u)),o)n in u||(r[n]="");for(n in u){if(a=u[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),a===o[n])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===n&&"PROGRESS"!==r.tagName){r._value=a;var d=i(a)?"":String(a);si(r,d)&&(r.value=d)}else if("innerHTML"===n&&Jn(r.tagName)&&i(r.innerHTML)){(ni=ni||document.createElement("div")).innerHTML="<svg>"+a+"</svg>";for(var p=ni.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;p.firstChild;)r.appendChild(p.firstChild)}else if(a!==o[n])try{r[n]=a}catch(e){}}}}function si(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,a=e._vModifiers;if(s(a)){if(a.number)return f(n)!==f(t);if(a.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var ri={create:ii,update:ii},oi=k((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(n);a.length>1&&(t[a[0].trim()]=a[1].trim())}})),t}));function ui(e){var t=di(e.style);return e.staticStyle?I(e.staticStyle,t):t}function di(e){return Array.isArray(e)?V(e):"string"==typeof e?oi(e):e}var pi,li=/^--/,ci=/\s*!important$/,yi=function(e,t,n){if(li.test(t))e.style.setProperty(t,n);else if(ci.test(n))e.style.setProperty(M(t),n.replace(ci,""),"important");else{var a=fi(t);if(Array.isArray(n))for(var i=0,s=n.length;i<s;i++)e.style[a]=n[i];else e.style[a]=n}},mi=["Webkit","Moz","ms"],fi=k((function(e){if(pi=pi||document.createElement("div").style,"filter"!==(e=S(e))&&e in pi)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<mi.length;n++){var a=mi[n]+t;if(a in pi)return a}}));function hi(e,t){var n=t.data,a=e.data;if(!(i(n.staticStyle)&&i(n.style)&&i(a.staticStyle)&&i(a.style))){var r,o,u=t.elm,d=a.staticStyle,p=a.normalizedStyle||a.style||{},l=d||p,c=di(t.data.style)||{};t.data.normalizedStyle=s(c.__ob__)?I({},c):c;var y=function(e,t){var n,a={};if(t)for(var i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=ui(i.data))&&I(a,n);(n=ui(e.data))&&I(a,n);for(var s=e;s=s.parent;)s.data&&(n=ui(s.data))&&I(a,n);return a}(t,!0);for(o in l)i(y[o])&&yi(u,o,"");for(o in y)(r=y[o])!==l[o]&&yi(u,o,null==r?"":r)}}var bi={create:hi,update:hi},Ti=/\s+/;function vi(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Ti).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function gi(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Ti).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",a=" "+t+" ";n.indexOf(a)>=0;)n=n.replace(a," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function wi(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&I(t,ki(e.name||"v")),I(t,e),t}return"string"==typeof e?ki(e):void 0}}var ki=k((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),_i=z&&!Z,Si="transition",xi="transitionend",Oi="animation",Mi="animationend";_i&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Si="WebkitTransition",xi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Oi="WebkitAnimation",Mi="webkitAnimationEnd"));var Ai=z?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Ci(e){Ai((function(){Ai(e)}))}function Ii(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),vi(e,t))}function Vi(e,t){e._transitionClasses&&v(e._transitionClasses,t),gi(e,t)}function Di(e,t,n){var a=Ei(e,t),i=a.type,s=a.timeout,r=a.propCount;if(!i)return n();var o="transition"===i?xi:Mi,u=0,d=function(){e.removeEventListener(o,p),n()},p=function(t){t.target===e&&++u>=r&&d()};setTimeout((function(){u<r&&d()}),s+1),e.addEventListener(o,p)}var Ri=/\b(transform|all)(,|$)/;function Ei(e,t){var n,a=window.getComputedStyle(e),i=(a[Si+"Delay"]||"").split(", "),s=(a[Si+"Duration"]||"").split(", "),r=Pi(i,s),o=(a[Oi+"Delay"]||"").split(", "),u=(a[Oi+"Duration"]||"").split(", "),d=Pi(o,u),p=0,l=0;return"transition"===t?r>0&&(n="transition",p=r,l=s.length):"animation"===t?d>0&&(n="animation",p=d,l=u.length):l=(n=(p=Math.max(r,d))>0?r>d?"transition":"animation":null)?"transition"===n?s.length:u.length:0,{type:n,timeout:p,propCount:l,hasTransform:"transition"===n&&Ri.test(a[Si+"Property"])}}function Pi(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return Li(t)+Li(e[n])})))}function Li(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Bi(e,t){var n=e.elm;s(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var a=wi(e.data.transition);if(!i(a)&&!s(n._enterCb)&&1===n.nodeType){for(var r=a.css,o=a.type,d=a.enterClass,p=a.enterToClass,l=a.enterActiveClass,c=a.appearClass,y=a.appearToClass,m=a.appearActiveClass,h=a.beforeEnter,b=a.enter,T=a.afterEnter,v=a.enterCancelled,g=a.beforeAppear,w=a.appear,k=a.afterAppear,_=a.appearCancelled,S=a.duration,x=Zt,O=Zt.$vnode;O&&O.parent;)x=O.context,O=O.parent;var M=!x._isMounted||!e.isRootInsert;if(!M||w||""===w){var A=M&&c?c:d,C=M&&m?m:l,I=M&&y?y:p,V=M&&g||h,D=M&&"function"==typeof w?w:b,R=M&&k||T,E=M&&_||v,P=f(u(S)?S.enter:S);0;var L=!1!==r&&!Z,F=Ui(D),$=n._enterCb=B((function(){L&&(Vi(n,I),Vi(n,C)),$.cancelled?(L&&Vi(n,A),E&&E(n)):R&&R(n),n._enterCb=null}));e.data.show||pt(e,"insert",(function(){var t=n.parentNode,a=t&&t._pending&&t._pending[e.key];a&&a.tag===e.tag&&a.elm._leaveCb&&a.elm._leaveCb(),D&&D(n,$)})),V&&V(n),L&&(Ii(n,A),Ii(n,C),Ci((function(){Vi(n,A),$.cancelled||(Ii(n,I),F||($i(P)?setTimeout($,P):Di(n,o,$)))}))),e.data.show&&(t&&t(),D&&D(n,$)),L||F||$()}}}function Fi(e,t){var n=e.elm;s(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var a=wi(e.data.transition);if(i(a)||1!==n.nodeType)return t();if(!s(n._leaveCb)){var r=a.css,o=a.type,d=a.leaveClass,p=a.leaveToClass,l=a.leaveActiveClass,c=a.beforeLeave,y=a.leave,m=a.afterLeave,h=a.leaveCancelled,b=a.delayLeave,T=a.duration,v=!1!==r&&!Z,g=Ui(y),w=f(u(T)?T.leave:T);0;var k=n._leaveCb=B((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),v&&(Vi(n,p),Vi(n,l)),k.cancelled?(v&&Vi(n,d),h&&h(n)):(t(),m&&m(n)),n._leaveCb=null}));b?b(_):_()}function _(){k.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),c&&c(n),v&&(Ii(n,d),Ii(n,l),Ci((function(){Vi(n,d),k.cancelled||(Ii(n,p),g||($i(w)?setTimeout(k,w):Di(n,o,k)))}))),y&&y(n,k),v||g||k())}}function $i(e){return"number"==typeof e&&!isNaN(e)}function Ui(e){if(i(e))return!1;var t=e.fns;return s(t)?Ui(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function Ni(e,t){!0!==t.data.show&&Bi(t)}var Wi=function(e){var t,n,a={},u=e.modules,d=e.nodeOps;for(t=0;t<ra.length;++t)for(a[ra[t]]=[],n=0;n<u.length;++n)s(u[n][ra[t]])&&a[ra[t]].push(u[n][ra[t]]);function p(e){var t=d.parentNode(e);s(t)&&d.removeChild(t,e)}function l(e,t,n,i,o,u,p){if(s(e.elm)&&s(u)&&(e=u[p]=ge(e)),e.isRootInsert=!o,!function(e,t,n,i){var o=e.data;if(s(o)){var u=s(e.componentInstance)&&o.keepAlive;if(s(o=o.hook)&&s(o=o.init)&&o(e,!1),s(e.componentInstance))return c(e,t),y(n,e.elm,i),r(u)&&function(e,t,n,i){var r,o=e;for(;o.componentInstance;)if(o=o.componentInstance._vnode,s(r=o.data)&&s(r=r.transition)){for(r=0;r<a.activate.length;++r)a.activate[r](sa,o);t.push(o);break}y(n,e.elm,i)}(e,t,n,i),!0}}(e,t,n,i)){var l=e.data,f=e.children,h=e.tag;s(h)?(e.elm=e.ns?d.createElementNS(e.ns,h):d.createElement(h,e),T(e),m(e,f,t),s(l)&&b(e,t),y(n,e.elm,i)):r(e.isComment)?(e.elm=d.createComment(e.text),y(n,e.elm,i)):(e.elm=d.createTextNode(e.text),y(n,e.elm,i))}}function c(e,t){s(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,f(e)?(b(e,t),T(e)):(ia(e),t.push(e))}function y(e,t,n){s(e)&&(s(n)?d.parentNode(n)===e&&d.insertBefore(e,t,n):d.appendChild(e,t))}function m(e,t,n){if(Array.isArray(t)){0;for(var a=0;a<t.length;++a)l(t[a],n,e.elm,null,!0,t,a)}else o(e.text)&&d.appendChild(e.elm,d.createTextNode(String(e.text)))}function f(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return s(e.tag)}function b(e,n){for(var i=0;i<a.create.length;++i)a.create[i](sa,e);s(t=e.data.hook)&&(s(t.create)&&t.create(sa,e),s(t.insert)&&n.push(e))}function T(e){var t;if(s(t=e.fnScopeId))d.setStyleScope(e.elm,t);else for(var n=e;n;)s(t=n.context)&&s(t=t.$options._scopeId)&&d.setStyleScope(e.elm,t),n=n.parent;s(t=Zt)&&t!==e.context&&t!==e.fnContext&&s(t=t.$options._scopeId)&&d.setStyleScope(e.elm,t)}function v(e,t,n,a,i,s){for(;a<=i;++a)l(n[a],s,e,t,!1,n,a)}function g(e){var t,n,i=e.data;if(s(i))for(s(t=i.hook)&&s(t=t.destroy)&&t(e),t=0;t<a.destroy.length;++t)a.destroy[t](e);if(s(t=e.children))for(n=0;n<e.children.length;++n)g(e.children[n])}function w(e,t,n){for(;t<=n;++t){var a=e[t];s(a)&&(s(a.tag)?(k(a),g(a)):p(a.elm))}}function k(e,t){if(s(t)||s(e.data)){var n,i=a.remove.length+1;for(s(t)?t.listeners+=i:t=function(e,t){function n(){0==--n.listeners&&p(e)}return n.listeners=t,n}(e.elm,i),s(n=e.componentInstance)&&s(n=n._vnode)&&s(n.data)&&k(n,t),n=0;n<a.remove.length;++n)a.remove[n](e,t);s(n=e.data.hook)&&s(n=n.remove)?n(e,t):t()}else p(e.elm)}function _(e,t,n,a){for(var i=n;i<a;i++){var r=t[i];if(s(r)&&oa(e,r))return i}}function S(e,t,n,o,u,p){if(e!==t){s(t.elm)&&s(o)&&(t=o[u]=ge(t));var c=t.elm=e.elm;if(r(e.isAsyncPlaceholder))s(t.asyncFactory.resolved)?M(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(r(t.isStatic)&&r(e.isStatic)&&t.key===e.key&&(r(t.isCloned)||r(t.isOnce)))t.componentInstance=e.componentInstance;else{var y,m=t.data;s(m)&&s(y=m.hook)&&s(y=y.prepatch)&&y(e,t);var h=e.children,b=t.children;if(s(m)&&f(t)){for(y=0;y<a.update.length;++y)a.update[y](e,t);s(y=m.hook)&&s(y=y.update)&&y(e,t)}i(t.text)?s(h)&&s(b)?h!==b&&function(e,t,n,a,r){var o,u,p,c=0,y=0,m=t.length-1,f=t[0],h=t[m],b=n.length-1,T=n[0],g=n[b],k=!r;for(0;c<=m&&y<=b;)i(f)?f=t[++c]:i(h)?h=t[--m]:oa(f,T)?(S(f,T,a,n,y),f=t[++c],T=n[++y]):oa(h,g)?(S(h,g,a,n,b),h=t[--m],g=n[--b]):oa(f,g)?(S(f,g,a,n,b),k&&d.insertBefore(e,f.elm,d.nextSibling(h.elm)),f=t[++c],g=n[--b]):oa(h,T)?(S(h,T,a,n,y),k&&d.insertBefore(e,h.elm,f.elm),h=t[--m],T=n[++y]):(i(o)&&(o=ua(t,c,m)),i(u=s(T.key)?o[T.key]:_(T,t,c,m))?l(T,a,e,f.elm,!1,n,y):oa(p=t[u],T)?(S(p,T,a,n,y),t[u]=void 0,k&&d.insertBefore(e,p.elm,f.elm)):l(T,a,e,f.elm,!1,n,y),T=n[++y]);c>m?v(e,i(n[b+1])?null:n[b+1].elm,n,y,b,a):y>b&&w(t,c,m)}(c,h,b,n,p):s(b)?(s(e.text)&&d.setTextContent(c,""),v(c,null,b,0,b.length-1,n)):s(h)?w(h,0,h.length-1):s(e.text)&&d.setTextContent(c,""):e.text!==t.text&&d.setTextContent(c,t.text),s(m)&&s(y=m.hook)&&s(y=y.postpatch)&&y(e,t)}}}function x(e,t,n){if(r(n)&&s(e.parent))e.parent.data.pendingInsert=t;else for(var a=0;a<t.length;++a)t[a].data.hook.insert(t[a])}var O=h("attrs,class,staticClass,staticStyle,key");function M(e,t,n,a){var i,o=t.tag,u=t.data,d=t.children;if(a=a||u&&u.pre,t.elm=e,r(t.isComment)&&s(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(s(u)&&(s(i=u.hook)&&s(i=i.init)&&i(t,!0),s(i=t.componentInstance)))return c(t,n),!0;if(s(o)){if(s(d))if(e.hasChildNodes())if(s(i=u)&&s(i=i.domProps)&&s(i=i.innerHTML)){if(i!==e.innerHTML)return!1}else{for(var p=!0,l=e.firstChild,y=0;y<d.length;y++){if(!l||!M(l,d[y],n,a)){p=!1;break}l=l.nextSibling}if(!p||l)return!1}else m(t,d,n);if(s(u)){var f=!1;for(var h in u)if(!O(h)){f=!0,b(t,n);break}!f&&u.class&&rt(u.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,o){if(!i(t)){var u,p=!1,c=[];if(i(e))p=!0,l(t,c);else{var y=s(e.nodeType);if(!y&&oa(e,t))S(e,t,c,null,null,o);else{if(y){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),r(n)&&M(e,t,c))return x(t,c,!0),e;u=e,e=new he(d.tagName(u).toLowerCase(),{},[],void 0,u)}var m=e.elm,h=d.parentNode(m);if(l(t,c,m._leaveCb?null:h,d.nextSibling(m)),s(t.parent))for(var b=t.parent,T=f(t);b;){for(var v=0;v<a.destroy.length;++v)a.destroy[v](b);if(b.elm=t.elm,T){for(var k=0;k<a.create.length;++k)a.create[k](sa,b);var _=b.data.hook.insert;if(_.merged)for(var O=1;O<_.fns.length;O++)_.fns[O]()}else ia(b);b=b.parent}s(h)?w([e],0,0):s(e.tag)&&g(e)}}return x(t,c,p),t.elm}s(e)&&g(e)}}({nodeOps:na,modules:[va,Ma,ai,ri,bi,z?{create:Ni,activate:Ni,remove:function(e,t){!0!==e.data.show?Fi(e,t):t()}}:{}].concat(fa)});Z&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Ji(e,"input")}));var ji={inserted:function(e,t,n,a){"select"===n.tag?(a.elm&&!a.elm._vOptions?pt(n,"postpatch",(function(){ji.componentUpdated(e,t,n)})):Hi(e,t,n.context),e._vOptions=[].map.call(e.options,zi)):("textarea"===n.tag||ea(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",Yi),e.addEventListener("compositionend",Ki),e.addEventListener("change",Ki),Z&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){Hi(e,t,n.context);var a=e._vOptions,i=e._vOptions=[].map.call(e.options,zi);if(i.some((function(e,t){return!P(e,a[t])})))(e.multiple?t.value.some((function(e){return qi(e,i)})):t.value!==t.oldValue&&qi(t.value,i))&&Ji(e,"change")}}};function Hi(e,t,n){Gi(e,t,n),(X||Q)&&setTimeout((function(){Gi(e,t,n)}),0)}function Gi(e,t,n){var a=t.value,i=e.multiple;if(!i||Array.isArray(a)){for(var s,r,o=0,u=e.options.length;o<u;o++)if(r=e.options[o],i)s=L(a,zi(r))>-1,r.selected!==s&&(r.selected=s);else if(P(zi(r),a))return void(e.selectedIndex!==o&&(e.selectedIndex=o));i||(e.selectedIndex=-1)}}function qi(e,t){return t.every((function(t){return!P(t,e)}))}function zi(e){return"_value"in e?e._value:e.value}function Yi(e){e.target.composing=!0}function Ki(e){e.target.composing&&(e.target.composing=!1,Ji(e.target,"input"))}function Ji(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function Xi(e){return!e.componentInstance||e.data&&e.data.transition?e:Xi(e.componentInstance._vnode)}var Zi={model:ji,show:{bind:function(e,t,n){var a=t.value,i=(n=Xi(n)).data&&n.data.transition,s=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&i?(n.data.show=!0,Bi(n,(function(){e.style.display=s}))):e.style.display=a?s:"none"},update:function(e,t,n){var a=t.value;!a!=!t.oldValue&&((n=Xi(n)).data&&n.data.transition?(n.data.show=!0,a?Bi(n,(function(){e.style.display=e.__vOriginalDisplay})):Fi(n,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,a,i){i||(e.style.display=e.__vOriginalDisplay)}}},Qi={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function es(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?es(zt(t.children)):e}function ts(e){var t={},n=e.$options;for(var a in n.propsData)t[a]=e[a];var i=n._parentListeners;for(var s in i)t[S(s)]=i[s];return t}function ns(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var as=function(e){return e.tag||bt(e)},is=function(e){return"show"===e.name},ss={name:"transition",props:Qi,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(as)).length){0;var a=this.mode;0;var i=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var s=es(i);if(!s)return i;if(this._leaving)return ns(e,i);var r="__transition-"+this._uid+"-";s.key=null==s.key?s.isComment?r+"comment":r+s.tag:o(s.key)?0===String(s.key).indexOf(r)?s.key:r+s.key:s.key;var u=(s.data||(s.data={})).transition=ts(this),d=this._vnode,p=es(d);if(s.data.directives&&s.data.directives.some(is)&&(s.data.show=!0),p&&p.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(s,p)&&!bt(p)&&(!p.componentInstance||!p.componentInstance._vnode.isComment)){var l=p.data.transition=I({},u);if("out-in"===a)return this._leaving=!0,pt(l,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),ns(e,i);if("in-out"===a){if(bt(s))return d;var c,y=function(){c()};pt(u,"afterEnter",y),pt(u,"enterCancelled",y),pt(l,"delayLeave",(function(e){c=e}))}}return i}}},rs=I({tag:String,moveClass:String},Qi);function os(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function us(e){e.data.newPos=e.elm.getBoundingClientRect()}function ds(e){var t=e.data.pos,n=e.data.newPos,a=t.left-n.left,i=t.top-n.top;if(a||i){e.data.moved=!0;var s=e.elm.style;s.transform=s.WebkitTransform="translate("+a+"px,"+i+"px)",s.transitionDuration="0s"}}delete rs.mode;var ps={Transition:ss,TransitionGroup:{props:rs,beforeMount:function(){var e=this,t=this._update;this._update=function(n,a){var i=Qt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),t.call(e,n,a)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),a=this.prevChildren=this.children,i=this.$slots.default||[],s=this.children=[],r=ts(this),o=0;o<i.length;o++){var u=i[o];if(u.tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))s.push(u),n[u.key]=u,(u.data||(u.data={})).transition=r;else;}if(a){for(var d=[],p=[],l=0;l<a.length;l++){var c=a[l];c.data.transition=r,c.data.pos=c.elm.getBoundingClientRect(),n[c.key]?d.push(c):p.push(c)}this.kept=e(t,null,d),this.removed=p}return e(t,null,s)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(os),e.forEach(us),e.forEach(ds),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,a=n.style;Ii(n,t),a.transform=a.WebkitTransform=a.transitionDuration="",n.addEventListener(xi,n._moveCb=function e(a){a&&a.target!==n||a&&!/transform$/.test(a.propertyName)||(n.removeEventListener(xi,e),n._moveCb=null,Vi(n,t))})}})))},methods:{hasMove:function(e,t){if(!_i)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){gi(n,e)})),vi(n,t),n.style.display="none",this.$el.appendChild(n);var a=Ei(n);return this.$el.removeChild(n),this._hasMove=a.hasTransform}}}};On.config.mustUseProp=Ln,On.config.isReservedTag=Xn,On.config.isReservedAttr=En,On.config.getTagNamespace=Zn,On.config.isUnknownElement=function(e){if(!z)return!0;if(Xn(e))return!1;if(e=e.toLowerCase(),null!=Qn[e])return Qn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Qn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Qn[e]=/HTMLUnknownElement/.test(t.toString())},I(On.options.directives,Zi),I(On.options.components,ps),On.prototype.__patch__=z?Wi:D,On.prototype.$mount=function(e,t){return function(e,t,n){var a;return e.$el=t,e.$options.render||(e.$options.render=Te),nn(e,"beforeMount"),a=function(){e._update(e._render(),n)},new fn(e,a,D,{before:function(){e._isMounted&&!e._isDestroyed&&nn(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,nn(e,"mounted")),e}(this,e=e&&z?ta(e):void 0,t)},z&&setTimeout((function(){U.devtools&&re&&re.emit("init",On)}),0);var ls=/\{\{((?:.|\r?\n)+?)\}\}/g,cs=/[-.*+?^${}()|[\]\/\\]/g,ys=k((function(e){var t=e[0].replace(cs,"\\$&"),n=e[1].replace(cs,"\\$&");return new RegExp(t+"((?:.|\\n)+?)"+n,"g")}));var ms={staticKeys:["staticClass"],transformNode:function(e,t){t.warn;var n=Ua(e,"class");n&&(e.staticClass=JSON.stringify(n));var a=$a(e,"class",!1);a&&(e.classBinding=a)},genData:function(e){var t="";return e.staticClass&&(t+="staticClass:"+e.staticClass+","),e.classBinding&&(t+="class:"+e.classBinding+","),t}};var fs,hs={staticKeys:["staticStyle"],transformNode:function(e,t){t.warn;var n=Ua(e,"style");n&&(e.staticStyle=JSON.stringify(oi(n)));var a=$a(e,"style",!1);a&&(e.styleBinding=a)},genData:function(e){var t="";return e.staticStyle&&(t+="staticStyle:"+e.staticStyle+","),e.styleBinding&&(t+="style:("+e.styleBinding+"),"),t}},bs=function(e){return(fs=fs||document.createElement("div")).innerHTML=e,fs.textContent},Ts=h("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),vs=h("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),gs=h("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),ws=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,ks=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,_s="[a-zA-Z_][\\-\\.0-9_a-zA-Z"+N.source+"]*",Ss="((?:"+_s+"\\:)?"+_s+")",xs=new RegExp("^<"+Ss),Os=/^\s*(\/?)>/,Ms=new RegExp("^<\\/"+Ss+"[^>]*>"),As=/^<!DOCTYPE [^>]+>/i,Cs=/^<!\--/,Is=/^<!\[/,Vs=h("script,style,textarea",!0),Ds={},Rs={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},Es=/&(?:lt|gt|quot|amp|#39);/g,Ps=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,Ls=h("pre,textarea",!0),Bs=function(e,t){return e&&Ls(e)&&"\n"===t[0]};function Fs(e,t){var n=t?Ps:Es;return e.replace(n,(function(e){return Rs[e]}))}var $s,Us,Ns,Ws,js,Hs,Gs,qs,zs=/^@|^v-on:/,Ys=/^v-|^@|^:|^#/,Ks=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,Js=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,Xs=/^\(|\)$/g,Zs=/^\[.*\]$/,Qs=/:(.*)$/,er=/^:|^\.|^v-bind:/,tr=/\.[^.\]]+(?=[^\]]*$)/g,nr=/^v-slot(:|$)|^#/,ar=/[\r\n]/,ir=/[ \f\t\r\n]+/g,sr=k(bs);function rr(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:yr(t),rawAttrsMap:{},parent:n,children:[]}}function or(e,t){$s=t.warn||Va,Hs=t.isPreTag||R,Gs=t.mustUseProp||R,qs=t.getTagNamespace||R;var n=t.isReservedTag||R;(function(e){return!(!(e.component||e.attrsMap[":is"]||e.attrsMap["v-bind:is"])&&(e.attrsMap.is?n(e.attrsMap.is):n(e.tag)))}),Ns=Da(t.modules,"transformNode"),Ws=Da(t.modules,"preTransformNode"),js=Da(t.modules,"postTransformNode"),Us=t.delimiters;var a,i,s=[],r=!1!==t.preserveWhitespace,o=t.whitespace,u=!1,d=!1;function p(e){if(l(e),u||e.processed||(e=ur(e,t)),s.length||e===a||a.if&&(e.elseif||e.else)&&pr(a,{exp:e.elseif,block:e}),i&&!e.forbidden)if(e.elseif||e.else)r=e,(o=function(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}(i.children))&&o.if&&pr(o,{exp:r.elseif,block:r});else{if(e.slotScope){var n=e.slotTarget||'"default"';(i.scopedSlots||(i.scopedSlots={}))[n]=e}i.children.push(e),e.parent=i}var r,o;e.children=e.children.filter((function(e){return!e.slotScope})),l(e),e.pre&&(u=!1),Hs(e.tag)&&(d=!1);for(var p=0;p<js.length;p++)js[p](e,t)}function l(e){if(!d)for(var t;(t=e.children[e.children.length-1])&&3===t.type&&" "===t.text;)e.children.pop()}return function(e,t){for(var n,a,i=[],s=t.expectHTML,r=t.isUnaryTag||R,o=t.canBeLeftOpenTag||R,u=0;e;){if(n=e,a&&Vs(a)){var d=0,p=a.toLowerCase(),l=Ds[p]||(Ds[p]=new RegExp("([\\s\\S]*?)(</"+p+"[^>]*>)","i")),c=e.replace(l,(function(e,n,a){return d=a.length,Vs(p)||"noscript"===p||(n=n.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),Bs(p,n)&&(n=n.slice(1)),t.chars&&t.chars(n),""}));u+=e.length-c.length,e=c,O(p,u-d,u)}else{var y=e.indexOf("<");if(0===y){if(Cs.test(e)){var m=e.indexOf("--\x3e");if(m>=0){t.shouldKeepComment&&t.comment(e.substring(4,m),u,u+m+3),_(m+3);continue}}if(Is.test(e)){var f=e.indexOf("]>");if(f>=0){_(f+2);continue}}var h=e.match(As);if(h){_(h[0].length);continue}var b=e.match(Ms);if(b){var T=u;_(b[0].length),O(b[1],T,u);continue}var v=S();if(v){x(v),Bs(v.tagName,e)&&_(1);continue}}var g=void 0,w=void 0,k=void 0;if(y>=0){for(w=e.slice(y);!(Ms.test(w)||xs.test(w)||Cs.test(w)||Is.test(w)||(k=w.indexOf("<",1))<0);)y+=k,w=e.slice(y);g=e.substring(0,y)}y<0&&(g=e),g&&_(g.length),t.chars&&g&&t.chars(g,u-g.length,u)}if(e===n){t.chars&&t.chars(e);break}}function _(t){u+=t,e=e.substring(t)}function S(){var t=e.match(xs);if(t){var n,a,i={tagName:t[1],attrs:[],start:u};for(_(t[0].length);!(n=e.match(Os))&&(a=e.match(ks)||e.match(ws));)a.start=u,_(a[0].length),a.end=u,i.attrs.push(a);if(n)return i.unarySlash=n[1],_(n[0].length),i.end=u,i}}function x(e){var n=e.tagName,u=e.unarySlash;s&&("p"===a&&gs(n)&&O(a),o(n)&&a===n&&O(n));for(var d=r(n)||!!u,p=e.attrs.length,l=new Array(p),c=0;c<p;c++){var y=e.attrs[c],m=y[3]||y[4]||y[5]||"",f="a"===n&&"href"===y[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;l[c]={name:y[1],value:Fs(m,f)}}d||(i.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:l,start:e.start,end:e.end}),a=n),t.start&&t.start(n,l,d,e.start,e.end)}function O(e,n,s){var r,o;if(null==n&&(n=u),null==s&&(s=u),e)for(o=e.toLowerCase(),r=i.length-1;r>=0&&i[r].lowerCasedTag!==o;r--);else r=0;if(r>=0){for(var d=i.length-1;d>=r;d--)t.end&&t.end(i[d].tag,n,s);i.length=r,a=r&&i[r-1].tag}else"br"===o?t.start&&t.start(e,[],!0,n,s):"p"===o&&(t.start&&t.start(e,[],!1,n,s),t.end&&t.end(e,n,s))}O()}(e,{warn:$s,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,outputSourceRange:t.outputSourceRange,start:function(e,n,r,o,l){var c=i&&i.ns||qs(e);X&&"svg"===c&&(n=function(e){for(var t=[],n=0;n<e.length;n++){var a=e[n];mr.test(a.name)||(a.name=a.name.replace(fr,""),t.push(a))}return t}(n));var y,m=rr(e,n,i);c&&(m.ns=c),"style"!==(y=m).tag&&("script"!==y.tag||y.attrsMap.type&&"text/javascript"!==y.attrsMap.type)||se()||(m.forbidden=!0);for(var f=0;f<Ws.length;f++)m=Ws[f](m,t)||m;u||(!function(e){null!=Ua(e,"v-pre")&&(e.pre=!0)}(m),m.pre&&(u=!0)),Hs(m.tag)&&(d=!0),u?function(e){var t=e.attrsList,n=t.length;if(n)for(var a=e.attrs=new Array(n),i=0;i<n;i++)a[i]={name:t[i].name,value:JSON.stringify(t[i].value)},null!=t[i].start&&(a[i].start=t[i].start,a[i].end=t[i].end);else e.pre||(e.plain=!0)}(m):m.processed||(dr(m),function(e){var t=Ua(e,"v-if");if(t)e.if=t,pr(e,{exp:t,block:e});else{null!=Ua(e,"v-else")&&(e.else=!0);var n=Ua(e,"v-else-if");n&&(e.elseif=n)}}(m),function(e){null!=Ua(e,"v-once")&&(e.once=!0)}(m)),a||(a=m),r?p(m):(i=m,s.push(m))},end:function(e,t,n){var a=s[s.length-1];s.length-=1,i=s[s.length-1],p(a)},chars:function(e,t,n){if(i&&(!X||"textarea"!==i.tag||i.attrsMap.placeholder!==e)){var a,s,p,l=i.children;if(e=d||e.trim()?"script"===(a=i).tag||"style"===a.tag?e:sr(e):l.length?o?"condense"===o&&ar.test(e)?"":" ":r?" ":"":"")d||"condense"!==o||(e=e.replace(ir," ")),!u&&" "!==e&&(s=function(e,t){var n=t?ys(t):ls;if(n.test(e)){for(var a,i,s,r=[],o=[],u=n.lastIndex=0;a=n.exec(e);){(i=a.index)>u&&(o.push(s=e.slice(u,i)),r.push(JSON.stringify(s)));var d=Ca(a[1].trim());r.push("_s("+d+")"),o.push({"@binding":d}),u=i+a[0].length}return u<e.length&&(o.push(s=e.slice(u)),r.push(JSON.stringify(s))),{expression:r.join("+"),tokens:o}}}(e,Us))?p={type:2,expression:s.expression,tokens:s.tokens,text:e}:" "===e&&l.length&&" "===l[l.length-1].text||(p={type:3,text:e}),p&&l.push(p)}},comment:function(e,t,n){if(i){var a={type:3,text:e,isComment:!0};0,i.children.push(a)}}}),a}function ur(e,t){var n;!function(e){var t=$a(e,"key");if(t){e.key=t}}(e),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var t=$a(e,"ref");t&&(e.ref=t,e.refInFor=function(e){var t=e;for(;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}(e))}(e),function(e){var t;"template"===e.tag?(t=Ua(e,"scope"),e.slotScope=t||Ua(e,"slot-scope")):(t=Ua(e,"slot-scope"))&&(e.slotScope=t);var n=$a(e,"slot");n&&(e.slotTarget='""'===n?'"default"':n,e.slotTargetDynamic=!(!e.attrsMap[":slot"]&&!e.attrsMap["v-bind:slot"]),"template"===e.tag||e.slotScope||Ea(e,"slot",n,function(e,t){return e.rawAttrsMap[":"+t]||e.rawAttrsMap["v-bind:"+t]||e.rawAttrsMap[t]}(e,"slot")));if("template"===e.tag){var a=Na(e,nr);if(a){0;var i=lr(a),s=i.name,r=i.dynamic;e.slotTarget=s,e.slotTargetDynamic=r,e.slotScope=a.value||"_empty_"}}else{var o=Na(e,nr);if(o){0;var u=e.scopedSlots||(e.scopedSlots={}),d=lr(o),p=d.name,l=d.dynamic,c=u[p]=rr("template",[],e);c.slotTarget=p,c.slotTargetDynamic=l,c.children=e.children.filter((function(e){if(!e.slotScope)return e.parent=c,!0})),c.slotScope=o.value||"_empty_",e.children=[],e.plain=!1}}}(e),"slot"===(n=e).tag&&(n.slotName=$a(n,"name")),function(e){var t;(t=$a(e,"is"))&&(e.component=t);null!=Ua(e,"inline-template")&&(e.inlineTemplate=!0)}(e);for(var a=0;a<Ns.length;a++)e=Ns[a](e,t)||e;return function(e){var t,n,a,i,s,r,o,u,d=e.attrsList;for(t=0,n=d.length;t<n;t++){if(a=i=d[t].name,s=d[t].value,Ys.test(a))if(e.hasBindings=!0,(r=cr(a.replace(Ys,"")))&&(a=a.replace(tr,"")),er.test(a))a=a.replace(er,""),s=Ca(s),(u=Zs.test(a))&&(a=a.slice(1,-1)),r&&(r.prop&&!u&&"innerHtml"===(a=S(a))&&(a="innerHTML"),r.camel&&!u&&(a=S(a)),r.sync&&(o=Ha(s,"$event"),u?Fa(e,'"update:"+('+a+")",o,null,!1,0,d[t],!0):(Fa(e,"update:"+S(a),o,null,!1,0,d[t]),M(a)!==S(a)&&Fa(e,"update:"+M(a),o,null,!1,0,d[t])))),r&&r.prop||!e.component&&Gs(e.tag,e.attrsMap.type,a)?Ra(e,a,s,d[t],u):Ea(e,a,s,d[t],u);else if(zs.test(a))a=a.replace(zs,""),(u=Zs.test(a))&&(a=a.slice(1,-1)),Fa(e,a,s,r,!1,0,d[t],u);else{var p=(a=a.replace(Ys,"")).match(Qs),l=p&&p[1];u=!1,l&&(a=a.slice(0,-(l.length+1)),Zs.test(l)&&(l=l.slice(1,-1),u=!0)),La(e,a,i,s,l,u,r,d[t])}else Ea(e,a,JSON.stringify(s),d[t]),!e.component&&"muted"===a&&Gs(e.tag,e.attrsMap.type,a)&&Ra(e,a,"true",d[t])}}(e),e}function dr(e){var t;if(t=Ua(e,"v-for")){var n=function(e){var t=e.match(Ks);if(!t)return;var n={};n.for=t[2].trim();var a=t[1].trim().replace(Xs,""),i=a.match(Js);i?(n.alias=a.replace(Js,"").trim(),n.iterator1=i[1].trim(),i[2]&&(n.iterator2=i[2].trim())):n.alias=a;return n}(t);n&&I(e,n)}}function pr(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function lr(e){var t=e.name.replace(nr,"");return t||"#"!==e.name[0]&&(t="default"),Zs.test(t)?{name:t.slice(1,-1),dynamic:!0}:{name:'"'+t+'"',dynamic:!1}}function cr(e){var t=e.match(tr);if(t){var n={};return t.forEach((function(e){n[e.slice(1)]=!0})),n}}function yr(e){for(var t={},n=0,a=e.length;n<a;n++)t[e[n].name]=e[n].value;return t}var mr=/^xmlns:NS\d+/,fr=/^NS\d+:/;function hr(e){return rr(e.tag,e.attrsList.slice(),e.parent)}var br=[ms,hs,{preTransformNode:function(e,t){if("input"===e.tag){var n,a=e.attrsMap;if(!a["v-model"])return;if((a[":type"]||a["v-bind:type"])&&(n=$a(e,"type")),a.type||n||!a["v-bind"]||(n="("+a["v-bind"]+").type"),n){var i=Ua(e,"v-if",!0),s=i?"&&("+i+")":"",r=null!=Ua(e,"v-else",!0),o=Ua(e,"v-else-if",!0),u=hr(e);dr(u),Pa(u,"type","checkbox"),ur(u,t),u.processed=!0,u.if="("+n+")==='checkbox'"+s,pr(u,{exp:u.if,block:u});var d=hr(e);Ua(d,"v-for",!0),Pa(d,"type","radio"),ur(d,t),pr(u,{exp:"("+n+")==='radio'"+s,block:d});var p=hr(e);return Ua(p,"v-for",!0),Pa(p,":type",n),ur(p,t),pr(u,{exp:i,block:p}),r?u.else=!0:o&&(u.elseif=o),u}}}}];var Tr,vr,gr={expectHTML:!0,modules:br,directives:{model:function(e,t,n){n;var a=t.value,i=t.modifiers,s=e.tag,r=e.attrsMap.type;if(e.component)return ja(e,a,i),!1;if("select"===s)!function(e,t,n){var a='var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return '+(n&&n.number?"_n(val)":"val")+"});";a=a+" "+Ha(t,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]"),Fa(e,"change",a,null,!0)}(e,a,i);else if("input"===s&&"checkbox"===r)!function(e,t,n){var a=n&&n.number,i=$a(e,"value")||"null",s=$a(e,"true-value")||"true",r=$a(e,"false-value")||"false";Ra(e,"checked","Array.isArray("+t+")?_i("+t+","+i+")>-1"+("true"===s?":("+t+")":":_q("+t+","+s+")")),Fa(e,"change","var $$a="+t+",$$el=$event.target,$$c=$$el.checked?("+s+"):("+r+");if(Array.isArray($$a)){var $$v="+(a?"_n("+i+")":i)+",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&("+Ha(t,"$$a.concat([$$v])")+")}else{$$i>-1&&("+Ha(t,"$$a.slice(0,$$i).concat($$a.slice($$i+1))")+")}}else{"+Ha(t,"$$c")+"}",null,!0)}(e,a,i);else if("input"===s&&"radio"===r)!function(e,t,n){var a=n&&n.number,i=$a(e,"value")||"null";Ra(e,"checked","_q("+t+","+(i=a?"_n("+i+")":i)+")"),Fa(e,"change",Ha(t,i),null,!0)}(e,a,i);else if("input"===s||"textarea"===s)!function(e,t,n){var a=e.attrsMap.type;0;var i=n||{},s=i.lazy,r=i.number,o=i.trim,u=!s&&"range"!==a,d=s?"change":"range"===a?"__r":"input",p="$event.target.value";o&&(p="$event.target.value.trim()");r&&(p="_n("+p+")");var l=Ha(t,p);u&&(l="if($event.target.composing)return;"+l);Ra(e,"value","("+t+")"),Fa(e,d,l,null,!0),(o||r)&&Fa(e,"blur","$forceUpdate()")}(e,a,i);else{if(!U.isReservedTag(s))return ja(e,a,i),!1}return!0},text:function(e,t){t.value&&Ra(e,"textContent","_s("+t.value+")",t)},html:function(e,t){t.value&&Ra(e,"innerHTML","_s("+t.value+")",t)}},isPreTag:function(e){return"pre"===e},isUnaryTag:Ts,mustUseProp:Ln,canBeLeftOpenTag:vs,isReservedTag:Xn,getTagNamespace:Zn,staticKeys:function(e){return e.reduce((function(e,t){return e.concat(t.staticKeys||[])}),[]).join(",")}(br)},wr=k((function(e){return h("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(e?","+e:""))}));function kr(e,t){e&&(Tr=wr(t.staticKeys||""),vr=t.isReservedTag||R,function e(t){if(t.static=function(e){if(2===e.type)return!1;if(3===e.type)return!0;return!(!e.pre&&(e.hasBindings||e.if||e.for||b(e.tag)||!vr(e.tag)||function(e){for(;e.parent;){if("template"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every(Tr)))}(t),1===t.type){if(!vr(t.tag)&&"slot"!==t.tag&&null==t.attrsMap["inline-template"])return;for(var n=0,a=t.children.length;n<a;n++){var i=t.children[n];e(i),i.static||(t.static=!1)}if(t.ifConditions)for(var s=1,r=t.ifConditions.length;s<r;s++){var o=t.ifConditions[s].block;e(o),o.static||(t.static=!1)}}}(e),function e(t,n){if(1===t.type){if((t.static||t.once)&&(t.staticInFor=n),t.static&&t.children.length&&(1!==t.children.length||3!==t.children[0].type))return void(t.staticRoot=!0);if(t.staticRoot=!1,t.children)for(var a=0,i=t.children.length;a<i;a++)e(t.children[a],n||!!t.for);if(t.ifConditions)for(var s=1,r=t.ifConditions.length;s<r;s++)e(t.ifConditions[s].block,n)}}(e,!1))}var _r=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,Sr=/\([^)]*?\);*$/,xr=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,Or={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},Mr={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},Ar=function(e){return"if("+e+")return null;"},Cr={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:Ar("$event.target !== $event.currentTarget"),ctrl:Ar("!$event.ctrlKey"),shift:Ar("!$event.shiftKey"),alt:Ar("!$event.altKey"),meta:Ar("!$event.metaKey"),left:Ar("'button' in $event && $event.button !== 0"),middle:Ar("'button' in $event && $event.button !== 1"),right:Ar("'button' in $event && $event.button !== 2")};function Ir(e,t){var n=t?"nativeOn:":"on:",a="",i="";for(var s in e){var r=Vr(e[s]);e[s]&&e[s].dynamic?i+=s+","+r+",":a+='"'+s+'":'+r+","}return a="{"+a.slice(0,-1)+"}",i?n+"_d("+a+",["+i.slice(0,-1)+"])":n+a}function Vr(e){if(!e)return"function(){}";if(Array.isArray(e))return"["+e.map((function(e){return Vr(e)})).join(",")+"]";var t=xr.test(e.value),n=_r.test(e.value),a=xr.test(e.value.replace(Sr,""));if(e.modifiers){var i="",s="",r=[];for(var o in e.modifiers)if(Cr[o])s+=Cr[o],Or[o]&&r.push(o);else if("exact"===o){var u=e.modifiers;s+=Ar(["ctrl","shift","alt","meta"].filter((function(e){return!u[e]})).map((function(e){return"$event."+e+"Key"})).join("||"))}else r.push(o);return r.length&&(i+=function(e){return"if(!$event.type.indexOf('key')&&"+e.map(Dr).join("&&")+")return null;"}(r)),s&&(i+=s),"function($event){"+i+(t?"return "+e.value+".apply(null, arguments)":n?"return ("+e.value+").apply(null, arguments)":a?"return "+e.value:e.value)+"}"}return t||n?e.value:"function($event){"+(a?"return "+e.value:e.value)+"}"}function Dr(e){var t=parseInt(e,10);if(t)return"$event.keyCode!=="+t;var n=Or[e],a=Mr[e];return"_k($event.keyCode,"+JSON.stringify(e)+","+JSON.stringify(n)+",$event.key,"+JSON.stringify(a)+")"}var Rr={on:function(e,t){e.wrapListeners=function(e){return"_g("+e+","+t.value+")"}},bind:function(e,t){e.wrapData=function(n){return"_b("+n+",'"+e.tag+"',"+t.value+","+(t.modifiers&&t.modifiers.prop?"true":"false")+(t.modifiers&&t.modifiers.sync?",true":"")+")"}},cloak:D},Er=function(e){this.options=e,this.warn=e.warn||Va,this.transforms=Da(e.modules,"transformCode"),this.dataGenFns=Da(e.modules,"genData"),this.directives=I(I({},Rr),e.directives);var t=e.isReservedTag||R;this.maybeComponent=function(e){return!!e.component||!t(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function Pr(e,t){var n=new Er(t);return{render:"with(this){return "+(e?"script"===e.tag?"null":Lr(e,n):'_c("div")')+"}",staticRenderFns:n.staticRenderFns}}function Lr(e,t){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return Br(e,t);if(e.once&&!e.onceProcessed)return Fr(e,t);if(e.for&&!e.forProcessed)return Ur(e,t);if(e.if&&!e.ifProcessed)return $r(e,t);if("template"!==e.tag||e.slotTarget||t.pre){if("slot"===e.tag)return function(e,t){var n=e.slotName||'"default"',a=Hr(e,t),i="_t("+n+(a?",function(){return "+a+"}":""),s=e.attrs||e.dynamicAttrs?zr((e.attrs||[]).concat(e.dynamicAttrs||[]).map((function(e){return{name:S(e.name),value:e.value,dynamic:e.dynamic}}))):null,r=e.attrsMap["v-bind"];!s&&!r||a||(i+=",null");s&&(i+=","+s);r&&(i+=(s?"":",null")+","+r);return i+")"}(e,t);var n;if(e.component)n=function(e,t,n){var a=t.inlineTemplate?null:Hr(t,n,!0);return"_c("+e+","+Nr(t,n)+(a?","+a:"")+")"}(e.component,e,t);else{var a;(!e.plain||e.pre&&t.maybeComponent(e))&&(a=Nr(e,t));var i=e.inlineTemplate?null:Hr(e,t,!0);n="_c('"+e.tag+"'"+(a?","+a:"")+(i?","+i:"")+")"}for(var s=0;s<t.transforms.length;s++)n=t.transforms[s](e,n);return n}return Hr(e,t)||"void 0"}function Br(e,t){e.staticProcessed=!0;var n=t.pre;return e.pre&&(t.pre=e.pre),t.staticRenderFns.push("with(this){return "+Lr(e,t)+"}"),t.pre=n,"_m("+(t.staticRenderFns.length-1)+(e.staticInFor?",true":"")+")"}function Fr(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return $r(e,t);if(e.staticInFor){for(var n="",a=e.parent;a;){if(a.for){n=a.key;break}a=a.parent}return n?"_o("+Lr(e,t)+","+t.onceId+++","+n+")":Lr(e,t)}return Br(e,t)}function $r(e,t,n,a){return e.ifProcessed=!0,function e(t,n,a,i){if(!t.length)return i||"_e()";var s=t.shift();return s.exp?"("+s.exp+")?"+r(s.block)+":"+e(t,n,a,i):""+r(s.block);function r(e){return a?a(e,n):e.once?Fr(e,n):Lr(e,n)}}(e.ifConditions.slice(),t,n,a)}function Ur(e,t,n,a){var i=e.for,s=e.alias,r=e.iterator1?","+e.iterator1:"",o=e.iterator2?","+e.iterator2:"";return e.forProcessed=!0,(a||"_l")+"(("+i+"),function("+s+r+o+"){return "+(n||Lr)(e,t)+"})"}function Nr(e,t){var n="{",a=function(e,t){var n=e.directives;if(!n)return;var a,i,s,r,o="directives:[",u=!1;for(a=0,i=n.length;a<i;a++){s=n[a],r=!0;var d=t.directives[s.name];d&&(r=!!d(e,s,t.warn)),r&&(u=!0,o+='{name:"'+s.name+'",rawName:"'+s.rawName+'"'+(s.value?",value:("+s.value+"),expression:"+JSON.stringify(s.value):"")+(s.arg?",arg:"+(s.isDynamicArg?s.arg:'"'+s.arg+'"'):"")+(s.modifiers?",modifiers:"+JSON.stringify(s.modifiers):"")+"},")}if(u)return o.slice(0,-1)+"]"}(e,t);a&&(n+=a+","),e.key&&(n+="key:"+e.key+","),e.ref&&(n+="ref:"+e.ref+","),e.refInFor&&(n+="refInFor:true,"),e.pre&&(n+="pre:true,"),e.component&&(n+='tag:"'+e.tag+'",');for(var i=0;i<t.dataGenFns.length;i++)n+=t.dataGenFns[i](e);if(e.attrs&&(n+="attrs:"+zr(e.attrs)+","),e.props&&(n+="domProps:"+zr(e.props)+","),e.events&&(n+=Ir(e.events,!1)+","),e.nativeEvents&&(n+=Ir(e.nativeEvents,!0)+","),e.slotTarget&&!e.slotScope&&(n+="slot:"+e.slotTarget+","),e.scopedSlots&&(n+=function(e,t,n){var a=e.for||Object.keys(t).some((function(e){var n=t[e];return n.slotTargetDynamic||n.if||n.for||Wr(n)})),i=!!e.if;if(!a)for(var s=e.parent;s;){if(s.slotScope&&"_empty_"!==s.slotScope||s.for){a=!0;break}s.if&&(i=!0),s=s.parent}var r=Object.keys(t).map((function(e){return jr(t[e],n)})).join(",");return"scopedSlots:_u(["+r+"]"+(a?",null,true":"")+(!a&&i?",null,false,"+function(e){var t=5381,n=e.length;for(;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(r):"")+")"}(e,e.scopedSlots,t)+","),e.model&&(n+="model:{value:"+e.model.value+",callback:"+e.model.callback+",expression:"+e.model.expression+"},"),e.inlineTemplate){var s=function(e,t){var n=e.children[0];0;if(n&&1===n.type){var a=Pr(n,t.options);return"inlineTemplate:{render:function(){"+a.render+"},staticRenderFns:["+a.staticRenderFns.map((function(e){return"function(){"+e+"}"})).join(",")+"]}"}}(e,t);s&&(n+=s+",")}return n=n.replace(/,$/,"")+"}",e.dynamicAttrs&&(n="_b("+n+',"'+e.tag+'",'+zr(e.dynamicAttrs)+")"),e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function Wr(e){return 1===e.type&&("slot"===e.tag||e.children.some(Wr))}function jr(e,t){var n=e.attrsMap["slot-scope"];if(e.if&&!e.ifProcessed&&!n)return $r(e,t,jr,"null");if(e.for&&!e.forProcessed)return Ur(e,t,jr);var a="_empty_"===e.slotScope?"":String(e.slotScope),i="function("+a+"){return "+("template"===e.tag?e.if&&n?"("+e.if+")?"+(Hr(e,t)||"undefined")+":undefined":Hr(e,t)||"undefined":Lr(e,t))+"}",s=a?"":",proxy:true";return"{key:"+(e.slotTarget||'"default"')+",fn:"+i+s+"}"}function Hr(e,t,n,a,i){var s=e.children;if(s.length){var r=s[0];if(1===s.length&&r.for&&"template"!==r.tag&&"slot"!==r.tag){var o=n?t.maybeComponent(r)?",1":",0":"";return""+(a||Lr)(r,t)+o}var u=n?function(e,t){for(var n=0,a=0;a<e.length;a++){var i=e[a];if(1===i.type){if(Gr(i)||i.ifConditions&&i.ifConditions.some((function(e){return Gr(e.block)}))){n=2;break}(t(i)||i.ifConditions&&i.ifConditions.some((function(e){return t(e.block)})))&&(n=1)}}return n}(s,t.maybeComponent):0,d=i||qr;return"["+s.map((function(e){return d(e,t)})).join(",")+"]"+(u?","+u:"")}}function Gr(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function qr(e,t){return 1===e.type?Lr(e,t):3===e.type&&e.isComment?function(e){return"_e("+JSON.stringify(e.text)+")"}(e):function(e){return"_v("+(2===e.type?e.expression:Yr(JSON.stringify(e.text)))+")"}(e)}function zr(e){for(var t="",n="",a=0;a<e.length;a++){var i=e[a],s=Yr(i.value);i.dynamic?n+=i.name+","+s+",":t+='"'+i.name+'":'+s+","}return t="{"+t.slice(0,-1)+"}",n?"_d("+t+",["+n.slice(0,-1)+"])":t}function Yr(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)");function Kr(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),D}}function Jr(e){var t=Object.create(null);return function(n,a,i){(a=I({},a)).warn;delete a.warn;var s=a.delimiters?String(a.delimiters)+n:n;if(t[s])return t[s];var r=e(n,a);var o={},u=[];return o.render=Kr(r.render,u),o.staticRenderFns=r.staticRenderFns.map((function(e){return Kr(e,u)})),t[s]=o}}var Xr,Zr,Qr=(Xr=function(e,t){var n=or(e.trim(),t);!1!==t.optimize&&kr(n,t);var a=Pr(n,t);return{ast:n,render:a.render,staticRenderFns:a.staticRenderFns}},function(e){function t(t,n){var a=Object.create(e),i=[],s=[];if(n)for(var r in n.modules&&(a.modules=(e.modules||[]).concat(n.modules)),n.directives&&(a.directives=I(Object.create(e.directives||null),n.directives)),n)"modules"!==r&&"directives"!==r&&(a[r]=n[r]);a.warn=function(e,t,n){(n?s:i).push(e)};var o=Xr(t.trim(),a);return o.errors=i,o.tips=s,o}return{compile:t,compileToFunctions:Jr(t)}})(gr),eo=(Qr.compile,Qr.compileToFunctions);function to(e){return(Zr=Zr||document.createElement("div")).innerHTML=e?'<a href="\n"/>':'<div a="\n"/>',Zr.innerHTML.indexOf("&#10;")>0}var no=!!z&&to(!1),ao=!!z&&to(!0),io=k((function(e){var t=ta(e);return t&&t.innerHTML})),so=On.prototype.$mount;On.prototype.$mount=function(e,t){if((e=e&&ta(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var a=n.template;if(a)if("string"==typeof a)"#"===a.charAt(0)&&(a=io(a));else{if(!a.nodeType)return this;a=a.innerHTML}else e&&(a=function(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML}(e));if(a){0;var i=eo(a,{outputSourceRange:!1,shouldDecodeNewlines:no,shouldDecodeNewlinesForHref:ao,delimiters:n.delimiters,comments:n.comments},this),s=i.render,r=i.staticRenderFns;n.render=s,n.staticRenderFns=r}}return so.call(this,e,t)},On.compile=eo,t.a=On}).call(this,n(0),n(7).setImmediate)},function(e){e.exports=JSON.parse('{"a":"hardhat-docgen","b":"https://github.com/ItsNickBarry/hardhat-docgen"}')},function(e,t,n){var a=n(5);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n(11).default)("0b345cf4",a,!1,{})},function(e,t,n){"use strict";n(3)},function(e,t,n){(t=e.exports=n(6)(!1)).push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600;700&display=swap);",""]),t.push([e.i,"\nhtml,\nbody {\n  font-family: 'Source Code Pro', monospace;\n}\n",""])},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",a=e[3];if(!a)return n;if(t&&"function"==typeof btoa){var i=(r=a,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */"),s=a.sources.map((function(e){return"/*# sourceURL="+a.sourceRoot+e+" */"}));return[n].concat(s).concat([i]).join("\n")}var r;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n})).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var a={},i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(i=0;i<e.length;i++){var r=e[i];null!=r[0]&&a[r[0]]||(n&&!r[2]?r[2]=n:n&&(r[2]="("+r[2]+") and ("+n+")"),t.push(r))}},t}},function(e,t,n){(function(e){var a=void 0!==e&&e||"undefined"!=typeof self&&self||window,i=Function.prototype.apply;function s(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new s(i.call(setTimeout,a,arguments),clearTimeout)},t.setInterval=function(){return new s(i.call(setInterval,a,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},s.prototype.unref=s.prototype.ref=function(){},s.prototype.close=function(){this._clearFn.call(a,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},n(8),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(0))},function(e,t,n){(function(e,t){!function(e,n){"use strict";if(!e.setImmediate){var a,i,s,r,o,u=1,d={},p=!1,l=e.document,c=Object.getPrototypeOf&&Object.getPrototypeOf(e);c=c&&c.setTimeout?c:e,"[object process]"==={}.toString.call(e.process)?a=function(){var e=y(arguments);return t.nextTick(m(f,e)),e}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?e.MessageChannel?((s=new MessageChannel).port1.onmessage=function(e){f(e.data)},a=function(){var e=y(arguments);return s.port2.postMessage(e),e}):l&&"onreadystatechange"in l.createElement("script")?(i=l.documentElement,a=function(){var e=y(arguments),t=l.createElement("script");return t.onreadystatechange=function(){f(e),t.onreadystatechange=null,i.removeChild(t),t=null},i.appendChild(t),e}):a=function(){var e=y(arguments);return setTimeout(m(f,e),0),e}:(r="setImmediate$"+Math.random()+"$",o=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(r)&&f(+t.data.slice(r.length))},e.addEventListener?e.addEventListener("message",o,!1):e.attachEvent("onmessage",o),a=function(){var t=y(arguments);return e.postMessage(r+t,"*"),t}),c.setImmediate=a,c.clearImmediate=h}function y(e){return d[u]=m.apply(void 0,e),u++}function m(e){var t=[].slice.call(arguments,1);return function(){"function"==typeof e?e.apply(void 0,t):new Function(""+e)()}}function f(e){if(p)setTimeout(m(f,e),0);else{var t=d[e];if(t){p=!0;try{t()}finally{h(e),p=!1}}}}function h(e){delete d[e]}}("undefined"==typeof self?void 0===e?this:e:self)}).call(this,n(0),n(9))},function(e,t){var n,a,i=e.exports={};function s(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function o(e){if(n===setTimeout)return setTimeout(e,0);if((n===s||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:s}catch(e){n=s}try{a="function"==typeof clearTimeout?clearTimeout:r}catch(e){a=r}}();var u,d=[],p=!1,l=-1;function c(){p&&u&&(p=!1,u.length?d=u.concat(d):l=-1,d.length&&y())}function y(){if(!p){var e=o(c);p=!0;for(var t=d.length;t;){for(u=d,d=[];++l<t;)u&&u[l].run();l=-1,t=d.length}u=null,p=!1,function(e){if(a===clearTimeout)return clearTimeout(e);if((a===r||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(e);try{a(e)}catch(t){try{return a.call(null,e)}catch(t){return a.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function f(){}i.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];d.push(new m(e,t)),1!==d.length||p||o(y)},m.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=f,i.addListener=f,i.once=f,i.off=f,i.removeListener=f,i.removeAllListeners=f,i.emit=f,i.prependListener=f,i.prependOnceListener=f,i.listeners=function(e){return[]},i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(e,t,n){"use strict";n.r(t);var a=n(1);
/*!
  * vue-router v3.5.1
  * (c) 2021 Evan You
  * @license MIT
  */function i(e,t){for(var n in t)e[n]=t[n];return e}var s=/[!'()*]/g,r=function(e){return"%"+e.charCodeAt(0).toString(16)},o=/%2C/g,u=function(e){return encodeURIComponent(e).replace(s,r).replace(o,",")};function d(e){try{return decodeURIComponent(e)}catch(e){0}return e}var p=function(e){return null==e||"object"==typeof e?e:String(e)};function l(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),a=d(n.shift()),i=n.length>0?d(n.join("=")):null;void 0===t[a]?t[a]=i:Array.isArray(t[a])?t[a].push(i):t[a]=[t[a],i]})),t):t}function c(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return u(t);if(Array.isArray(n)){var a=[];return n.forEach((function(e){void 0!==e&&(null===e?a.push(u(t)):a.push(u(t)+"="+u(e)))})),a.join("&")}return u(t)+"="+u(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var y=/\/?$/;function m(e,t,n,a){var i=a&&a.options.stringifyQuery,s=t.query||{};try{s=f(s)}catch(e){}var r={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:s,params:t.params||{},fullPath:T(t,i),matched:e?b(e):[]};return n&&(r.redirectedFrom=T(n,i)),Object.freeze(r)}function f(e){if(Array.isArray(e))return e.map(f);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=f(e[n]);return t}return e}var h=m(null,{path:"/"});function b(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function T(e,t){var n=e.path,a=e.query;void 0===a&&(a={});var i=e.hash;return void 0===i&&(i=""),(n||"/")+(t||c)(a)+i}function v(e,t,n){return t===h?e===t:!!t&&(e.path&&t.path?e.path.replace(y,"")===t.path.replace(y,"")&&(n||e.hash===t.hash&&g(e.query,t.query)):!(!e.name||!t.name)&&(e.name===t.name&&(n||e.hash===t.hash&&g(e.query,t.query)&&g(e.params,t.params))))}function g(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),a=Object.keys(t).sort();return n.length===a.length&&n.every((function(n,i){var s=e[n];if(a[i]!==n)return!1;var r=t[n];return null==s||null==r?s===r:"object"==typeof s&&"object"==typeof r?g(s,r):String(s)===String(r)}))}function w(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var a in n.instances){var i=n.instances[a],s=n.enteredCbs[a];if(i&&s){delete n.enteredCbs[a];for(var r=0;r<s.length;r++)i._isBeingDestroyed||s[r](i)}}}}var k={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,a=t.children,s=t.parent,r=t.data;r.routerView=!0;for(var o=s.$createElement,u=n.name,d=s.$route,p=s._routerViewCache||(s._routerViewCache={}),l=0,c=!1;s&&s._routerRoot!==s;){var y=s.$vnode?s.$vnode.data:{};y.routerView&&l++,y.keepAlive&&s._directInactive&&s._inactive&&(c=!0),s=s.$parent}if(r.routerViewDepth=l,c){var m=p[u],f=m&&m.component;return f?(m.configProps&&_(f,r,m.route,m.configProps),o(f,r,a)):o()}var h=d.matched[l],b=h&&h.components[u];if(!h||!b)return p[u]=null,o();p[u]={component:b},r.registerRouteInstance=function(e,t){var n=h.instances[u];(t&&n!==e||!t&&n===e)&&(h.instances[u]=t)},(r.hook||(r.hook={})).prepatch=function(e,t){h.instances[u]=t.componentInstance},r.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==h.instances[u]&&(h.instances[u]=e.componentInstance),w(d)};var T=h.props&&h.props[u];return T&&(i(p[u],{route:d,configProps:T}),_(b,r,d,T)),o(b,r,a)}};function _(e,t,n,a){var s=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,a);if(s){s=t.props=i({},s);var r=t.attrs=t.attrs||{};for(var o in s)e.props&&o in e.props||(r[o]=s[o],delete s[o])}}function S(e,t,n){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return t+e;var i=t.split("/");n&&i[i.length-1]||i.pop();for(var s=e.replace(/^\//,"").split("/"),r=0;r<s.length;r++){var o=s[r];".."===o?i.pop():"."!==o&&i.push(o)}return""!==i[0]&&i.unshift(""),i.join("/")}function x(e){return e.replace(/\/\//g,"/")}var O=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},M=N,A=R,C=function(e,t){return P(R(e,t),t)},I=P,V=U,D=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function R(e,t){for(var n,a=[],i=0,s=0,r="",o=t&&t.delimiter||"/";null!=(n=D.exec(e));){var u=n[0],d=n[1],p=n.index;if(r+=e.slice(s,p),s=p+u.length,d)r+=d[1];else{var l=e[s],c=n[2],y=n[3],m=n[4],f=n[5],h=n[6],b=n[7];r&&(a.push(r),r="");var T=null!=c&&null!=l&&l!==c,v="+"===h||"*"===h,g="?"===h||"*"===h,w=n[2]||o,k=m||f;a.push({name:y||i++,prefix:c||"",delimiter:w,optional:g,repeat:v,partial:T,asterisk:!!b,pattern:k?B(k):b?".*":"[^"+L(w)+"]+?"})}}return s<e.length&&(r+=e.substr(s)),r&&a.push(r),a}function E(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function P(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",$(t)));return function(t,a){for(var i="",s=t||{},r=(a||{}).pretty?E:encodeURIComponent,o=0;o<e.length;o++){var u=e[o];if("string"!=typeof u){var d,p=s[u.name];if(null==p){if(u.optional){u.partial&&(i+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(O(p)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var l=0;l<p.length;l++){if(d=r(p[l]),!n[o].test(d))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(d)+"`");i+=(0===l?u.prefix:u.delimiter)+d}}else{if(d=u.asterisk?encodeURI(p).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):r(p),!n[o].test(d))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+d+'"');i+=u.prefix+d}}else i+=u}return i}}function L(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function B(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function F(e,t){return e.keys=t,e}function $(e){return e&&e.sensitive?"":"i"}function U(e,t,n){O(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,i=!1!==n.end,s="",r=0;r<e.length;r++){var o=e[r];if("string"==typeof o)s+=L(o);else{var u=L(o.prefix),d="(?:"+o.pattern+")";t.push(o),o.repeat&&(d+="(?:"+u+d+")*"),s+=d=o.optional?o.partial?u+"("+d+")?":"(?:"+u+"("+d+"))?":u+"("+d+")"}}var p=L(n.delimiter||"/"),l=s.slice(-p.length)===p;return a||(s=(l?s.slice(0,-p.length):s)+"(?:"+p+"(?=$))?"),s+=i?"$":a&&l?"":"(?="+p+"|$)",F(new RegExp("^"+s,$(n)),t)}function N(e,t,n){return O(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var a=0;a<n.length;a++)t.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return F(e,t)}(e,t):O(e)?function(e,t,n){for(var a=[],i=0;i<e.length;i++)a.push(N(e[i],t,n).source);return F(new RegExp("(?:"+a.join("|")+")",$(n)),t)}(e,t,n):function(e,t,n){return U(R(e,n),t,n)}(e,t,n)}M.parse=A,M.compile=C,M.tokensToFunction=I,M.tokensToRegExp=V;var W=Object.create(null);function j(e,t,n){t=t||{};try{var a=W[e]||(W[e]=M.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),a(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function H(e,t,n,a){var s="string"==typeof e?{path:e}:e;if(s._normalized)return s;if(s.name){var r=(s=i({},e)).params;return r&&"object"==typeof r&&(s.params=i({},r)),s}if(!s.path&&s.params&&t){(s=i({},s))._normalized=!0;var o=i(i({},t.params),s.params);if(t.name)s.name=t.name,s.params=o;else if(t.matched.length){var u=t.matched[t.matched.length-1].path;s.path=j(u,o,t.path)}else 0;return s}var d=function(e){var t="",n="",a=e.indexOf("#");a>=0&&(t=e.slice(a),e=e.slice(0,a));var i=e.indexOf("?");return i>=0&&(n=e.slice(i+1),e=e.slice(0,i)),{path:e,query:n,hash:t}}(s.path||""),c=t&&t.path||"/",y=d.path?S(d.path,c,n||s.append):c,m=function(e,t,n){void 0===t&&(t={});var a,i=n||l;try{a=i(e||"")}catch(e){a={}}for(var s in t){var r=t[s];a[s]=Array.isArray(r)?r.map(p):p(r)}return a}(d.query,s.query,a&&a.options.parseQuery),f=s.hash||d.hash;return f&&"#"!==f.charAt(0)&&(f="#"+f),{_normalized:!0,path:y,query:m,hash:f}}var G,q=function(){},z={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,a=this.$route,s=n.resolve(this.to,a,this.append),r=s.location,o=s.route,u=s.href,d={},p=n.options.linkActiveClass,l=n.options.linkExactActiveClass,c=null==p?"router-link-active":p,f=null==l?"router-link-exact-active":l,h=null==this.activeClass?c:this.activeClass,b=null==this.exactActiveClass?f:this.exactActiveClass,T=o.redirectedFrom?m(null,H(o.redirectedFrom),null,n):o;d[b]=v(a,T,this.exactPath),d[h]=this.exact||this.exactPath?d[b]:function(e,t){return 0===e.path.replace(y,"/").indexOf(t.path.replace(y,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(a,T);var g=d[b]?this.ariaCurrentValue:null,w=function(e){Y(e)&&(t.replace?n.replace(r,q):n.push(r,q))},k={click:Y};Array.isArray(this.event)?this.event.forEach((function(e){k[e]=w})):k[this.event]=w;var _={class:d},S=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:u,route:o,navigate:w,isActive:d[h],isExactActive:d[b]});if(S){if(1===S.length)return S[0];if(S.length>1||!S.length)return 0===S.length?e():e("span",{},S)}if("a"===this.tag)_.on=k,_.attrs={href:u,"aria-current":g};else{var x=function e(t){var n;if(t)for(var a=0;a<t.length;a++){if("a"===(n=t[a]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(x){x.isStatic=!1;var O=x.data=i({},x.data);for(var M in O.on=O.on||{},O.on){var A=O.on[M];M in k&&(O.on[M]=Array.isArray(A)?A:[A])}for(var C in k)C in O.on?O.on[C].push(k[C]):O.on[C]=w;var I=x.data.attrs=i({},x.data.attrs);I.href=u,I["aria-current"]=g}else _.on=k}return e(this.tag,_,this.$slots.default)}};function Y(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var K="undefined"!=typeof window;function J(e,t,n,a,i){var s=t||[],r=n||Object.create(null),o=a||Object.create(null);e.forEach((function(e){!function e(t,n,a,i,s,r){var o=i.path,u=i.name;0;var d=i.pathToRegexpOptions||{},p=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return x(t.path+"/"+e)}(o,s,d.strict);"boolean"==typeof i.caseSensitive&&(d.sensitive=i.caseSensitive);var l={path:p,regex:X(p,d),components:i.components||{default:i.component},alias:i.alias?"string"==typeof i.alias?[i.alias]:i.alias:[],instances:{},enteredCbs:{},name:u,parent:s,matchAs:r,redirect:i.redirect,beforeEnter:i.beforeEnter,meta:i.meta||{},props:null==i.props?{}:i.components?i.props:{default:i.props}};i.children&&i.children.forEach((function(i){var s=r?x(r+"/"+i.path):void 0;e(t,n,a,i,l,s)}));n[l.path]||(t.push(l.path),n[l.path]=l);if(void 0!==i.alias)for(var c=Array.isArray(i.alias)?i.alias:[i.alias],y=0;y<c.length;++y){0;var m={path:c[y],children:i.children};e(t,n,a,m,s,l.path||"/")}u&&(a[u]||(a[u]=l))}(s,r,o,e,i)}));for(var u=0,d=s.length;u<d;u++)"*"===s[u]&&(s.push(s.splice(u,1)[0]),d--,u--);return{pathList:s,pathMap:r,nameMap:o}}function X(e,t){return M(e,[],t)}function Z(e,t){var n=J(e),a=n.pathList,i=n.pathMap,s=n.nameMap;function r(e,n,r){var o=H(e,n,!1,t),d=o.name;if(d){var p=s[d];if(!p)return u(null,o);var l=p.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof o.params&&(o.params={}),n&&"object"==typeof n.params)for(var c in n.params)!(c in o.params)&&l.indexOf(c)>-1&&(o.params[c]=n.params[c]);return o.path=j(p.path,o.params),u(p,o,r)}if(o.path){o.params={};for(var y=0;y<a.length;y++){var m=a[y],f=i[m];if(Q(f.regex,o.path,o.params))return u(f,o,r)}}return u(null,o)}function o(e,n){var a=e.redirect,i="function"==typeof a?a(m(e,n,null,t)):a;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return u(null,n);var o=i,d=o.name,p=o.path,l=n.query,c=n.hash,y=n.params;if(l=o.hasOwnProperty("query")?o.query:l,c=o.hasOwnProperty("hash")?o.hash:c,y=o.hasOwnProperty("params")?o.params:y,d){s[d];return r({_normalized:!0,name:d,query:l,hash:c,params:y},void 0,n)}if(p){var f=function(e,t){return S(e,t.parent?t.parent.path:"/",!0)}(p,e);return r({_normalized:!0,path:j(f,y),query:l,hash:c},void 0,n)}return u(null,n)}function u(e,n,a){return e&&e.redirect?o(e,a||n):e&&e.matchAs?function(e,t,n){var a=r({_normalized:!0,path:j(n,t.params)});if(a){var i=a.matched,s=i[i.length-1];return t.params=a.params,u(s,t)}return u(null,t)}(0,n,e.matchAs):m(e,n,a,t)}return{match:r,addRoute:function(e,t){var n="object"!=typeof e?s[e]:void 0;J([t||e],a,i,s,n),n&&J(n.alias.map((function(e){return{path:e,children:[t]}})),a,i,s,n)},getRoutes:function(){return a.map((function(e){return i[e]}))},addRoutes:function(e){J(e,a,i,s)}}}function Q(e,t,n){var a=t.match(e);if(!a)return!1;if(!n)return!0;for(var i=1,s=a.length;i<s;++i){var r=e.keys[i-1];r&&(n[r.name||"pathMatch"]="string"==typeof a[i]?d(a[i]):a[i])}return!0}var ee=K&&window.performance&&window.performance.now?window.performance:Date;function te(){return ee.now().toFixed(3)}var ne=te();function ae(){return ne}function ie(e){return ne=e}var se=Object.create(null);function re(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=i({},window.history.state);return n.key=ae(),window.history.replaceState(n,"",t),window.addEventListener("popstate",de),function(){window.removeEventListener("popstate",de)}}function oe(e,t,n,a){if(e.app){var i=e.options.scrollBehavior;i&&e.app.$nextTick((function(){var s=function(){var e=ae();if(e)return se[e]}(),r=i.call(e,t,n,a?s:null);r&&("function"==typeof r.then?r.then((function(e){me(e,s)})).catch((function(e){0})):me(r,s))}))}}function ue(){var e=ae();e&&(se[e]={x:window.pageXOffset,y:window.pageYOffset})}function de(e){ue(),e.state&&e.state.key&&ie(e.state.key)}function pe(e){return ce(e.x)||ce(e.y)}function le(e){return{x:ce(e.x)?e.x:window.pageXOffset,y:ce(e.y)?e.y:window.pageYOffset}}function ce(e){return"number"==typeof e}var ye=/^#\d/;function me(e,t){var n,a="object"==typeof e;if(a&&"string"==typeof e.selector){var i=ye.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(i){var s=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-n.left-t.x,y:a.top-n.top-t.y}}(i,s={x:ce((n=s).x)?n.x:0,y:ce(n.y)?n.y:0})}else pe(e)&&(t=le(e))}else a&&pe(e)&&(t=le(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var fe,he=K&&((-1===(fe=window.navigator.userAgent).indexOf("Android 2.")&&-1===fe.indexOf("Android 4.0")||-1===fe.indexOf("Mobile Safari")||-1!==fe.indexOf("Chrome")||-1!==fe.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function be(e,t){ue();var n=window.history;try{if(t){var a=i({},n.state);a.key=ae(),n.replaceState(a,"",e)}else n.pushState({key:ie(te())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function Te(e){be(e,!0)}function ve(e,t,n){var a=function(i){i>=e.length?n():e[i]?t(e[i],(function(){a(i+1)})):a(i+1)};a(0)}var ge={redirected:2,aborted:4,cancelled:8,duplicated:16};function we(e,t){return _e(e,t,ge.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return Se.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function ke(e,t){return _e(e,t,ge.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function _e(e,t,n,a){var i=new Error(a);return i._isRouter=!0,i.from=e,i.to=t,i.type=n,i}var Se=["params","query","hash"];function xe(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Oe(e,t){return xe(e)&&e._isRouter&&(null==t||e.type===t)}function Me(e){return function(t,n,a){var i=!1,s=0,r=null;Ae(e,(function(e,t,n,o){if("function"==typeof e&&void 0===e.cid){i=!0,s++;var u,d=Ve((function(t){var i;((i=t).__esModule||Ie&&"Module"===i[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:G.extend(t),n.components[o]=t,--s<=0&&a()})),p=Ve((function(e){var t="Failed to resolve async component "+o+": "+e;r||(r=xe(e)?e:new Error(t),a(r))}));try{u=e(d,p)}catch(e){p(e)}if(u)if("function"==typeof u.then)u.then(d,p);else{var l=u.component;l&&"function"==typeof l.then&&l.then(d,p)}}})),i||a()}}function Ae(e,t){return Ce(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Ce(e){return Array.prototype.concat.apply([],e)}var Ie="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Ve(e){var t=!1;return function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];if(!t)return t=!0,e.apply(this,n)}}var De=function(e,t){this.router=e,this.base=function(e){if(!e)if(K){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=h,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Re(e,t,n,a){var i=Ae(e,(function(e,a,i,s){var r=function(e,t){"function"!=typeof e&&(e=G.extend(e));return e.options[t]}(e,t);if(r)return Array.isArray(r)?r.map((function(e){return n(e,a,i,s)})):n(r,a,i,s)}));return Ce(a?i.reverse():i)}function Ee(e,t){if(t)return function(){return e.apply(t,arguments)}}De.prototype.listen=function(e){this.cb=e},De.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},De.prototype.onError=function(e){this.errorCbs.push(e)},De.prototype.transitionTo=function(e,t,n){var a,i=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var s=this.current;this.confirmTransition(a,(function(){i.updateRoute(a),t&&t(a),i.ensureURL(),i.router.afterHooks.forEach((function(e){e&&e(a,s)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(e){e(a)})))}),(function(e){n&&n(e),e&&!i.ready&&(Oe(e,ge.redirected)&&s===h||(i.ready=!0,i.readyErrorCbs.forEach((function(t){t(e)}))))}))},De.prototype.confirmTransition=function(e,t,n){var a=this,i=this.current;this.pending=e;var s,r,o=function(e){!Oe(e)&&xe(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},u=e.matched.length-1,d=i.matched.length-1;if(v(e,i)&&u===d&&e.matched[u]===i.matched[d])return this.ensureURL(),o(((r=_e(s=i,e,ge.duplicated,'Avoided redundant navigation to current location: "'+s.fullPath+'".')).name="NavigationDuplicated",r));var p=function(e,t){var n,a=Math.max(e.length,t.length);for(n=0;n<a&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),l=p.updated,c=p.deactivated,y=p.activated,m=[].concat(function(e){return Re(e,"beforeRouteLeave",Ee,!0)}(c),this.router.beforeHooks,function(e){return Re(e,"beforeRouteUpdate",Ee)}(l),y.map((function(e){return e.beforeEnter})),Me(y)),f=function(t,n){if(a.pending!==e)return o(ke(i,e));try{t(e,i,(function(t){!1===t?(a.ensureURL(!0),o(function(e,t){return _e(e,t,ge.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(i,e))):xe(t)?(a.ensureURL(!0),o(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(o(we(i,e)),"object"==typeof t&&t.replace?a.replace(t):a.push(t)):n(t)}))}catch(e){o(e)}};ve(m,f,(function(){ve(function(e){return Re(e,"beforeRouteEnter",(function(e,t,n,a){return function(e,t,n){return function(a,i,s){return e(a,i,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),s(e)}))}}(e,n,a)}))}(y).concat(a.router.resolveHooks),f,(function(){if(a.pending!==e)return o(ke(i,e));a.pending=null,t(e),a.router.app&&a.router.app.$nextTick((function(){w(e)}))}))}))},De.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},De.prototype.setupListeners=function(){},De.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=h,this.pending=null};var Pe=function(e){function t(t,n){e.call(this,t,n),this._startLocation=Le(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,a=he&&n;a&&this.listeners.push(re());var i=function(){var n=e.current,i=Le(e.base);e.current===h&&i===e._startLocation||e.transitionTo(i,(function(e){a&&oe(t,e,n,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){be(x(a.base+e.fullPath)),oe(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){Te(x(a.base+e.fullPath)),oe(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(Le(this.base)!==this.current.fullPath){var t=x(this.base+this.current.fullPath);e?be(t):Te(t)}},t.prototype.getCurrentLocation=function(){return Le(this.base)},t}(De);function Le(e){var t=window.location.pathname;return e&&0===t.toLowerCase().indexOf(e.toLowerCase())&&(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var Be=function(e){function t(t,n,a){e.call(this,t,n),a&&function(e){var t=Le(e);if(!/^\/#/.test(t))return window.location.replace(x(e+"/#"+t)),!0}(this.base)||Fe()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=he&&t;n&&this.listeners.push(re());var a=function(){var t=e.current;Fe()&&e.transitionTo($e(),(function(a){n&&oe(e.router,a,t,!0),he||We(a.fullPath)}))},i=he?"popstate":"hashchange";window.addEventListener(i,a),this.listeners.push((function(){window.removeEventListener(i,a)}))}},t.prototype.push=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){Ne(e.fullPath),oe(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){We(e.fullPath),oe(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;$e()!==t&&(e?Ne(t):We(t))},t.prototype.getCurrentLocation=function(){return $e()},t}(De);function Fe(){var e=$e();return"/"===e.charAt(0)||(We("/"+e),!1)}function $e(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function Ue(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function Ne(e){he?be(Ue(e)):window.location.hash=e}function We(e){he?Te(Ue(e)):window.location.replace(Ue(e))}var je=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var a=this.stack[n];this.confirmTransition(a,(function(){var e=t.current;t.index=n,t.updateRoute(a),t.router.afterHooks.forEach((function(t){t&&t(a,e)}))}),(function(e){Oe(e,ge.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(De),He=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Z(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!he&&!1!==e.fallback,this.fallback&&(t="hash"),K||(t="abstract"),this.mode=t,t){case"history":this.history=new Pe(this,e.base);break;case"hash":this.history=new Be(this,e.base,this.fallback);break;case"abstract":this.history=new je(this,e.base);break;default:0}},Ge={currentRoute:{configurable:!0}};function qe(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}He.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},Ge.currentRoute.get=function(){return this.history&&this.history.current},He.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof Pe||n instanceof Be){var a=function(e){n.setupListeners(),function(e){var a=n.current,i=t.options.scrollBehavior;he&&i&&"fullPath"in e&&oe(t,e,a,!1)}(e)};n.transitionTo(n.getCurrentLocation(),a,a)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},He.prototype.beforeEach=function(e){return qe(this.beforeHooks,e)},He.prototype.beforeResolve=function(e){return qe(this.resolveHooks,e)},He.prototype.afterEach=function(e){return qe(this.afterHooks,e)},He.prototype.onReady=function(e,t){this.history.onReady(e,t)},He.prototype.onError=function(e){this.history.onError(e)},He.prototype.push=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.push(e,t,n)}));this.history.push(e,t,n)},He.prototype.replace=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.replace(e,t,n)}));this.history.replace(e,t,n)},He.prototype.go=function(e){this.history.go(e)},He.prototype.back=function(){this.go(-1)},He.prototype.forward=function(){this.go(1)},He.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},He.prototype.resolve=function(e,t,n){var a=H(e,t=t||this.history.current,n,this),i=this.match(a,t),s=i.redirectedFrom||i.fullPath;return{location:a,route:i,href:function(e,t,n){var a="hash"===n?"#"+t:t;return e?x(e+"/"+a):a}(this.history.base,s,this.mode),normalizedTo:a,resolved:i}},He.prototype.getRoutes=function(){return this.matcher.getRoutes()},He.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==h&&this.history.transitionTo(this.history.getCurrentLocation())},He.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==h&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(He.prototype,Ge),He.install=function e(t){if(!e.installed||G!==t){e.installed=!0,G=t;var n=function(e){return void 0!==e},a=function(e,t){var a=e.$options._parentVnode;n(a)&&n(a=a.data)&&n(a=a.registerRouteInstance)&&a(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",k),t.component("RouterLink",z);var i=t.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},He.version="3.5.1",He.isNavigationFailure=Oe,He.NavigationFailureType=ge,He.START_LOCATION=h,K&&window.Vue&&window.Vue.use(He);var ze=He,Ye=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"min-h-screen bg-gray-100 px-4 pt-6"},[t("router-view")],1)};Ye._withStripped=!0;n(4);function Ke(e,t,n,a,i,s,r,o){var u,d="function"==typeof e?e.options:e;if(t&&(d.render=t,d.staticRenderFns=n,d._compiled=!0),a&&(d.functional=!0),s&&(d._scopeId="data-v-"+s),r?(u=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},d._ssrRegister=u):i&&(u=o?function(){i.call(this,(d.functional?this.parent:this).$root.$options.shadowRoot)}:i),u)if(d.functional){d._injectStyles=u;var p=d.render;d.render=function(e,t){return u.call(t),p(e,t)}}else{var l=d.beforeCreate;d.beforeCreate=l?[].concat(l,u):[u]}return{exports:e,options:d}}var Je=Ke({},Ye,[],!1,null,null,null);Je.options.__file="node_modules/hardhat-docgen/src/App.vue";var Xe=Je.exports,Ze=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("HeaderBar"),e._v(" "),n("div",{staticClass:"pb-32"},[n("div",{staticClass:"space-y-4"},[n("span",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.source)+"\n      ")]),e._v(" "),n("h1",{staticClass:"text-xl"},[e._v("\n        "+e._s(e.json.name)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.title)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.author)+"\n      ")]),e._v(" "),n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))])]),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.hasOwnProperty("constructor")?n("Member",{attrs:{json:e.json.constructor}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.receive?n("Member",{attrs:{json:e.json.receive}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.fallback?n("Member",{attrs:{json:e.json.fallback}}):e._e()],1),e._v(" "),e.json.events?n("MemberSet",{attrs:{title:"Events",json:e.json.events}}):e._e(),e._v(" "),e.json.stateVariables?n("MemberSet",{attrs:{title:"State Variables",json:e.json.stateVariables}}):e._e(),e._v(" "),e.json.methods?n("MemberSet",{attrs:{title:"Methods",json:e.json.methods}}):e._e()],1),e._v(" "),n("FooterBar")],1)};Ze._withStripped=!0;var Qe=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"bg-gray-100 fixed bottom-0 right-0 w-full border-t border-dashed border-gray-300"},[n("div",{staticClass:"w-full text-center py-2 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("button",{staticClass:"py-1 px-2 text-gray-500",on:{click:function(t){return e.openLink(e.repository)}}},[e._v("\n      built with "+e._s(e.name)+"\n    ")])])])};Qe._withStripped=!0;var et=n(2),tt=Ke({data:function(){return{repository:et.b,name:et.a}},methods:{openLink(e){window.open(e,"_blank")}}},Qe,[],!1,null,null,null);tt.options.__file="node_modules/hardhat-docgen/src/components/FooterBar.vue";var nt=tt.exports,at=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"w-full border-b border-dashed py-2 border-gray-300"},[t("router-link",{staticClass:"py-2 text-gray-500",attrs:{to:"/"}},[this._v("\n    <- Go back\n  ")])],1)};at._withStripped=!0;var it=Ke({},at,[],!1,null,null,null);it.options.__file="node_modules/hardhat-docgen/src/components/HeaderBar.vue";var st=it.exports,rt=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"border-2 border-gray-400 border-dashed w-full p-2"},[n("h3",{staticClass:"text-lg pb-2 mb-2 border-b-2 border-gray-400 border-dashed"},[e._v("\n    "+e._s(e.name)+" "+e._s(e.keywords)+" "+e._s(e.inputSignature)+"\n  ")]),e._v(" "),n("div",{staticClass:"space-y-3"},[n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))]),e._v(" "),n("MemberSection",{attrs:{name:"Parameters",items:e.inputs}}),e._v(" "),n("MemberSection",{attrs:{name:"Return Values",items:e.outputs}})],1)])};rt._withStripped=!0;var ot=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.items.length>0?n("ul",[n("h4",{staticClass:"text-lg"},[e._v("\n    "+e._s(e.name)+"\n  ")]),e._v(" "),e._l(e.items,(function(t,a){return n("li",{key:a},[n("span",{staticClass:"bg-gray-300"},[e._v(e._s(t.type))]),e._v(" "),n("b",[e._v(e._s(t.name||"_"+a))]),t.desc?n("span",[e._v(": "),n("i",[e._v(e._s(t.desc))])]):e._e()])}))],2):e._e()};ot._withStripped=!0;var ut=Ke({props:{name:{type:String,default:""},items:{type:Array,default:()=>new Array}}},ot,[],!1,null,null,null);ut.options.__file="node_modules/hardhat-docgen/src/components/MemberSection.vue";var dt=Ke({components:{MemberSection:ut.exports},props:{json:{type:Object,default:()=>new Object}},computed:{name:function(){return this.json.name||this.json.type},keywords:function(){let e=[];return this.json.stateMutability&&e.push(this.json.stateMutability),"true"===this.json.anonymous&&e.push("anonymous"),e.join(" ")},params:function(){return this.json.params||{}},returns:function(){return this.json.returns||{}},inputs:function(){return(this.json.inputs||[]).map(e=>({...e,desc:this.params[e.name]}))},inputSignature:function(){return`(${this.inputs.map(e=>e.type).join(",")})`},outputs:function(){return(this.json.outputs||[]).map((e,t)=>({...e,desc:this.returns[e.name||"_"+t]}))},outputSignature:function(){return`(${this.outputs.map(e=>e.type).join(",")})`}}},rt,[],!1,null,null,null);dt.options.__file="node_modules/hardhat-docgen/src/components/Member.vue";var pt=dt.exports,lt=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full mt-8"},[n("h2",{staticClass:"text-lg"},[e._v(e._s(e.title))]),e._v(" "),e._l(Object.keys(e.json),(function(t){return n("Member",{key:t,staticClass:"mt-3",attrs:{json:e.json[t]}})}))],2)};lt._withStripped=!0;var ct=Ke({components:{Member:pt},props:{title:{type:String,default:""},json:{type:Object,default:()=>new Object}}},lt,[],!1,null,null,null);ct.options.__file="node_modules/hardhat-docgen/src/components/MemberSet.vue";var yt=Ke({components:{Member:pt,MemberSet:ct.exports,HeaderBar:st,FooterBar:nt},props:{json:{type:Object,default:()=>new Object}}},Ze,[],!1,null,null,null);yt.options.__file="node_modules/hardhat-docgen/src/components/Contract.vue";var mt=yt.exports,ft=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto pb-32"},[t("Branch",{attrs:{json:this.trees,name:"Sources:"}}),this._v(" "),t("FooterBar",{staticClass:"mt-20"})],1)};ft._withStripped=!0;var ht=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._v("\n  "+e._s(e.name)+"\n  "),Array.isArray(e.json)?n("div",{staticClass:"pl-5"},e._l(e.json,(function(t,a){return n("div",{key:a},[n("router-link",{attrs:{to:t.source+":"+t.name}},[e._v("\n        "+e._s(t.name)+"\n      ")])],1)})),0):n("div",{staticClass:"pl-5"},e._l(Object.keys(e.json),(function(t){return n("div",{key:t},[n("Branch",{attrs:{json:e.json[t],name:t}})],1)})),0)])};ht._withStripped=!0;var bt=Ke({name:"Branch",props:{name:{type:String,default:null},json:{type:[Object,Array],default:()=>new Object}}},ht,[],!1,null,null,null);bt.options.__file="node_modules/hardhat-docgen/src/components/Branch.vue";var Tt=Ke({components:{Branch:bt.exports,FooterBar:nt},props:{json:{type:Object,default:()=>new Object}},computed:{trees:function(){let e={};for(let t in this.json)t.split(/(?<=\/)/).reduce(function(e,n){if(!n.includes(":"))return e[n]=e[n]||{},e[n];{let[a]=n.split(":");e[a]=e[a]||[],e[a].push(this.json[t])}}.bind(this),e);return e}}},ft,[],!1,null,null,null);Tt.options.__file="node_modules/hardhat-docgen/src/components/Index.vue";var vt=Tt.exports;a.a.use(ze);const gt={"contracts/Interfaces/IApproveAndCall.sol:IApproveAndCall":{source:"contracts/Interfaces/IApproveAndCall.sol",name:"IApproveAndCall",title:"Interface for contract governance/ApprovalReceiver.sol",details:"Interfaces are used to cast a contract address into a callable instance.",methods:{"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount was approved.",_data:"The data will be used for low level call.",_sender:"The sender of SOV.approveAndCall function.",_token:"The address of token."},notice:"Receives approval from SOV token."}}},"contracts/Interfaces/IERC20.sol:IERC20":{source:"contracts/Interfaces/IERC20.sol",name:"IERC20",details:"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.\t * This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens.\t * Returns a boolean value indicating whether the operation succeeded.\t * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\t * Emits an {Approval} event."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`.\t * Returns a boolean value indicating whether the operation succeeded.\t * Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.\t * Returns a boolean value indicating whether the operation succeeded.\t * Emits a {Transfer} event."}}},"contracts/Interfaces/ILockedFund.sol:ILockedFund":{source:"contracts/Interfaces/ILockedFund.sol",name:"ILockedFund",title:"An interface of Locked Fund Contract.",author:"Shebin John - admin@remedcu.com",methods:{"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_newAdmin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Admin.",params:{_newAdmin:"The address of the new admin."},notice:"The function to add a new admin."},"changeToken(address)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"}],name:"changeToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This is in some cases when the token is not created before/during Origins Sale.",params:{_token:"The address of the ERC20 Token."},notice:"The function used to update the Token."},"changeVestingRegistry(address)":{constant:!1,inputs:[{internalType:"address",name:"_vestingRegistry",type:"address"}],name:"changeVestingRegistry",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_vestingRegistry:"The Vesting Registry Address."},notice:"The function to update the Vesting Registry, Duration and Cliff."},"changeWaitedTS(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_waitedTS",type:"uint256"}],name:"changeWaitedTS",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_waitedTS:"The timestamp after which withdrawal is allowed."},notice:"The function used to update the waitedTS."},"createAllVesting()":{constant:!1,inputs:[],name:"createAllVesting",outputs:[{internalType:"address[]",name:"_vestingAddresses",type:"address[]"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Zero (0) is passed to denote all vesting for that user will be created.",return:"_vestingAddresses The New Vesting Contracts Created.",notice:"Creates vesting contract (if it hasn't been created yet) for the calling user."},"createVesting(bytes32)":{constant:!1,inputs:[{internalType:"bytes32",name:"_vestingData",type:"bytes32"}],name:"createVesting",outputs:[{internalType:"address[]",name:"_vestingAddress",type:"address[]"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_vestingData:"The vesting details like cliff & duration in short form."},return:"_vestingAddress The New Vesting Contract Created.",notice:"Creates vesting contract (if it hasn't been created yet) for the calling user."},"createVestingAndStake()":{constant:!1,inputs:[],name:"createVestingAndStake",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only use this function if the `duration` is small.",notice:"Creates vesting if not already created and Stakes tokens for a user."},"depositLocked(address,uint256,uint256,uint256,uint256,uint256,bool)":{constant:!1,inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_basisPoint",type:"uint256"},{internalType:"uint256",name:"_unlockedOrWaited",type:"uint256"},{internalType:"bool",name:"_receiveTokens",type:"bool"}],name:"depositLocked",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Future iteration will have choice between waited unlock and immediate unlock.",params:{_amount:"The amount of Token to be added to the locked and/or unlocked balance.",_basisPoint:"The % (in Basis Point) which determines how much will be (waited) unlocked immediately.",_cliff:"The cliff for vesting.",_duration:"The duration for vesting.",_receiveTokens:"- True if tokens should be taken from caller, False otherwise.",_unlockedOrWaited:"Determines if the Basis Point determines the Unlocked or Waited Unlock Balance.",_userAddress:"The user whose locked balance has to be updated with `_amount`."},notice:"Adds Token to the user balance (Locked and Waited Unlocked Balance based on `_basisPoint`)."},"depositMissingBalance(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositMissingBalance",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount being sent."},notice:"Function to call to deposit missing balance to create vesting/staking."},"depositVested(address,uint256,uint256,uint256,uint256,uint256,bool)":{constant:!1,inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_basisPoint",type:"uint256"},{internalType:"uint256",name:"_unlockedOrWaited",type:"uint256"},{internalType:"bool",name:"_receiveTokens",type:"bool"}],name:"depositVested",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Future iteration will have choice between waited unlock and immediate unlock.",params:{_amount:"The amount of Token to be added to the locked and/or unlocked balance.",_basisPoint:"The % (in Basis Point) which determines how much will be (waited) unlocked immediately.",_cliff:"The cliff for vesting.",_duration:"The duration for vesting.",_receiveTokens:"- True if tokens should be taken from caller, False otherwise.",_unlockedOrWaited:"Determines if the Basis Point determines the Unlocked or Waited Unlock Balance.",_userAddress:"The user whose locked balance has to be updated with `_amount`."},notice:"Adds Token to the user balance (Vested and Waited Unlocked Balance based on `_basisPoint`)."},"depositWaitedUnlocked(address,uint256,uint256,bool)":{constant:!1,inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_basisPoint",type:"uint256"},{internalType:"bool",name:"_receiveTokens",type:"bool"}],name:"depositWaitedUnlocked",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Future iteration will have choice between waited unlock and immediate unlock.",params:{_amount:"The amount of Token to be added to the locked and/or unlocked balance.",_basisPoint:"The % (in Basis Point) which determines how much will be unlocked immediately.",_receiveTokens:"- True if tokens should be taken from caller, False otherwise.",_userAddress:"The user whose locked balance has to be updated with `_amount`."},notice:"Adds Token to the user balance (Vested and Waited Unlocked Balance based on `_basisPoint`)."},"getCliffDurationAndType(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"_vestingData",type:"bytes32"}],name:"getCliffDurationAndType",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_vestingData:"The address whose cliff and duration has to be found."},return:"The cliff of the user vesting/lock.The duration of the user vesting/lock.",notice:"Function to read the cliff, duration and Type of a Vesting."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_adminToRemove",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Admin.",params:{_adminToRemove:"The address of the admin which should be removed."},notice:"The function to remove an admin."},"stakeAllTokens()":{constant:!1,inputs:[],name:"stakeAllTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The user should already have a vesting created, else this function will throw error.Zero (0) is passed to denote all vesting for that user will be created.This is not recommended function if there are many stakes to be created due to gas limit.",notice:"Stakes tokens for a user who already have a vesting created."},"stakeTokens(bytes32)":{constant:!1,inputs:[{internalType:"bytes32",name:"_vestingData",type:"bytes32"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The user should already have a vesting created, else this function will throw error.",params:{_vestingData:"The vesting details like cliff & duration in short form."},notice:"Stakes tokens for a user who already have a vesting created."},"withdrawAndStakeTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiverAddress",type:"address"}],name:"withdrawAndStakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_receiverAddress:"If specified, the unlocked balance will go to this address, else to msg.sender."},notice:"Withdraws unlocked tokens and Stakes Locked tokens for a user who already have a vesting created."},"withdrawWaitedUnlockedBalance(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiverAddress",type:"address"}],name:"withdrawWaitedUnlockedBalance",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_receiverAddress:"If specified, the unlocked balance will go to this address, else to msg.sender."},notice:"A function to withdraw the waited unlocked balance."}}},"contracts/Interfaces/IOrigins.sol:IOrigins":{source:"contracts/Interfaces/IOrigins.sol",name:"IOrigins",title:"Interface of the Origins Platform.",author:"Shebin John - admin@remedcu.com",methods:{"addressVerification(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_addressToBeVerified",type:"address"},{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"addressVerification",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_addressToBeVerified:"The address which has to be veriried for the sale.",_tierID:"The tier for which the address has to be verified."},notice:"Function to verify a single address with a single tier."},"buy(uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"buy",outputs:[],payable:!0,stateMutability:"payable",type:"function",details:"If deposit type if RBTC, then _amount can be passed as zero.",params:{_amount:"The amount of token (deposit asset) which will be sent for purchasing.",_tierID:"The Tier ID from which the token has to be bought."},notice:"Function to buy tokens from sale based on tier."},"checkSaleEnded(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"checkSaleEnded",outputs:[{internalType:"bool",name:"_status",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"A return of false does not necessary mean the sale is active. It can also be in inactive state.",params:{_tierID:"The Tier whose info is to be read."},return:"True is sale ended, False otherwise.",notice:"Function to check if a tier sale ended or not."},"createTier(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_maxAmount",type:"uint256"},{internalType:"uint256",name:"_remainingTokens",type:"uint256"},{internalType:"uint256",name:"_saleStartTS",type:"uint256"},{internalType:"uint256",name:"_saleEnd",type:"uint256"},{internalType:"uint256",name:"_unlockedBP",type:"uint256"},{internalType:"uint256",name:"_vestOrLockCliff",type:"uint256"},{internalType:"uint256",name:"_vestOrLockDuration",type:"uint256"},{internalType:"uint256",name:"_depositRate",type:"uint256"},{internalType:"uint256",name:"_depositType",type:"uint256"},{internalType:"uint256",name:"_verificationType",type:"uint256"},{internalType:"uint256",name:"_saleEndDurationOrTS",type:"uint256"},{internalType:"uint256",name:"_transferType",type:"uint256"}],name:"createTier",outputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"In the future this should be decoupled. Some are currently sent with default value due to Stack Too Deep problem.",params:{_depositRate:"Contains the rate of the token w.r.t. the depositing asset.",_maxAmount:"The maximum amount of asset which can be deposited.",_remainingTokens:"Contains the remaining tokens for sale.",_saleEnd:"Contains the duration or timestamp for the sale to end. After which no user will be able to buy tokens.",_saleEndDurationOrTS:"Contains whether end of sale is by Duration or Timestamp.",_saleStartTS:"Contains the timestamp for the sale to start. Before which no user will be able to buy tokens.",_transferType:"Contains the type of token transfer after a user buys to get the tokens.",_unlockedBP:"Contains the unlock amount in Basis Point for Vesting/Lock.",_verificationType:"Contains the method by which verification happens.",_vestOrLockCliff:"Contains the cliff of the vesting/lock for distribution.",_vestOrLockDuration:"Contains the duration of the vesting/lock for distribution."},return:"_tierID The newly created tier ID.",notice:"Function to create a new tier."},"getDepositAddress()":{constant:!0,inputs:[],name:"getDepositAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"If zero is returned, any of the owners can withdraw the raised funds.",return:"The address of the deposit address.",notice:"Function to read the deposit address."},"getLockDetails()":{constant:!0,inputs:[],name:"getLockDetails",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of Locked Fund Contract.",notice:"Function to read the locked fund contract address."},"getParticipatingWalletCountPerTier(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"getParticipatingWalletCountPerTier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Total participation of wallets cannot be determined by this. A user can participate on one round and not on other. In the future maybe a count on that can be created.",params:{_tierID:"The tier ID for which the count has to be checked."},return:"The number of wallets who participated in that Tier.",notice:"Function to read participating wallet count per tier."},"getTierCount()":{constant:!0,inputs:[],name:"getTierCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The number of tiers present in the contract.",notice:"Function to read the tier count."},"getToken()":{constant:!0,inputs:[],name:"getToken",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The Token contract address which is being sold in the contract.",notice:"Function to read the token on sale."},"getTokensBoughtByAddressOnTier(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"},{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"getTokensBoughtByAddressOnTier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address which has to be checked.",_tierID:"The tier ID for which the address has to be checked."},return:"The amount of tokens bought by the address.",notice:"Function to read tokens bought by an address on a particular tier."},"getTokensSoldPerTier(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"getTokensSoldPerTier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_tierID:"The tier ID for which the sold metrics has to be checked."},return:"The amount of tokens sold on that tier.",notice:"Function to read tokens sold per tier."},"getTotalTokenAllocationPerTier(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"getTotalTokenAllocationPerTier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_tierID:"The tier ID for which the metrics has to be checked."},return:"The amount of tokens allocation on that tier.",notice:"Function to read total token allocation per tier."},"isAddressApproved(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"},{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"isAddressApproved",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address which has to be checked.",_tierID:"The tier ID for which the address has to be checked."},return:"True is allowed, False otherwise.",notice:"Function to read address which are approved for sale in a tier."},"multipleAddressAndTierVerification(address[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"_addressToBeVerified",type:"address[]"},{internalType:"uint256[]",name:"_tierID",type:"uint256[]"}],name:"multipleAddressAndTierVerification",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_addressToBeVerified:"The addresses which has to be veriried for the sale.",_tierID:"The tiers for which the addresses has to be verified."},notice:"Function to verify multiple address with multiple tiers."},"multipleAddressSingleTierVerification(address[],uint256)":{constant:!1,inputs:[{internalType:"address[]",name:"_addressToBeVerified",type:"address[]"},{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"multipleAddressSingleTierVerification",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_addressToBeVerified:"The addresses which has to be veriried for the sale.",_tierID:"The tier for which the addresses has to be verified."},notice:"Function to verify multiple address with a single tier."},"readTierPartA(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"readTierPartA",outputs:[{internalType:"uint256",name:"_minAmount",type:"uint256"},{internalType:"uint256",name:"_maxAmount",type:"uint256"},{internalType:"uint256",name:"_remainingTokens",type:"uint256"},{internalType:"uint256",name:"_saleStartTS",type:"uint256"},{internalType:"uint256",name:"_saleEnd",type:"uint256"},{internalType:"uint256",name:"_unlockedBP",type:"uint256"},{internalType:"uint256",name:"_vestOrLockCliff",type:"uint256"},{internalType:"uint256",name:"_vestOrLockDuration",type:"uint256"},{internalType:"uint256",name:"_depositRate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_tierID:"The Tier whose info is to be read."},return:"_minAmount The minimum amount which can be deposited._maxAmount The maximum amount which can be deposited._remainingTokens Contains the remaining tokens for sale._saleStartTS Contains the timestamp for the sale to start. Before which no user will be able to buy tokens._saleEnd Contains the duration or timestamp for the sale to end. After which no user will be able to buy tokens._unlockedBP Contains the unlock amount in Basis Point for Vesting/Lock._vestOrLockCliff Contains the cliff of the vesting/lock for distribution._vestOrLockDuration Contains the duration of the vesting/lock for distribution._depositRate Contains the rate of the token w.r.t. the depositing asset.",notice:"Function to read a Tier parameter."},"readTierPartB(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"readTierPartB",outputs:[{internalType:"address",name:"_depositToken",type:"address"},{internalType:"uint256",name:"_depositType",type:"uint256"},{internalType:"uint256",name:"_verificationType",type:"uint256"},{internalType:"uint256",name:"_saleEndDurationOrTS",type:"uint256"},{internalType:"uint256",name:"_transferType",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_tierID:"The Tier whose info is to be read."},return:"_depositToken Contains the deposit token address if the deposit type is Token._depositType The type of deposit for the particular sale._verificationType Contains the method by which verification happens._saleEndDurationOrTS Contains whether end of sale is by Duration or Timestamp._transferType Contains the type of token transfer after a user buys to get the tokens.",notice:"Function to read a Tier parameter."},"setDepositAddress(address)":{constant:!1,inputs:[{internalType:"address payable",name:"_depositAddress",type:"address"}],name:"setDepositAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"If this is not set, an owner can withdraw the funds. Here owner is supposed to be a multisig. Or a trusted party.",params:{_depositAddress:"The address of deposit address where all the raised fund will go."},notice:"Function to set the deposit address."},"setLockedFund(address)":{constant:!1,inputs:[{internalType:"address",name:"_lockedFund",type:"address"}],name:"setLockedFund",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_lockedFund:"The address of new the Vesting registry."},notice:"Function to set the Locked Fund Contract Address."},"setTierDeposit(uint256,uint256,address,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_depositRate",type:"uint256"},{internalType:"address",name:"_depositToken",type:"address"},{internalType:"uint256",name:"_depositType",type:"uint256"}],name:"setTierDeposit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_depositRate:"The rate is the, asset * rate = token.",_depositToken:"The token for that particular Tier Sale.",_depositType:"The type of deposit for the particular sale.",_tierID:"The Tier ID which is being updated."},notice:"Function to set the Tier Deposit Parameters."},"setTierTime(uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_saleStartTS",type:"uint256"},{internalType:"uint256",name:"_saleEnd",type:"uint256"},{internalType:"uint256",name:"_saleEndDurationOrTS",type:"uint256"}],name:"setTierTime",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_saleEnd:"The Tier Sale End Duration or Timestamp.",_saleEndDurationOrTS:"The Tier Sale End Type for the Tier.",_saleStartTS:"The Tier Sale Start Timestamp.",_tierID:"The Tier ID which is being updated."},notice:"Function to set the Tier Time Parameters."},"setTierTokenAmount(uint256,uint256,bool)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_remainingTokens",type:"uint256"},{internalType:"bool",name:"_sendTokens",type:"bool"}],name:"setTierTokenAmount",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_remainingTokens:"The maximum number of tokens allowed to be sold in the tier.",_sendTokens:"- True if tokens should be taken from caller, False otherwise.",_tierID:"The Tier ID which is being updated."},notice:"Function to set the Tier Token Amount Parameters."},"setTierTokenLimit(uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_minAmount",type:"uint256"},{internalType:"uint256",name:"_maxAmount",type:"uint256"}],name:"setTierTokenLimit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_maxAmount:"The maximum asset amount allowed to participate in that tier.",_minAmount:"The minimum asset amount required to participate in that tier.",_tierID:"The Tier ID which is being updated."},notice:"Function to set the Tier Token Limit Parameters."},"setTierVerification(uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_verificationType",type:"uint256"}],name:"setTierVerification",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_tierID:"The Tier ID which is being updated.",_verificationType:"The type of verification for the particular sale."},notice:"Function to set the Tier Verification Method."},"setTierVestOrLock(uint256,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_vestOrLockCliff",type:"uint256"},{internalType:"uint256",name:"_vestOrLockDuration",type:"uint256"},{internalType:"uint256",name:"_unlockedBP",type:"uint256"},{internalType:"uint256",name:"_transferType",type:"uint256"}],name:"setTierVestOrLock",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_tierID:"The Tier ID which is being updated.",_transferType:"The Tier Transfer Type for the Tier.",_unlockedBP:"The unlocked token amount in BP.",_vestOrLockCliff:"The Vest/Lock Cliff = A * LockedFund.Interval, where A is the cliff.",_vestOrLockDuration:"The Vest/Lock Duration = A * LockedFund.Interval, where A is the duration."},notice:"Function to set the Tier Vest/Lock Parameters."},"singleAddressMultipleTierVerification(address,uint256[])":{constant:!1,inputs:[{internalType:"address",name:"_addressToBeVerified",type:"address"},{internalType:"uint256[]",name:"_tierID",type:"uint256[]"}],name:"singleAddressMultipleTierVerification",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_addressToBeVerified:"The address which has to be veriried for the sale.",_tierID:"The tiers for which the address has to be verified."},notice:"Function to verify a single address with multiple tiers."},"withdrawSaleDeposit()":{constant:!1,inputs:[],name:"withdrawSaleDeposit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"In the future this could be made to be accessible only to seller, rather than owner.",notice:"The function used by the admin or deposit address to withdraw the sale proceedings."}}},"contracts/Interfaces/IStaking.sol:IStaking":{source:"contracts/Interfaces/IStaking.sol",name:"IStaking",title:"Interface for contract governance/Staking/Staking.sol",details:"Interfaces are used to cast a contract address into a callable instance.",methods:{"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"getPriorVestingWeightedStake(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVestingWeightedStake",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"getPriorWeightedStake(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorWeightedStake",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"isVestingContract(address)":{constant:!0,inputs:[{internalType:"address",name:"stakerAddress",type:"address"}],name:"isVestingContract",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"stake(uint96,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stake",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"stakesBySchedule(uint256,uint256,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"cliff",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"intervalLength",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stakesBySchedule",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"timestampToLockDate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"timestampToLockDate",outputs:[{internalType:"uint256",name:"lockDate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Interfaces/ITeamVesting.sol:ITeamVesting":{source:"contracts/Interfaces/ITeamVesting.sol",name:"ITeamVesting",title:"Interface for TeamVesting contract.",details:"Interfaces are used to cast a contract address into a callable instance. This interface is used by Staking contract to call governanceWithdrawTokens function having the vesting contract instance address.",methods:{"governanceWithdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/Interfaces/IVesting.sol:IVesting":{source:"contracts/Interfaces/IVesting.sol",name:"IVesting",title:"Interface for Vesting contract.",details:"Interfaces are used to cast a contract address into a callable instance. This interface is used by VestingLogic contract to implement stakeTokens function and on VestingRegistry contract to call IVesting(vesting).stakeTokens function at a vesting instance.",methods:{"duration()":{constant:!1,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"},"endDate()":{constant:!1,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"},"stakeTokens(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/Interfaces/IVestingFactory.sol:IVestingFactory":{source:"contracts/Interfaces/IVestingFactory.sol",name:"IVestingFactory",title:"Interface for Vesting Factory contract.",details:"Interfaces are used to cast a contract address into a callable instance. This interface is used by VestingFactory contract to override empty implemention of deployVesting and deployTeamVesting functions and on VestingRegistry contract to use an instance of VestingFactory.",methods:{"deployTeamVesting(address,address,address,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_owner",type:"address"}],name:"deployTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function"},"deployVesting(address,address,address,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_owner",type:"address"}],name:"deployVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/Interfaces/IVestingLogic.sol:IVestingLogic":{source:"contracts/Interfaces/IVestingLogic.sol",name:"IVestingLogic",title:"Vesting Logic Interface",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"stakeTokens(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to stake."},notice:"Stakes tokens according to the vesting schedule."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"withdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{receiver:"The receiving address."},notice:"Withdraws unlocked tokens from the staking contract and forwards them to an address specified by the token owner."}}},"contracts/Interfaces/IVestingRegistryLogic.sol:IVestingRegistryLogic":{source:"contracts/Interfaces/IVestingRegistryLogic.sol",name:"IVestingRegistryLogic",events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"createTeamVesting(address,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_vestingCreationType",type:"uint256"}],name:"createTeamVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be staked",_cliff:"the cliff in seconds",_duration:"the total duration in seconds",_tokenOwner:"the owner of the tokens",_vestingCreationType:"the type of vesting created(e.g. Origin, Bug Bounty etc.)"},notice:"creates Team Vesting contract"},"createVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Calls a public createVestingAddr function with vestingCreationType. This is to accomodate the existing logic for LockedFundvestingCreationType 0 = LockedFund",params:{_amount:"the amount to be staked",_cliff:"the cliff in seconds",_duration:"the total duration in seconds",_tokenOwner:"the owner of the tokens"},notice:"creates Vesting contract"},"createVestingAddr(address,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_vestingCreationType",type:"uint256"}],name:"createVestingAddr",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be staked",_cliff:"the cliff in seconds",_duration:"the total duration in seconds",_tokenOwner:"the owner of the tokens",_vestingCreationType:"the type of vesting created(e.g. Origin, Bug Bounty etc.)"},notice:"creates Vesting contract"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getTeamVesting(address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_vestingCreationType",type:"uint256"}],name:"getTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",notice:"returns team vesting contract address for the given token owner, cliff, duration"},"getVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Calls a public getVestingAddr function with cliff and duration. This is to accomodate the existing logic for LockedFundWe need to use LockedFund.changeRegistryCliffAndDuration function very judiciouslyvestingCreationType 0 - LockedFund",params:{_tokenOwner:"the owner of the tokens"},notice:"returns vesting contract address for the given token owner"},"getVestingAddr(address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_vestingCreationType",type:"uint256"}],name:"getVestingAddr",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Important: Please use this instead of getVesting function",notice:"public function that returns vesting contract address for the given token owner, cliff, duration"},"getVestingDetails(address)":{constant:!0,inputs:[{internalType:"address",name:"_vestingAddress",type:"address"}],name:"getVestingDetails",outputs:[{internalType:"uint256",name:"cliff",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",notice:"returns cliff and duration for Vesting & TeamVesting contracts"},"getVestingsOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getVestingsOf",outputs:[{components:[{internalType:"uint256",name:"vestingType",type:"uint256"},{internalType:"uint256",name:"vestingCreationType",type:"uint256"},{internalType:"address",name:"vestingAddress",type:"address"}],internalType:"struct VestingRegistryStorage.VestingDetail[]",name:"",type:"tuple[]"}],payable:!1,stateMutability:"view",type:"function",notice:"returns all vesting details for the given token owner"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"isVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"isVesting",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"isVestingAdress(address)":{constant:!0,inputs:[{internalType:"address",name:"_vestingAddress",type:"address"}],name:"isVestingAdress",outputs:[{internalType:"bool",name:"isVestingAddr",type:"bool"}],payable:!1,stateMutability:"view",type:"function",notice:"returns if the address is a vesting address"},"lockedFund()":{constant:!0,inputs:[],name:"lockedFund",outputs:[{internalType:"contract ILockedFund",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"setVestingFactory(address)":{constant:!1,inputs:[{internalType:"address",name:"_vestingFactory",type:"address"}],name:"setVestingFactory",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_vestingFactory:"the address of vesting factory contract"},notice:"sets vesting factory address"},"stakeTokens(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_vesting",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount of tokens to stake",_vesting:"the address of Vesting contract"},notice:"stakes tokens according to the vesting schedule"},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"token()":{constant:!0,inputs:[],name:"token",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferToken(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be transferred",_receiver:"the address of the token receiver"},notice:"transfers tokens to given address"},"vestingFactory()":{constant:!0,inputs:[],name:"vestingFactory",outputs:[{internalType:"contract IVestingFactory",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingOwner()":{constant:!0,inputs:[],name:"vestingOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestings(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"vestings",outputs:[{internalType:"uint256",name:"vestingType",type:"uint256"},{internalType:"uint256",name:"vestingCreationType",type:"uint256"},{internalType:"address",name:"vestingAddress",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingsOf(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"vestingsOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/LockedFund/LockedFund.sol:LockedFund":{source:"contracts/LockedFund/LockedFund.sol",name:"LockedFund",title:"A holding contract for Locked Fund.",author:"Shebin John - admin@remedcu.com",details:"This is not the final form of this contract.",notice:"You can use this contract for timed token release from Locked Fund.",constructor:{inputs:[{internalType:"uint256",name:"_waitedTS",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_vestingRegistry",type:"address"},{internalType:"address[]",name:"_admins",type:"address[]"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_newAdmin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_removedAdmin",type:"address"}],name:"AdminRemoved",type:"event"},"MissingBalanceDeposited(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"MissingBalanceDeposited",type:"event"},"TokenStaked(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenStaked",type:"event"},"TokenUpdated(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_oldToken",type:"address"},{indexed:!0,internalType:"address",name:"_newToken",type:"address"}],name:"TokenUpdated",type:"event"},"UnlockedDeposited(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"UnlockedDeposited",type:"event"},"VestedDeposited(address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_basisPoint",type:"uint256"}],name:"VestedDeposited",type:"event"},"VestingCreated(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_userAddress",type:"address"},{indexed:!0,internalType:"address",name:"_vesting",type:"address"}],name:"VestingCreated",type:"event"},"VestingRegistryUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_vestingRegistry",type:"address"}],name:"VestingRegistryUpdated",type:"event"},"WaitedTSUpdated(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_waitedTS",type:"uint256"}],name:"WaitedTSUpdated",type:"event"},"WaitedUnlockedDeposited(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"WaitedUnlockedDeposited",type:"event"},"WaitedUnlockedDeposited(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_basisPoint",type:"uint256"}],name:"WaitedUnlockedDeposited",type:"event"},"WithdrawnUnlockedBalance(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"WithdrawnUnlockedBalance",type:"event"},"WithdrawnWaitedUnlockedBalance(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"WithdrawnWaitedUnlockedBalance",type:"event"}},methods:{"INTERVAL()":{constant:!0,inputs:[],name:"INTERVAL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_newAdmin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Admin.",params:{_newAdmin:"The address of the new admin."},notice:"The function to add a new admin."},"adminStatus(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"adminStatus",outputs:[{internalType:"bool",name:"_status",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address of the user to check the admin status."},return:"_status True if admin, False otherwise.",notice:"The function to check is an address is admin or not."},"changeToken(address)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"}],name:"changeToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This is in some cases when the token is not created before/during Origins Sale.",params:{_token:"The address of the ERC20 Token."},notice:"The function used to update the Token."},"changeVestingRegistry(address)":{constant:!1,inputs:[{internalType:"address",name:"_vestingRegistry",type:"address"}],name:"changeVestingRegistry",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_vestingRegistry:"The Vesting Registry Address."},notice:"The function to update the Vesting Registry, Duration and Cliff."},"changeWaitedTS(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_waitedTS",type:"uint256"}],name:"changeWaitedTS",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_waitedTS:"The timestamp after which withdrawal is allowed."},notice:"The function used to update the waitedTS."},"checkUserVestingsOf(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"},{internalType:"bytes32",name:"_vestingData",type:"bytes32"}],name:"checkUserVestingsOf",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",return:"The vesting schedules of a user.",notice:"Function to check if a user has a particular vesting schedule."},"createAllVesting()":{constant:!1,inputs:[],name:"createAllVesting",outputs:[{internalType:"address[]",name:"_vestingAddresses",type:"address[]"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Zero (0) is passed to denote all vesting for that user will be created.",return:"_vestingAddresses The New Vesting Contracts Created.",notice:"Creates vesting contract (if it hasn't been created yet) for the calling user."},"createVesting(bytes32)":{constant:!1,inputs:[{internalType:"bytes32",name:"_vestingData",type:"bytes32"}],name:"createVesting",outputs:[{internalType:"address[]",name:"_vestingAddresses",type:"address[]"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_vestingData:"The vesting details like cliff & duration in short form."},return:"_vestingAddress The New Vesting Contract Created.",notice:"Creates vesting contract (if it hasn't been created yet) for the calling user."},"createVestingAndStake()":{constant:!1,inputs:[],name:"createVestingAndStake",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only use this function if the `duration` is small.",notice:"Creates vesting if not already created and Stakes tokens for a user."},"depositLocked(address,uint256,uint256,uint256,uint256,uint256,bool)":{constant:!1,inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_basisPoint",type:"uint256"},{internalType:"uint256",name:"_unlockedOrWaited",type:"uint256"},{internalType:"bool",name:"_receiveTokens",type:"bool"}],name:"depositLocked",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Future iteration will have choice between waited unlock and immediate unlock.",params:{_amount:"The amount of Token to be added to the locked and/or unlocked balance.",_basisPoint:"The % (in Basis Point) which determines how much will be (waited) unlocked immediately.",_cliff:"The cliff for vesting.",_duration:"The duration for vesting.",_receiveTokens:"- True if tokens should be taken from caller, False otherwise.",_unlockedOrWaited:"Determines if the Basis Point determines the Unlocked or Waited Unlock Balance.",_userAddress:"The user whose locked balance has to be updated with `_amount`."},notice:"Adds Token to the user balance (Locked and Waited Unlocked Balance based on `_basisPoint`)."},"depositMissingBalance(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositMissingBalance",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount being sent."},notice:"Function to call to deposit missing balance to create vesting/staking."},"depositVested(address,uint256,uint256,uint256,uint256,uint256,bool)":{constant:!1,inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_basisPoint",type:"uint256"},{internalType:"uint256",name:"_unlockedOrWaited",type:"uint256"},{internalType:"bool",name:"_receiveTokens",type:"bool"}],name:"depositVested",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Future iteration will have choice between waited unlock and immediate unlock.",params:{_amount:"The amount of Token to be added to the locked and/or unlocked balance.",_basisPoint:"The % (in Basis Point) which determines how much will be (waited) unlocked immediately.",_cliff:"The cliff for vesting.",_duration:"The duration for vesting.",_receiveTokens:"- True if tokens should be taken from caller, False otherwise.",_unlockedOrWaited:"Determines if the Basis Point determines the Unlocked or Waited Unlock Balance.",_userAddress:"The user whose locked balance has to be updated with `_amount`."},notice:"Adds Token to the user balance (Vested and Waited Unlocked Balance based on `_basisPoint`)."},"depositWaitedUnlocked(address,uint256,uint256,bool)":{constant:!1,inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_basisPoint",type:"uint256"},{internalType:"bool",name:"_receiveTokens",type:"bool"}],name:"depositWaitedUnlocked",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Future iteration will have choice between waited unlock and immediate unlock.",params:{_amount:"The amount of Token to be added to the locked and/or unlocked balance.",_basisPoint:"The % (in Basis Point) which determines how much will be unlocked immediately.",_receiveTokens:"- True if tokens should be taken from caller, False otherwise.",_userAddress:"The user whose locked balance has to be updated with `_amount`."},notice:"Adds Token to the user balance (Vested and Waited Unlocked Balance based on `_basisPoint`)."},"getCliffDurationAndType(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"_vestingData",type:"bytes32"}],name:"getCliffDurationAndType",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_vestingData:"The address whose cliff and duration has to be found."},return:"The cliff of the user vesting/lock.The duration of the user vesting/lock.",notice:"Function to read the cliff, duration and Type of a Vesting."},"getLockedBalance(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"},{internalType:"bytes32",name:"_lockingData",type:"bytes32"}],name:"getLockedBalance",outputs:[{internalType:"uint256",name:"_balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address of the user to check the locked balance.",_lockingData:"The locking details like cliff & duration in short form."},return:"_balance The locked balance of the address `_addr`.",notice:"The function to get the locked balance of a user."},"getMissingBalance()":{constant:!0,inputs:[],name:"getMissingBalance",outputs:[{internalType:"uint256",name:"_balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"_balance The missing balance of the contract.",notice:"The function to get the missing balance for the LockedFund contract."},"getToken()":{constant:!0,inputs:[],name:"getToken",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The Token contract address which is being sold in the contract.",notice:"Function to read the token on sale."},"getUnlockedBalance(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"getUnlockedBalance",outputs:[{internalType:"uint256",name:"_balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address of the user to check the unlocked balance."},return:"_balance The unlocked balance of the address `_addr`.",notice:"The function to get the unlocked balance of a user."},"getUserVestingsOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"getUserVestingsOf",outputs:[{internalType:"bytes32[]",name:"",type:"bytes32[]"}],payable:!1,stateMutability:"view",type:"function",return:"The vesting schedules of a user.",notice:"Function to get the user vestings of `_addr` or caller."},"getVestedBalance(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"},{internalType:"bytes32",name:"_vestingData",type:"bytes32"}],name:"getVestedBalance",outputs:[{internalType:"uint256",name:"_balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address of the user to check the vested balance.",_vestingData:"The vesting details like cliff & duration in short form."},return:"_balance The vested balance of the address `_addr`.",notice:"The function to get the vested balance of a user."},"getVesting(address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_vestingCreationType",type:"uint256"}],name:"getVesting",outputs:[{internalType:"address",name:"_vestingAddress",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{_tokenOwner:"The owner of the vesting contract."},return:"_vestingAddress The Vesting Contract Address.",notice:"Returns the Vesting Contract Address."},"getVestingData(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"getVestingData",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"pure",type:"function",return:"The vesting data of a certain vesting schedule.",notice:"Function to create the vesting data from cliff and duration."},"getVestingRegistry()":{constant:!0,inputs:[],name:"getVestingRegistry",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of Vesting Registry.",notice:"Function to read the vesting registry."},"getWaitedTS()":{constant:!0,inputs:[],name:"getWaitedTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The waited timestamp.",notice:"Function to read the waited timestamp."},"getWaitedUnlockedBalance(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"getWaitedUnlockedBalance",outputs:[{internalType:"uint256",name:"_balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address of the user to check the waited unlocked balance."},return:"_balance The waited unlocked balance of the address `_addr`.",notice:"The function to get the waited unlocked balance of a user."},"isAdmin(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"isAdmin",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"lockedBalances(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lockedBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_adminToRemove",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Admin.",params:{_adminToRemove:"The address of the admin which should be removed."},notice:"The function to remove an admin."},"stakeAllTokens()":{constant:!1,inputs:[],name:"stakeAllTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The user should already have a vesting created, else this function will throw error.Zero (0) is passed to denote all vesting for that user will be created.This is not recommended function if there are many stakes to be created due to gas limit.",notice:"Stakes tokens for a user who already have a vesting created."},"stakeTokens(bytes32)":{constant:!1,inputs:[{internalType:"bytes32",name:"_vestingData",type:"bytes32"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The user should already have a vesting created, else this function will throw error.",params:{_vestingData:"The vesting details like cliff & duration in short form."},notice:"Stakes tokens for a user who already have a vesting created."},"token()":{constant:!0,inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"unlockedBalances(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"unlockedBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"userVestings(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"userVestings",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"vestedBalances(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"vestedBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"vestingCreationType()":{constant:!0,inputs:[],name:"vestingCreationType",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"vestingDatas(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"vestingDatas",outputs:[{internalType:"uint256",name:"vestingType",type:"uint256"},{internalType:"uint256",name:"cliff",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"vestingRegistry()":{constant:!0,inputs:[],name:"vestingRegistry",outputs:[{internalType:"contract IVestingRegistryLogic",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"waitedTS()":{constant:!0,inputs:[],name:"waitedTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"waitedUnlockedBalances(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"waitedUnlockedBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"withdrawAndStakeTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiverAddress",type:"address"}],name:"withdrawAndStakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This will only create the last vesting schedule of a user.",params:{_receiverAddress:"If specified, the unlocked balance will go to this address, else to msg.sender."},notice:"Withdraws unlocked tokens and Stakes Vested token balance for a user who already have a vesting created."},"withdrawUnlockedBalance(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiverAddress",type:"address"}],name:"withdrawUnlockedBalance",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_receiverAddress:"If specified, the unlocked balance will go to this address, else to msg.sender."},notice:"A function to withdraw the unlocked balance."},"withdrawWaitedUnlockedBalance(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiverAddress",type:"address"}],name:"withdrawWaitedUnlockedBalance",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_receiverAddress:"If specified, the unlocked balance will go to this address, else to msg.sender."},notice:"A function to withdraw the waited unlocked balance."}}},"contracts/Openzeppelin/Address.sol:Address":{source:"contracts/Openzeppelin/Address.sol",name:"Address",details:"Collection of functions related to the address type"},"contracts/Openzeppelin/Context.sol:Context":{source:"contracts/Openzeppelin/Context.sol",name:"Context",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"}},"contracts/Openzeppelin/ERC20.sol:ERC20":{source:"contracts/Openzeppelin/ERC20.sol",name:"ERC20",details:"Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.\t * Requirements:\t * - `spender` cannot be the zero address."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.\t * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\t * Emits an {Approval} event indicating the updated allowance.\t * Requirements:\t * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.\t * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\t * Emits an {Approval} event indicating the updated allowance.\t * Requirements:\t * - `spender` cannot be the zero address."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.\t * Requirements:\t * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.\t * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};\t * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}}},"contracts/Openzeppelin/ERC20Detailed.sol:ERC20Detailed":{source:"contracts/Openzeppelin/ERC20Detailed.sol",name:"ERC20Detailed",details:"Optional functions from the ERC20 standard.",constructor:{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"uint8",name:"decimals",type:"uint8"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.\t * Requirements:\t * - `spender` cannot be the zero address."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).\t * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.\t * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.\t * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\t * Emits an {Approval} event indicating the updated allowance.\t * Requirements:\t * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.\t * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\t * Emits an {Approval} event indicating the updated allowance.\t * Requirements:\t * - `spender` cannot be the zero address."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.\t * Requirements:\t * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.\t * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};\t * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}}},"contracts/Openzeppelin/Initializable.sol:Initializable":{source:"contracts/Openzeppelin/Initializable.sol",name:"Initializable",details:"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity."},"contracts/Openzeppelin/Ownable.sol:Ownable":{source:"contracts/Openzeppelin/Ownable.sol",name:"Ownable",details:"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Openzeppelin/ReentrancyGuard.sol:ReentrancyGuard":{source:"contracts/Openzeppelin/ReentrancyGuard.sol",name:"ReentrancyGuard",title:"Helps contracts guard against reentrancy attacks.",author:"Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>",details:"If you mark a function `nonReentrant`, you should also mark it `external`."},"contracts/Openzeppelin/SafeERC20.sol:SafeERC20":{source:"contracts/Openzeppelin/SafeERC20.sol",name:"SafeERC20",title:"SafeERC20",details:"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"contracts/Openzeppelin/SafeMath.sol:SafeMath":{source:"contracts/Openzeppelin/SafeMath.sol",name:"SafeMath",details:"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always."},"contracts/Origins/OriginsAdmin.sol:OriginsAdmin":{source:"contracts/Origins/OriginsAdmin.sol",name:"OriginsAdmin",title:"An owner contract with granular access for multiple parties.",author:"Shebin John - admin@remedcu.com",details:"To add a new role, add the corresponding array and mapping, along with add, remove and get functions.",notice:"You can use this contract for creating multiple owners with different access.",constructor:{inputs:[{internalType:"address[]",name:"_owners",type:"address[]"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"OwnerAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnerAdded",type:"event"},"OwnerRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"address",name:"_removedOwner",type:"address"}],name:"OwnerRemoved",type:"event"},"VerifierAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"address",name:"_newVerifier",type:"address"}],name:"VerifierAdded",type:"event"},"VerifierRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"address",name:"_removedVerifier",type:"address"}],name:"VerifierRemoved",type:"event"}},methods:{"addOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"addOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Owner.",params:{_newOwner:"The address of the new owner."},notice:"The function to add a new owner."},"addVerifier(address)":{constant:!1,inputs:[{internalType:"address",name:"_newVerifier",type:"address"}],name:"addVerifier",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Owner.",params:{_newVerifier:"The address of the new verifier."},notice:"The function to add a new verifier."},"checkOwner(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"checkOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address to check."},return:"True if Owner, False otherwise.",notice:"Checks if the passed address is an owner or not."},"checkVerifier(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"checkVerifier",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address to check."},return:"True if Verifier, False otherwise.",notice:"Checks if the passed address is a verifier or not."},"getOwners()":{constant:!0,inputs:[],name:"getOwners",outputs:[{internalType:"address[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address array of the owners.",return:"The list of owners."},"getVerifiers()":{constant:!0,inputs:[],name:"getVerifiers",outputs:[{internalType:"address[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address array of the verifier.",return:"The list of verifiers."},"removeOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_ownerToRemove",type:"address"}],name:"removeOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Owner.",params:{_ownerToRemove:"The address of the owner which should be removed."},notice:"The function to remove an owner."},"removeVerifier(address)":{constant:!1,inputs:[{internalType:"address",name:"_verifierToRemove",type:"address"}],name:"removeVerifier",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Owner.",params:{_verifierToRemove:"The address of the verifier which should be removed."},notice:"The function to remove an verifier."}}},"contracts/Origins/OriginsBase.sol:OriginsBase":{source:"contracts/Origins/OriginsBase.sol",name:"OriginsBase",title:"A contract for Origins platform.",author:"Shebin John - admin@remedcu.com",details:"Don't forget to update the Interface: IOrigins, according to the changes in this.",notice:"You can use this contract for creating a sale in the Origins Platform.",constructor:{inputs:[{internalType:"address[]",name:"_owners",type:"address[]"},{internalType:"address",name:"_token",type:"address"},{internalType:"address payable",name:"_depositAddress",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AddressVerified(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_verifiedAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"}],name:"AddressVerified",type:"event"},"DepositAddressUpdated(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_oldDepositAddr",type:"address"},{indexed:!0,internalType:"address",name:"_newDepositAddr",type:"address"}],name:"DepositAddressUpdated",type:"event"},"LockedFundUpdated(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_oldLockedFund",type:"address"},{indexed:!0,internalType:"address",name:"_newLockedFund",type:"address"}],name:"LockedFundUpdated",type:"event"},"NewTierCreated(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"}],name:"NewTierCreated",type:"event"},"OwnerAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnerAdded",type:"event"},"OwnerRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"address",name:"_removedOwner",type:"address"}],name:"OwnerRemoved",type:"event"},"PoolClaimed(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_tokensBought",type:"uint256"}],name:"PoolClaimed",type:"event"},"ProceedingWithdrawn(address,address,uint256,uint8,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"enum OriginsStorage.DepositType",name:"_depositType",type:"uint8"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"ProceedingWithdrawn",type:"event"},"RemainingTokenWithdrawn(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_remainingToken",type:"uint256"}],name:"RemainingTokenWithdrawn",type:"event"},"TierDepositUpdated(address,uint256,uint256,address,uint8)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_depositRate",type:"uint256"},{indexed:!0,internalType:"address",name:"_depositToken",type:"address"},{indexed:!1,internalType:"enum OriginsStorage.DepositType",name:"_depositType",type:"uint8"}],name:"TierDepositUpdated",type:"event"},"TierSaleEnded(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"}],name:"TierSaleEnded",type:"event"},"TierSaleTypeUpdated(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"enum OriginsStorage.SaleType",name:"_saleType",type:"uint8"}],name:"TierSaleTypeUpdated",type:"event"},"TierSaleUpdatedMaximum(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_updatedMaxAmount",type:"uint256"}],name:"TierSaleUpdatedMaximum",type:"event"},"TierSaleUpdatedMinimum(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"}],name:"TierSaleUpdatedMinimum",type:"event"},"TierStakeConditionUpdated(address,uint256,uint256,uint256,uint256[],uint256[],address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_minStake",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_maxStake",type:"uint256"},{indexed:!1,internalType:"uint256[]",name:"_blockNumber",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"_date",type:"uint256[]"},{indexed:!0,internalType:"contract IStaking",name:"_stakeAddr",type:"address"}],name:"TierStakeConditionUpdated",type:"event"},"TierTimeUpdated(address,uint256,uint256,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_saleStartTS",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_saleEnd",type:"uint256"},{indexed:!1,internalType:"enum OriginsStorage.SaleEndDurationOrTS",name:"_saleEndDurationOrTS",type:"uint8"}],name:"TierTimeUpdated",type:"event"},"TierTokenAmountUpdated(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_remainingTokens",type:"uint256"}],name:"TierTokenAmountUpdated",type:"event"},"TierTokenLimitUpdated(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_minAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_maxAmount",type:"uint256"}],name:"TierTokenLimitUpdated",type:"event"},"TierVerificationUpdated(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"enum OriginsStorage.VerificationType",name:"_verificationType",type:"uint8"}],name:"TierVerificationUpdated",type:"event"},"TierVestOrLockUpdated(address,uint256,uint256,uint256,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_vestOrLockCliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_vestOrLockDuration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_unlockedBP",type:"uint256"},{indexed:!1,internalType:"enum OriginsStorage.TransferType",name:"_transferType",type:"uint8"}],name:"TierVestOrLockUpdated",type:"event"},"TokenBuy(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_tokensBought",type:"uint256"}],name:"TokenBuy",type:"event"},"VerifierAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"address",name:"_newVerifier",type:"address"}],name:"VerifierAdded",type:"event"},"VerifierRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"address",name:"_removedVerifier",type:"address"}],name:"VerifierRemoved",type:"event"}},methods:{"addOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"addOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Owner.",params:{_newOwner:"The address of the new owner."},notice:"The function to add a new owner."},"addVerifier(address)":{constant:!1,inputs:[{internalType:"address",name:"_newVerifier",type:"address"}],name:"addVerifier",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Owner.",params:{_newVerifier:"The address of the new verifier."},notice:"The function to add a new verifier."},"addressVerification(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_addressToBeVerified",type:"address"},{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"addressVerification",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_addressToBeVerified:"The address which has to be veriried for the sale.",_tierID:"The tier for which the address has to be verified."},notice:"Function to verify a single address with a single tier."},"buy(uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"buy",outputs:[],payable:!0,stateMutability:"payable",type:"function",details:"If deposit type if RBTC, then _amount can be passed as zero.",params:{_amount:"The amount of token (deposit asset) which will be sent for purchasing.",_tierID:"The Tier ID from which the token has to be bought."},notice:"Function to buy tokens from sale based on tier."},"checkOwner(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"checkOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address to check."},return:"True if Owner, False otherwise.",notice:"Checks if the passed address is an owner or not."},"checkSaleEnded(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"checkSaleEnded",outputs:[{internalType:"bool",name:"_status",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"A return of false does not necessary mean the sale is active. It can also be in inactive state.",params:{_tierID:"The Tier whose info is to be read."},return:"True if sale ended, False otherwise.",notice:"Function to check if a tier sale ended or not."},"checkStakesByTier(uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"address",name:"_userAddress",type:"address"}],name:"checkStakesByTier",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_tierID:"The Tier for which the user stake has to be checked.",_userAddress:"The address of the user to check. If zero address, then caller stake will be checked."},return:"true if the stake is enough, false otherwise.",notice:"Function to view the stakes of `_userAddress` or caller."},"checkVerifier(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"checkVerifier",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address to check."},return:"True if Verifier, False otherwise.",notice:"Checks if the passed address is a verifier or not."},"claimPooled(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"claimPooled",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_tierID:"The Tier ID from which the tokens has to be claimed."},notice:"Function to claim the pooled sale type tokens."},"createTier(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_minAmount",type:"uint256"},{internalType:"uint256",name:"_maxAmount",type:"uint256"},{internalType:"uint256",name:"_remainingTokens",type:"uint256"},{internalType:"uint256",name:"_saleStartTS",type:"uint256"},{internalType:"uint256",name:"_saleEnd",type:"uint256"},{internalType:"uint256",name:"_unlockedBP",type:"uint256"},{internalType:"uint256",name:"_vestOrLockCliff",type:"uint256"},{internalType:"uint256",name:"_vestOrLockDuration",type:"uint256"},{internalType:"uint256",name:"_verificationType",type:"uint256"},{internalType:"uint256",name:"_saleEndDurationOrTS",type:"uint256"},{internalType:"uint256",name:"_transferType",type:"uint256"},{internalType:"uint256",name:"_saleType",type:"uint256"}],name:"createTier",outputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"In the future this should be decoupled. Some are currently sent with default value due to Stack Too Deep problem.",params:{_maxAmount:"The maximum amount of asset which can be deposited.",_minAmount:"The minimum amount of asset which can be deposited.",_remainingTokens:"Contains the remaining tokens for sale.",_saleEnd:"Contains the duration or timestamp for the sale to end. After which no user will be able to buy tokens.",_saleEndDurationOrTS:"Contains whether end of sale is by Duration or Timestamp.",_saleStartTS:"Contains the timestamp for the sale to start. Before which no user will be able to buy tokens.",_saleType:"Contains the type of sale.",_transferType:"Contains the type of token transfer after a user buys to get the tokens.",_unlockedBP:"Contains the unlock amount in Basis Point for Vesting/Lock.",_verificationType:"Contains the method by which verification happens.",_vestOrLockCliff:"Contains the cliff of the vesting/lock for distribution.",_vestOrLockDuration:"Contains the duration of the vesting/lock for distribution."},return:"_tierID The newly created tier ID.",notice:"Function to create a new tier."},"getDepositAddress()":{constant:!0,inputs:[],name:"getDepositAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"If zero is returned, any of the owners can withdraw the raised funds.",return:"The address of the deposit address.",notice:"Function to read the deposit address."},"getLockDetails()":{constant:!0,inputs:[],name:"getLockDetails",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of Locked Fund Contract.",notice:"Function to read the locked fund contract address."},"getOwners()":{constant:!0,inputs:[],name:"getOwners",outputs:[{internalType:"address[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address array of the owners.",return:"The list of owners."},"getParticipatingWalletCount()":{constant:!0,inputs:[],name:"getParticipatingWalletCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Total participation of wallets can be determined by this.",return:"The number of wallets who participated in that Tier.",notice:"Function to read participating wallet count."},"getParticipatingWalletCountPerTier(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"getParticipatingWalletCountPerTier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Total participation of wallets cannot be determined by this. A user can participate on one round and not on other. In the future maybe a count on that can be created.",params:{_tierID:"The tier ID for which the count has to be checked."},return:"The number of wallets who participated in that Tier.",notice:"Function to read participating wallet count per tier."},"getTierCount()":{constant:!0,inputs:[],name:"getTierCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The number of tiers present in the contract.",notice:"Function to read the tier count."},"getToken()":{constant:!0,inputs:[],name:"getToken",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The Token contract address which is being sold in the contract.",notice:"Function to read the token on sale."},"getTokensBoughtByAddress(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"getTokensBoughtByAddress",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address which has to be checked."},return:"The amount of tokens bought by the address.",notice:"Function to read tokens bought by an address."},"getTokensBoughtByAddressOnTier(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"},{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"getTokensBoughtByAddressOnTier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address which has to be checked.",_tierID:"The tier ID for which the address has to be checked."},return:"The amount of tokens bought by the address.",notice:"Function to read tokens bought by an address on a particular tier."},"getTokensSoldPerTier(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"getTokensSoldPerTier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_tierID:"The tier ID for which the sold metrics has to be checked."},return:"The amount of tokens sold on that tier.",notice:"Function to read tokens sold per tier."},"getTotalTokenAllocationPerTier(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"getTotalTokenAllocationPerTier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_tierID:"The tier ID for which the metrics has to be checked."},return:"The amount of tokens allocation on that tier.",notice:"Function to read total token allocation per tier."},"getVerifiers()":{constant:!0,inputs:[],name:"getVerifiers",outputs:[{internalType:"address[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address array of the verifier.",return:"The list of verifiers."},"isAddressApproved(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"},{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"isAddressApproved",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address which has to be checked.",_tierID:"The tier ID for which the address has to be checked."},return:"True is allowed, False otherwise.",notice:"Function to read address which are approved for sale in a tier."},"multipleAddressAndTierVerification(address[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"_addressToBeVerified",type:"address[]"},{internalType:"uint256[]",name:"_tierID",type:"uint256[]"}],name:"multipleAddressAndTierVerification",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_addressToBeVerified:"The addresses which has to be veriried for the sale.",_tierID:"The tiers for which the addresses has to be verified."},notice:"Function to verify multiple address with multiple tiers."},"multipleAddressSingleTierVerification(address[],uint256)":{constant:!1,inputs:[{internalType:"address[]",name:"_addressToBeVerified",type:"address[]"},{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"multipleAddressSingleTierVerification",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_addressToBeVerified:"The addresses which has to be veriried for the sale.",_tierID:"The tier for which the addresses has to be verified."},notice:"Function to verify multiple address with a single tier."},"readTierPartA(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"readTierPartA",outputs:[{internalType:"uint256",name:"_minAmount",type:"uint256"},{internalType:"uint256",name:"_maxAmount",type:"uint256"},{internalType:"uint256",name:"_remainingTokens",type:"uint256"},{internalType:"uint256",name:"_saleStartTS",type:"uint256"},{internalType:"uint256",name:"_saleEnd",type:"uint256"},{internalType:"uint256",name:"_unlockedBP",type:"uint256"},{internalType:"uint256",name:"_vestOrLockCliff",type:"uint256"},{internalType:"uint256",name:"_vestOrLockDuration",type:"uint256"},{internalType:"uint256",name:"_depositRate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_tierID:"The Tier whose info is to be read."},return:"_minAmount The minimum amount which can be deposited._maxAmount The maximum amount which can be deposited._remainingTokens Contains the remaining tokens for sale._saleStartTS Contains the timestamp for the sale to start. Before which no user will be able to buy tokens._saleEnd Contains the duration or timestamp for the sale to end. After which no user will be able to buy tokens._unlockedBP Contains the unlock amount in Basis Point for Vesting/Lock._vestOrLockCliff Contains the cliff of the vesting/lock for distribution._vestOrLockDuration Contains the duration of the vesting/lock for distribution._depositRate Contains the rate of the token w.r.t. the depositing asset.",notice:"Function to read a Tier parameter."},"readTierPartB(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"}],name:"readTierPartB",outputs:[{internalType:"address",name:"_depositToken",type:"address"},{internalType:"uint256",name:"_depositType",type:"uint256"},{internalType:"uint256",name:"_verificationType",type:"uint256"},{internalType:"uint256",name:"_saleEndDurationOrTS",type:"uint256"},{internalType:"uint256",name:"_transferType",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_tierID:"The Tier whose info is to be read."},return:"_depositToken Contains the deposit token address if the deposit type is Token._depositType The type of deposit for the particular sale._verificationType Contains the method by which verification happens._saleEndDurationOrTS Contains whether end of sale is by Duration or Timestamp._transferType Contains the type of token transfer after a user buys to get the tokens.",notice:"Function to read a Tier parameter."},"removeOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_ownerToRemove",type:"address"}],name:"removeOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Owner.",params:{_ownerToRemove:"The address of the owner which should be removed."},notice:"The function to remove an owner."},"removeVerifier(address)":{constant:!1,inputs:[{internalType:"address",name:"_verifierToRemove",type:"address"}],name:"removeVerifier",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Owner.",params:{_verifierToRemove:"The address of the verifier which should be removed."},notice:"The function to remove an verifier."},"setDepositAddress(address)":{constant:!1,inputs:[{internalType:"address payable",name:"_depositAddress",type:"address"}],name:"setDepositAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"If this is not set, an owner can withdraw the funds. Here owner is supposed to be a multisig. Or a trusted party.",params:{_depositAddress:"The address of deposit address where all the raised fund will go."},notice:"Function to set the deposit address."},"setLockedFund(address)":{constant:!1,inputs:[{internalType:"address",name:"_lockedFund",type:"address"}],name:"setLockedFund",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_lockedFund:"The address of new the Vesting registry."},notice:"Function to set the Locked Fund Contract Address."},"setTierDeposit(uint256,uint256,address,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_depositRate",type:"uint256"},{internalType:"address",name:"_depositToken",type:"address"},{internalType:"uint256",name:"_depositType",type:"uint256"}],name:"setTierDeposit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_depositRate:"The rate is the, asset * rate = token.",_depositToken:"The token for that particular Tier Sale.",_depositType:"The type of deposit for the particular sale.",_tierID:"The Tier ID which is being updated."},notice:"Function to set the Tier Deposit Parameters."},"setTierSaleType(uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_saleType",type:"uint256"}],name:"setTierSaleType",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_saleType:"The type of sale for this tier.",_tierID:"The Tier ID which is being updated."},notice:"Function to set the Tier Sale Type Parameters."},"setTierStakeCondition(uint256,uint256,uint256,uint256[],uint256[],address)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_minStake",type:"uint256"},{internalType:"uint256",name:"_maxStake",type:"uint256"},{internalType:"uint256[]",name:"_blockNumber",type:"uint256[]"},{internalType:"uint256[]",name:"_date",type:"uint256[]"},{internalType:"contract IStaking",name:"_stakeAddr",type:"address"}],name:"setTierStakeCondition",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_blockNumber:"The array of blocknumbers to check.",_date:"The array of date (timestamps) to check.",_maxStake:"The maximum stake requirement.",_minStake:"The minimum stake requirement.",_stakeAddr:"The staking address.",_tierID:"The Tier ID which is being updated."},notice:"Function to set the Tier Stake Parameters."},"setTierTime(uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_saleStartTS",type:"uint256"},{internalType:"uint256",name:"_saleEnd",type:"uint256"},{internalType:"uint256",name:"_saleEndDurationOrTS",type:"uint256"}],name:"setTierTime",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_saleEnd:"The Tier Sale End Duration or Timestamp.",_saleEndDurationOrTS:"The Tier Sale End Type for the Tier.",_saleStartTS:"The Tier Sale Start Timestamp.",_tierID:"The Tier ID which is being updated."},notice:"Function to set the Tier Time Parameters."},"setTierTokenAmount(uint256,uint256,bool)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_remainingTokens",type:"uint256"},{internalType:"bool",name:"_sendTokens",type:"bool"}],name:"setTierTokenAmount",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_remainingTokens:"The maximum number of tokens allowed to be sold in the tier.",_sendTokens:"- True if tokens should be taken from caller, False otherwise.",_tierID:"The Tier ID which is being updated."},notice:"Function to set the Tier Token Amount Parameters."},"setTierTokenLimit(uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_minAmount",type:"uint256"},{internalType:"uint256",name:"_maxAmount",type:"uint256"}],name:"setTierTokenLimit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_maxAmount:"The maximum asset amount allowed to participate in that tier.",_minAmount:"The minimum asset amount required to participate in that tier.",_tierID:"The Tier ID which is being updated."},notice:"Function to set the Tier Token Limit Parameters."},"setTierVerification(uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_verificationType",type:"uint256"}],name:"setTierVerification",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_tierID:"The Tier ID which is being updated.",_verificationType:"The type of verification for the particular sale."},notice:"Function to set the Tier Verification Method."},"setTierVestOrLock(uint256,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_tierID",type:"uint256"},{internalType:"uint256",name:"_vestOrLockCliff",type:"uint256"},{internalType:"uint256",name:"_vestOrLockDuration",type:"uint256"},{internalType:"uint256",name:"_unlockedBP",type:"uint256"},{internalType:"uint256",name:"_transferType",type:"uint256"}],name:"setTierVestOrLock",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_tierID:"The Tier ID which is being updated.",_transferType:"The Tier Transfer Type for the Tier.",_unlockedBP:"The unlocked token amount in BP.",_vestOrLockCliff:"The Vest/Lock Cliff = A * LockedFund.Interval, where A is the cliff.",_vestOrLockDuration:"The Vest/Lock Duration = A * LockedFund.Interval, where A is the duration."},notice:"Function to set the Tier Vest/Lock Parameters."},"singleAddressMultipleTierVerification(address,uint256[])":{constant:!1,inputs:[{internalType:"address",name:"_addressToBeVerified",type:"address"},{internalType:"uint256[]",name:"_tierID",type:"uint256[]"}],name:"singleAddressMultipleTierVerification",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_addressToBeVerified:"The address which has to be veriried for the sale.",_tierID:"The tiers for which the address has to be verified."},notice:"Function to verify a single address with multiple tiers."},"withdrawSaleDeposit()":{constant:!1,inputs:[],name:"withdrawSaleDeposit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"In the future this could be made to be accessible only to seller, rather than owner.",notice:"The function used by the admin or deposit address to withdraw the sale proceedings."}}},"contracts/Origins/OriginsEvents.sol:OriginsEvents":{source:"contracts/Origins/OriginsEvents.sol",name:"OriginsEvents",title:"A contract containing all the events of Origins Base.",author:"Shebin John - admin@remedcu.com",notice:"You can use this contract for adding events into Origins Base.",events:{"AddressVerified(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_verifiedAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"}],name:"AddressVerified",type:"event"},"DepositAddressUpdated(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_oldDepositAddr",type:"address"},{indexed:!0,internalType:"address",name:"_newDepositAddr",type:"address"}],name:"DepositAddressUpdated",type:"event"},"LockedFundUpdated(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_oldLockedFund",type:"address"},{indexed:!0,internalType:"address",name:"_newLockedFund",type:"address"}],name:"LockedFundUpdated",type:"event"},"NewTierCreated(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"}],name:"NewTierCreated",type:"event"},"OwnerAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnerAdded",type:"event"},"OwnerRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"address",name:"_removedOwner",type:"address"}],name:"OwnerRemoved",type:"event"},"PoolClaimed(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_tokensBought",type:"uint256"}],name:"PoolClaimed",type:"event"},"ProceedingWithdrawn(address,address,uint256,uint8,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"enum OriginsStorage.DepositType",name:"_depositType",type:"uint8"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"ProceedingWithdrawn",type:"event"},"RemainingTokenWithdrawn(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_remainingToken",type:"uint256"}],name:"RemainingTokenWithdrawn",type:"event"},"TierDepositUpdated(address,uint256,uint256,address,uint8)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_depositRate",type:"uint256"},{indexed:!0,internalType:"address",name:"_depositToken",type:"address"},{indexed:!1,internalType:"enum OriginsStorage.DepositType",name:"_depositType",type:"uint8"}],name:"TierDepositUpdated",type:"event"},"TierSaleEnded(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"}],name:"TierSaleEnded",type:"event"},"TierSaleTypeUpdated(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"enum OriginsStorage.SaleType",name:"_saleType",type:"uint8"}],name:"TierSaleTypeUpdated",type:"event"},"TierSaleUpdatedMaximum(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_updatedMaxAmount",type:"uint256"}],name:"TierSaleUpdatedMaximum",type:"event"},"TierSaleUpdatedMinimum(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"}],name:"TierSaleUpdatedMinimum",type:"event"},"TierStakeConditionUpdated(address,uint256,uint256,uint256,uint256[],uint256[],address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_minStake",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_maxStake",type:"uint256"},{indexed:!1,internalType:"uint256[]",name:"_blockNumber",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"_date",type:"uint256[]"},{indexed:!0,internalType:"contract IStaking",name:"_stakeAddr",type:"address"}],name:"TierStakeConditionUpdated",type:"event"},"TierTimeUpdated(address,uint256,uint256,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_saleStartTS",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_saleEnd",type:"uint256"},{indexed:!1,internalType:"enum OriginsStorage.SaleEndDurationOrTS",name:"_saleEndDurationOrTS",type:"uint8"}],name:"TierTimeUpdated",type:"event"},"TierTokenAmountUpdated(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_remainingTokens",type:"uint256"}],name:"TierTokenAmountUpdated",type:"event"},"TierTokenLimitUpdated(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_minAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_maxAmount",type:"uint256"}],name:"TierTokenLimitUpdated",type:"event"},"TierVerificationUpdated(address,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"enum OriginsStorage.VerificationType",name:"_verificationType",type:"uint8"}],name:"TierVerificationUpdated",type:"event"},"TierVestOrLockUpdated(address,uint256,uint256,uint256,uint256,uint8)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_vestOrLockCliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_vestOrLockDuration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_unlockedBP",type:"uint256"},{indexed:!1,internalType:"enum OriginsStorage.TransferType",name:"_transferType",type:"uint8"}],name:"TierVestOrLockUpdated",type:"event"},"TokenBuy(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_tierID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_tokensBought",type:"uint256"}],name:"TokenBuy",type:"event"},"VerifierAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"address",name:"_newVerifier",type:"address"}],name:"VerifierAdded",type:"event"},"VerifierRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"address",name:"_removedVerifier",type:"address"}],name:"VerifierRemoved",type:"event"}},methods:{"addOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"addOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Owner.",params:{_newOwner:"The address of the new owner."},notice:"The function to add a new owner."},"addVerifier(address)":{constant:!1,inputs:[{internalType:"address",name:"_newVerifier",type:"address"}],name:"addVerifier",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Owner.",params:{_newVerifier:"The address of the new verifier."},notice:"The function to add a new verifier."},"checkOwner(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"checkOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address to check."},return:"True if Owner, False otherwise.",notice:"Checks if the passed address is an owner or not."},"checkVerifier(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"checkVerifier",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address to check."},return:"True if Verifier, False otherwise.",notice:"Checks if the passed address is a verifier or not."},"getOwners()":{constant:!0,inputs:[],name:"getOwners",outputs:[{internalType:"address[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address array of the owners.",return:"The list of owners."},"getVerifiers()":{constant:!0,inputs:[],name:"getVerifiers",outputs:[{internalType:"address[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address array of the verifier.",return:"The list of verifiers."},"removeOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_ownerToRemove",type:"address"}],name:"removeOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Owner.",params:{_ownerToRemove:"The address of the owner which should be removed."},notice:"The function to remove an owner."},"removeVerifier(address)":{constant:!1,inputs:[{internalType:"address",name:"_verifierToRemove",type:"address"}],name:"removeVerifier",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Owner.",params:{_verifierToRemove:"The address of the verifier which should be removed."},notice:"The function to remove an verifier."}}},"contracts/Origins/OriginsStorage.sol:OriginsStorage":{source:"contracts/Origins/OriginsStorage.sol",name:"OriginsStorage",title:"A storage contract for Origins Platform.",author:"Shebin John - admin@remedcu.com",notice:"This plays as the harddisk for the Origins Platform."},"contracts/Sovryn/Governance/GovernorAlpha.sol:GovernorAlpha":{source:"contracts/Sovryn/Governance/GovernorAlpha.sol",name:"GovernorAlpha",title:"Governance Contract.",notice:"This is an adapted clone of compound’s governance model. In general, the process is the same: Token holders can make (executable) proposals if they possess enough voting power, vote on proposals during a predefined voting period and in the end evaluate the outcome. If successful, the proposal will be scheduled on the timelock contract. Only after sufficient time passed, it can be executed. A minimum voting power is required for making a proposal as well as a minimum quorum. * Voting power in the Bitocracy: Stakers will receive voting power in the Bitocracy in return for their staking commitment. This voting power is weighted by how much SOV is staked and for how long the staking period is - staking more SOV over longer staking periods results in higher voting power. With this voting power, users can vote for or against any SIP in bitocracy.sovryn.app.",constructor:{inputs:[{internalType:"address",name:"timelock_",type:"address"},{internalType:"address",name:"staking_",type:"address"},{internalType:"address",name:"guardian_",type:"address"},{internalType:"uint96",name:"_quorumPercentageVotes",type:"uint96"},{internalType:"uint96",name:"_majorityPercentageVotes",type:"uint96"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"ProposalCanceled(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalCanceled",type:"event"},"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"address",name:"proposer",type:"address"},{indexed:!1,internalType:"address[]",name:"targets",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"},{indexed:!1,internalType:"string[]",name:"signatures",type:"string[]"},{indexed:!1,internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{indexed:!1,internalType:"uint256",name:"startBlock",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endBlock",type:"uint256"},{indexed:!1,internalType:"string",name:"description",type:"string"}],name:"ProposalCreated",type:"event"},"ProposalExecuted(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalExecuted",type:"event"},"ProposalQueued(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ProposalQueued",type:"event"},"VoteCast(address,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"bool",name:"support",type:"bool"},{indexed:!1,internalType:"uint256",name:"votes",type:"uint256"}],name:"VoteCast",type:"event"}},methods:{"BALLOT_TYPEHASH()":{constant:!0,inputs:[],name:"BALLOT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"NAME()":{constant:!0,inputs:[],name:"NAME",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"__abdicate()":{constant:!1,inputs:[],name:"__abdicate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Sets guardian address to zero."},"__acceptAdmin()":{constant:!1,inputs:[],name:"__acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"__executeSetTimelockPendingAdmin(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"newPendingAdmin",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"__executeSetTimelockPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"__queueSetTimelockPendingAdmin(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"newPendingAdmin",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"__queueSetTimelockPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"cancel(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"cancel",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Cancel a proposal by looping and cancelling everyone of its calls."},"castVote(uint256,bool)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"bool",name:"support",type:"bool"}],name:"castVote",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage.",support:"Vote value, yes or no."},notice:"Casts a vote by sender."},"castVoteBySig(uint256,bool,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"bool",name:"support",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"castVoteBySig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);",params:{proposalId:"Proposal index to access the list proposals[] from storage.",r:"Half of the ECDSA signature pair.",s:"Half of the ECDSA signature pair.",support:"Vote value, yes or no.",v:"The recovery byte of the signature."},notice:"Voting with EIP-712 Signatures.\t * Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them.\t * The third party in this scenario, submitting the SOV-holder’s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them."},"execute(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"execute",outputs:[],payable:!0,stateMutability:"payable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Execute a proposal by looping and performing everyone of its calls."},"getActions(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"getActions",outputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},return:"Arrays of the 4 call parameters: targets, values, signatures, calldatas.",notice:"Get a proposal list of its calls."},"getReceipt(uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"address",name:"voter",type:"address"}],name:"getReceipt",outputs:[{components:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"bool",name:"support",type:"bool"},{internalType:"uint96",name:"votes",type:"uint96"}],internalType:"struct GovernorAlpha.Receipt",name:"",type:"tuple"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage.",voter:"A governance stakeholder with voting power."},return:"The voter receipt of the proposal.",notice:"Get a proposal receipt."},"guardian()":{constant:!0,inputs:[],name:"guardian",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"latestProposalIds(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"latestProposalIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"majorityPercentageVotes()":{constant:!0,inputs:[],name:"majorityPercentageVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"proposalCount()":{constant:!0,inputs:[],name:"proposalCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"proposalMaxOperations()":{constant:!0,inputs:[],name:"proposalMaxOperations",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The maximum number of actions that can be included in a proposal."},"proposalThreshold()":{constant:!0,inputs:[],name:"proposalThreshold",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",notice:"The number of votes required in order for a voter to become a proposer."},"proposals(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint32",name:"startBlock",type:"uint32"},{internalType:"uint32",name:"endBlock",type:"uint32"},{internalType:"uint96",name:"forVotes",type:"uint96"},{internalType:"uint96",name:"againstVotes",type:"uint96"},{internalType:"uint96",name:"quorum",type:"uint96"},{internalType:"uint96",name:"majorityPercentage",type:"uint96"},{internalType:"uint64",name:"eta",type:"uint64"},{internalType:"uint64",name:"startTime",type:"uint64"},{internalType:"bool",name:"canceled",type:"bool"},{internalType:"bool",name:"executed",type:"bool"},{internalType:"address",name:"proposer",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"propose(address[],uint256[],string[],bytes[],string)":{constant:!1,inputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{internalType:"string",name:"description",type:"string"}],name:"propose",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{calldatas:"Array of payloads for the calls on proposal execution.",description:"Text describing the purpose of the proposal.",signatures:"Array of function signatures to call on proposal execution.",targets:"Array of contract addresses to perform proposal execution.",values:"Array of rBTC amounts to send on proposal execution."},notice:"Create a new proposal."},"queue(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"queue",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Enqueue a proposal and everyone of its calls."},"quorumPercentageVotes()":{constant:!0,inputs:[],name:"quorumPercentageVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"quorumVotes()":{constant:!0,inputs:[],name:"quorumVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",notice:"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"state(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"state",outputs:[{internalType:"enum GovernorAlpha.ProposalState",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},return:"The state of the proposal: Canceled, Pending, Active, Defeated, Succeeded, Executed, Expired.",notice:"Get a proposal state."},"timelock()":{constant:!0,inputs:[],name:"timelock",outputs:[{internalType:"contract ITimelock",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"votingDelay()":{constant:!0,inputs:[],name:"votingDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The delay before voting on a proposal may take place, once proposed."},"votingPeriod()":{constant:!0,inputs:[],name:"votingPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The duration of voting on a proposal, in blocks."}}},"contracts/Sovryn/Governance/GovernorAlpha.sol:StakingInterface":{source:"contracts/Sovryn/Governance/GovernorAlpha.sol",name:"StakingInterface",methods:{"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/GovernorAlpha.sol:TimelockInterface":{source:"contracts/Sovryn/Governance/GovernorAlpha.sol",name:"TimelockInterface",methods:{"GRACE_PERIOD()":{constant:!0,inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"acceptAdmin()":{constant:!1,inputs:[],name:"acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"cancelTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"delay()":{constant:!0,inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"nonpayable",type:"function"},"queuedTransactions(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"hash",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/GovernorVault.sol:GovernorVault":{source:"contracts/Sovryn/Governance/GovernorVault.sol",name:"GovernorVault",title:"Governance Vault.",notice:"This contract stores tokens and rBTC only transfereble by owner, i.e. Sovryn governance.",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"Deposited(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposited",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"RbtcTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RbtcTransferred",type:"event"},"TokensTransferred(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensTransferred",type:"event"}},methods:{"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferRbtc(address,uint256)":{constant:!1,inputs:[{internalType:"address payable",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferRbtc",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be transferred.",_receiver:"The receiver of RBTC."},notice:"Transfer RBTC."},"transferTokens(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be transferred.",_receiver:"The receiver of tokens.",_token:"The address of token contract."},notice:"Transfer tokens."}}},"contracts/Sovryn/Governance/Staking/Checkpoints.sol:Checkpoints":{source:"contracts/Sovryn/Governance/Staking/Checkpoints.sol",name:"Checkpoints",title:"Checkpoints contract.",notice:"Increases and decreases storage values for users, delegatees and total daily stake.",events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"ContractCodeHashAdded(bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"hash",type:"bytes32"}],name:"ContractCodeHashAdded",type:"event"},"ContractCodeHashRemoved(bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"hash",type:"bytes32"}],name:"ContractCodeHashRemoved",type:"event"},"DelegateChanged(address,uint256,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},"DelegateStakeChanged(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateStakeChanged",type:"event"},"ExtendedStakingDuration(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"previousDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountStaked",type:"uint256"}],name:"ExtendedStakingDuration",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"StakingWithdrawn(address,uint256,uint256,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"until",type:"uint256"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"bool",name:"isGovernance",type:"bool"}],name:"StakingWithdrawn",type:"event"},"TokensStaked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalStaked",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensUnlocked(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensUnlocked",type:"event"},"VestingStakeSet(uint256,uint96)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"lockedTS",type:"uint256"},{indexed:!1,internalType:"uint96",name:"value",type:"uint96"}],name:"VestingStakeSet",type:"event"},"VestingTokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"VestingTokensWithdrawn",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numVestingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numVestingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"vestingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingCodeHashes(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"vestingCodeHashes",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"vestingRegistryLogic()":{constant:!0,inputs:[],name:"vestingRegistryLogic",outputs:[{internalType:"contract IVestingRegistryLogic",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/Staking/Staking.sol:Staking":{source:"contracts/Sovryn/Governance/Staking/Staking.sol",name:"Staking",title:"Staking contract.",notice:"Pay-in and pay-out function for staking and withdrawing tokens. Staking is delegated and vested: To gain voting power, SOV holders must stake their SOV for a given period of time. Aside from Bitocracy participation, there's a financially-rewarding reason for staking SOV. Tokenholders who stake their SOV receive staking rewards, a pro-rata share of the revenue that the platform generates from various transaction fees plus revenues from stakers who have a portion of their SOV slashed for early unstaking.",events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"ContractCodeHashAdded(bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"hash",type:"bytes32"}],name:"ContractCodeHashAdded",type:"event"},"ContractCodeHashRemoved(bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"hash",type:"bytes32"}],name:"ContractCodeHashRemoved",type:"event"},"DelegateChanged(address,uint256,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},"DelegateStakeChanged(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateStakeChanged",type:"event"},"ExtendedStakingDuration(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"previousDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountStaked",type:"uint256"}],name:"ExtendedStakingDuration",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"StakingWithdrawn(address,uint256,uint256,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"until",type:"uint256"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"bool",name:"isGovernance",type:"bool"}],name:"StakingWithdrawn",type:"event"},"TokensStaked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalStaked",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensUnlocked(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensUnlocked",type:"event"},"VestingStakeSet(uint256,uint96)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"lockedTS",type:"uint256"},{indexed:!1,internalType:"uint96",name:"value",type:"uint96"}],name:"VestingStakeSet",type:"event"},"VestingTokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"VestingTokensWithdrawn",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"addContractCodeHash(address)":{constant:!1,inputs:[{internalType:"address",name:"vesting",type:"address"}],name:"addContractCodeHash",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"We need it to use _isVestingContract() function instead of isContract()",params:{vesting:"The address of Vesting contract."},notice:"Add vesting contract's code hash to a map of code hashes."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint96",name:"balance",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Iterate checkpoints adding up stakes.",params:{account:"The address of the account to get the balance of."},return:"The number of tokens held.",notice:"Get the number of staked tokens held by the user account."},"computeWeightByDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"}],name:"computeWeightByDate",outputs:[{internalType:"uint96",name:"weight",type:"uint96"}],payable:!1,stateMutability:"pure",type:"function",params:{date:"The unlocking date.",startDate:"We compute the weight for the tokens staked until 'date' on 'startDate'."},return:"The weighted stake the account had as of the given block.",notice:"Compute the weight for a specific date."},"delegate(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"lockDate",type:"uint256"}],name:"delegate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to.",lockDate:"the date if the position to delegate."},notice:"Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`."},"delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"lockDate",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);",params:{delegatee:"The address to delegate votes to.",expiry:"The time at which to expire the signature.",lockDate:"The date until which the position is locked.",nonce:"The contract state required to match the signature.",r:"Half of the ECDSA signature pair.",s:"Half of the ECDSA signature pair.",v:"The recovery byte of the signature."},notice:"Delegates votes from signatory to a delegatee account. Voting with EIP-712 Signatures.\t * Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them.\t * The third party in this scenario, submitting the SOV-holder’s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them."},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"extendStakingDuration(uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"previousLock",type:"uint256"},{internalType:"uint256",name:"until",type:"uint256"}],name:"extendStakingDuration",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{previousLock:"The old unlocking timestamp.",until:"The new unlocking timestamp in seconds."},notice:"Extend the staking duration until the specified date."},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getCurrentStakedUntil(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"lockedTS",type:"uint256"}],name:"getCurrentStakedUntil",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{lockedTS:"The timestamp to get the staked tokens for."},notice:"Get the current number of tokens staked for a day."},"getCurrentVotes(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"getCurrentVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"This is a wrapper to simplify arguments. The actual computation is performed on WeightedStaking parent contract.",params:{account:"The address to get votes balance."},return:"The number of current votes for a user account.",notice:"Get the current votes balance for a user account."},"getPriorStakeByDateForDelegatee(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorStakeByDateForDelegatee",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorStakeByDateForDelegatee should probably better be internal instead of a public function.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The staking date to compute the power for."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account as of a block number."},"getPriorTotalStakesForDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorTotalStakesForDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.",params:{blockNumber:"The block number to get the vote balance at.",date:"The date to check the stakes for."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an unlocking date as of a block number."},"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"totalVotingPower",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{blockNumber:"The block number, needed for checkpointing.",time:"The timestamp for which to calculate the total voting power."},return:"The total voting power at the given time.",notice:"Compute the total voting power at a given time."},"getPriorUserStakeByDate(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorUserStakeByDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The lock date."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account until a certain lock date as of a block number."},"getPriorVestingStakeByDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorVestingStakeByDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{blockNumber:"The block number to get the vote balance at.",date:"The lock date."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of vested stake for an account until a certain lock date as of a block number."},"getPriorVestingWeightedStake(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVestingWeightedStake",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:'Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting. TODO: WeightedStaking::getPriorVestingWeightedStake is using the variable name "votes" to add up token stake, and that could be misleading.',params:{blockNumber:"The block number to get the vote balance at.",date:"The staking date to compute the power for."},return:"The weighted stake the account had as of the given block.",notice:"Determine the prior weighted vested amount for an account as of a block number. Iterate through checkpoints adding up voting power."},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for Voting, not for fee sharing.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The staking date to compute the power for."},return:"The number of votes the delegatee had as of the given block.",notice:"Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power."},"getPriorWeightedStake(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorWeightedStake",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:'Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting. TODO: WeightedStaking::getPriorWeightedStake is using the variable name "votes" to add up token stake, and that could be misleading.',params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The date/timestamp of the unstaking time."},return:"The weighted stake the account had as of the given block.",notice:"Determine the prior weighted stake for an account as of a block number. Iterate through checkpoints adding up voting power."},"getStakes(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"getStakes",outputs:[{internalType:"uint256[]",name:"dates",type:"uint256[]"},{internalType:"uint96[]",name:"stakes",type:"uint96[]"}],payable:!1,stateMutability:"view",type:"function",params:{account:"The address to get stakes."},return:"The arrays of dates and stakes.",notice:"Get list of stakes for a user account."},"getWithdrawAmounts(uint96,uint256)":{constant:!0,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"}],name:"getWithdrawAmounts",outputs:[{internalType:"uint96",name:"",type:"uint96"},{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{amount:"The number of tokens to withdraw.",until:"The date until which the tokens were staked."},notice:"Get available and punished amount for withdrawing."},"governanceWithdraw(uint96,uint256,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting",params:{amount:"The number of tokens to withdraw.",receiver:"The receiver of the tokens. If not specified, send to the msg.sender",until:"The date until which the tokens were staked."},notice:"Withdraw the given amount of tokens."},"governanceWithdrawVesting(address,address)":{constant:!1,inputs:[{internalType:"address",name:"vesting",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting.",params:{receiver:"The receiver of the tokens. If not specified, send to the msg.sender",vesting:"The address of Vesting contract."},notice:"Withdraw tokens for vesting contract."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"isVestingContract(address)":{constant:!0,inputs:[{internalType:"address",name:"stakerAddress",type:"address"}],name:"isVestingContract",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{stakerAddress:"the address to check"},notice:"Return flag whether the given address is a registered vesting contract."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"migrateToNewStakingContract()":{constant:!1,inputs:[],name:"migrateToNewStakingContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Staking contract needs to be set before by the owner. Currently not implemented, just needed for the interface.     In case it's needed at some point in the future,     the implementation needs to be changed first.",notice:"Allow a staker to migrate his positions to the new staking contract."},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numVestingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numVestingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_data:"The data will be used for low level call."},notice:"Receives approval from SOV token."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"removeContractCodeHash(address)":{constant:!1,inputs:[{internalType:"address",name:"vesting",type:"address"}],name:"removeContractCodeHash",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"We need it to use _isVestingContract() function instead of isContract()",params:{vesting:"The address of Vesting contract."},notice:"Add vesting contract's code hash to a map of code hashes."},"setFeeSharing(address)":{constant:!1,inputs:[{internalType:"address",name:"_feeSharing",type:"address"}],name:"setFeeSharing",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_feeSharing:"The address of FeeSharing (usually Governor Vault)."},notice:"Allow the owner to set a fee sharing address. We need it for unstaking with slashing."},"setNewStakingContract(address)":{constant:!1,inputs:[{internalType:"address",name:"_newStakingContract",type:"address"}],name:"setNewStakingContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Doesn't have any influence as long as migrateToNewStakingContract is not implemented.",params:{_newStakingContract:"The address of the new staking contract."},notice:"Allow the owner to set a new staking contract. As a consequence it allows the stakers to migrate their positions to the new contract."},"setVestingRegistry(address)":{constant:!1,inputs:[{internalType:"address",name:"_vestingRegistryProxy",type:"address"}],name:"setVestingRegistry",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"_vestingRegistryProxy can be set to 0 as this function can be reused by various other functionalities without the necessity of linking it with Vesting Registry",params:{_vestingRegistryProxy:"the address of vesting registry proxy contract"},notice:"sets vesting registry"},"setVestingStakes(uint256[],uint96[])":{constant:!1,inputs:[{internalType:"uint256[]",name:"lockedDates",type:"uint256[]"},{internalType:"uint96[]",name:"values",type:"uint96[]"}],name:"setVestingStakes",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{lockedDates:"The arrays of lock dates.",values:"The array of values to add to the staked balance."},notice:"Sets the users' vesting stakes for a giving lock dates and writes checkpoints."},"setWeightScaling(uint96)":{constant:!1,inputs:[{internalType:"uint96",name:"_weightScaling",type:"uint96"}],name:"setWeightScaling",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_weightScaling:"The weight scaling."},notice:"Allow the owner to set weight scaling. We need it for unstaking with slashing."},"stake(uint96,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stake",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The number of tokens to stake.",delegatee:"The address of the delegatee or 0x0 if there is none.",stakeFor:"The address to stake the tokens for or 0x0 if staking for oneself.",until:"Timestamp indicating the date until which to stake."},notice:"Stake the given amount for the given duration of time."},"stakeWithApproval(address,uint96,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stakeWithApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This function will be invoked from receiveApprovalSOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval",params:{amount:"The number of tokens to stake.",delegatee:"The address of the delegatee or 0x0 if there is none.",sender:"The sender of SOV.approveAndCall",stakeFor:"The address to stake the tokens for or 0x0 if staking for oneself.",until:"Timestamp indicating the date until which to stake."},notice:"Stake the given amount for the given duration of time."},"stakesBySchedule(uint256,uint256,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"cliff",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"intervalLength",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stakesBySchedule",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The amount of tokens to stake.",cliff:"The time interval to the first withdraw.",delegatee:"The address of the delegatee or 0x0 if there is none.",duration:"The staking duration.",intervalLength:"The length of each staking interval when cliff passed.",stakeFor:"The address to stake the tokens for or 0x0 if staking for oneself."},notice:"Stake tokens according to the vesting schedule."},"timestampToLockDate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"timestampToLockDate",outputs:[{internalType:"uint256",name:"lockDate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{timestamp:"The unlocking timestamp."},return:"The actual unlocking date (might be up to 2 weeks shorter than intended).",notice:"Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unlockAllTokens()":{constant:!1,inputs:[],name:"unlockAllTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Last resort.",notice:"Allow the owner to unlock all tokens in case the staking contract is going to be replaced Note: Not reversible on purpose. once unlocked, everything is unlocked. The owner should not be able to just quickly unlock to withdraw his own tokens and lock again."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"vestingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingCodeHashes(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"vestingCodeHashes",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"vestingRegistryLogic()":{constant:!0,inputs:[],name:"vestingRegistryLogic",outputs:[{internalType:"contract IVestingRegistryLogic",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"weightedStakeByDate(address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"weightedStakeByDate",outputs:[{internalType:"uint96",name:"power",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{account:"The user address.",blockNumber:"The block number, needed for checkpointing.",date:"The staking date to compute the power for.",startDate:"The date for which we need to know the power of the stake."},return:"The stacking power.",notice:"Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function."},"weightedVestingStakeByDate(uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"weightedVestingStakeByDate",outputs:[{internalType:"uint96",name:"power",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{blockNumber:"The block number, needed for checkpointing.",date:"The staking date to compute the power for.",startDate:"The date for which we need to know the power of the stake."},return:"The stacking power.",notice:"Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedVestingStakeByDate should probably better be internal instead of a public function."},"withdraw(uint96,uint256,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"receiver",type:"address"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The number of tokens to withdraw.",receiver:"The receiver of the tokens. If not specified, send to the msg.sender",until:"The date until which the tokens were staked."},notice:"Withdraw the given amount of tokens if they are unlocked."}}},"contracts/Sovryn/Governance/Staking/StakingProxy.sol:StakingProxy":{source:"contracts/Sovryn/Governance/Staking/StakingProxy.sol",name:"StakingProxy",title:"Staking Proxy contract.",details:"Staking contract should be upgradable, use UpgradableProxy. StakingStorage is deployed with the upgradable functionality by using this contract instead, that inherits from UpgradableProxy the possibility of being enhanced and re-deployed.",constructor:{inputs:[{internalType:"address",name:"SOV",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numVestingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numVestingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"setImplementation(address)":{constant:!1,inputs:[{internalType:"address",name:"_implementation",type:"address"}],name:"setImplementation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for _setImplementation that exposes the function as public for owner to be able to set a new version of the contract as current pointing implementation.",params:{_implementation:"Address of the implementation."},notice:"Set address of the implementation."},"setProxyOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setProxyOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_owner:"Address of the owner."},notice:"Set address of the owner."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"vestingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingCodeHashes(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"vestingCodeHashes",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"vestingRegistryLogic()":{constant:!0,inputs:[],name:"vestingRegistryLogic",outputs:[{internalType:"contract IVestingRegistryLogic",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/Staking/StakingStorage.sol:StakingStorage":{source:"contracts/Sovryn/Governance/Staking/StakingStorage.sol",name:"StakingStorage",title:"Staking Storage contact.",notice:"Just the storage part of stacking contract, no functions, only constant, variables and required structures (mappings). Used by StackingProxy and Checkpoints contracts. * What is SOV staking? The purpose of the SOV token is to provide a pseudonymous, censorship-resistant mechanism for governing the parameters of the Sovryn protocol, while aligning the incentives of protocol governors with the long-term success of the protocol. Any SOV token holder can choose to stake (lock up) their tokens for a fixed period of time in return for voting rights in the Bitocracy. Stakers are further incentivised through fee and slashing rewards.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numVestingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numVestingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"vestingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingCodeHashes(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"vestingCodeHashes",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"vestingRegistryLogic()":{constant:!0,inputs:[],name:"vestingRegistryLogic",outputs:[{internalType:"contract IVestingRegistryLogic",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/Staking/WeightedStaking.sol:WeightedStaking":{source:"contracts/Sovryn/Governance/Staking/WeightedStaking.sol",name:"WeightedStaking",title:"Weighted Staking contract.",notice:"Computation of power and votes used by GovernorAlpha and Staking contracts w/ mainly 3 public functions:  + getPriorTotalVotingPower => Total voting power.  + getPriorVotes  => Delegatee voting power.  + getPriorWeightedStake  => User Weighted Stake. Staking contract inherits WeightedStaking. GovernorAlpha invoke Staking instance functions.",events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"ContractCodeHashAdded(bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"hash",type:"bytes32"}],name:"ContractCodeHashAdded",type:"event"},"ContractCodeHashRemoved(bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"hash",type:"bytes32"}],name:"ContractCodeHashRemoved",type:"event"},"DelegateChanged(address,uint256,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},"DelegateStakeChanged(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateStakeChanged",type:"event"},"ExtendedStakingDuration(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"previousDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountStaked",type:"uint256"}],name:"ExtendedStakingDuration",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"StakingWithdrawn(address,uint256,uint256,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"until",type:"uint256"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"bool",name:"isGovernance",type:"bool"}],name:"StakingWithdrawn",type:"event"},"TokensStaked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalStaked",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensUnlocked(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensUnlocked",type:"event"},"VestingStakeSet(uint256,uint96)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"lockedTS",type:"uint256"},{indexed:!1,internalType:"uint96",name:"value",type:"uint96"}],name:"VestingStakeSet",type:"event"},"VestingTokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"VestingTokensWithdrawn",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"addContractCodeHash(address)":{constant:!1,inputs:[{internalType:"address",name:"vesting",type:"address"}],name:"addContractCodeHash",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"We need it to use _isVestingContract() function instead of isContract()",params:{vesting:"The address of Vesting contract."},notice:"Add vesting contract's code hash to a map of code hashes."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"computeWeightByDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"}],name:"computeWeightByDate",outputs:[{internalType:"uint96",name:"weight",type:"uint96"}],payable:!1,stateMutability:"pure",type:"function",params:{date:"The unlocking date.",startDate:"We compute the weight for the tokens staked until 'date' on 'startDate'."},return:"The weighted stake the account had as of the given block.",notice:"Compute the weight for a specific date."},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getPriorStakeByDateForDelegatee(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorStakeByDateForDelegatee",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorStakeByDateForDelegatee should probably better be internal instead of a public function.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The staking date to compute the power for."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account as of a block number."},"getPriorTotalStakesForDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorTotalStakesForDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.",params:{blockNumber:"The block number to get the vote balance at.",date:"The date to check the stakes for."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an unlocking date as of a block number."},"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"totalVotingPower",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{blockNumber:"The block number, needed for checkpointing.",time:"The timestamp for which to calculate the total voting power."},return:"The total voting power at the given time.",notice:"Compute the total voting power at a given time."},"getPriorUserStakeByDate(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorUserStakeByDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The lock date."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account until a certain lock date as of a block number."},"getPriorVestingStakeByDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorVestingStakeByDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{blockNumber:"The block number to get the vote balance at.",date:"The lock date."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of vested stake for an account until a certain lock date as of a block number."},"getPriorVestingWeightedStake(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVestingWeightedStake",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:'Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting. TODO: WeightedStaking::getPriorVestingWeightedStake is using the variable name "votes" to add up token stake, and that could be misleading.',params:{blockNumber:"The block number to get the vote balance at.",date:"The staking date to compute the power for."},return:"The weighted stake the account had as of the given block.",notice:"Determine the prior weighted vested amount for an account as of a block number. Iterate through checkpoints adding up voting power."},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for Voting, not for fee sharing.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The staking date to compute the power for."},return:"The number of votes the delegatee had as of the given block.",notice:"Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power."},"getPriorWeightedStake(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorWeightedStake",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:'Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting. TODO: WeightedStaking::getPriorWeightedStake is using the variable name "votes" to add up token stake, and that could be misleading.',params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The date/timestamp of the unstaking time."},return:"The weighted stake the account had as of the given block.",notice:"Determine the prior weighted stake for an account as of a block number. Iterate through checkpoints adding up voting power."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"isVestingContract(address)":{constant:!0,inputs:[{internalType:"address",name:"stakerAddress",type:"address"}],name:"isVestingContract",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{stakerAddress:"the address to check"},notice:"Return flag whether the given address is a registered vesting contract."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numVestingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numVestingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"removeContractCodeHash(address)":{constant:!1,inputs:[{internalType:"address",name:"vesting",type:"address"}],name:"removeContractCodeHash",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"We need it to use _isVestingContract() function instead of isContract()",params:{vesting:"The address of Vesting contract."},notice:"Add vesting contract's code hash to a map of code hashes."},"setVestingRegistry(address)":{constant:!1,inputs:[{internalType:"address",name:"_vestingRegistryProxy",type:"address"}],name:"setVestingRegistry",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"_vestingRegistryProxy can be set to 0 as this function can be reused by various other functionalities without the necessity of linking it with Vesting Registry",params:{_vestingRegistryProxy:"the address of vesting registry proxy contract"},notice:"sets vesting registry"},"setVestingStakes(uint256[],uint96[])":{constant:!1,inputs:[{internalType:"uint256[]",name:"lockedDates",type:"uint256[]"},{internalType:"uint96[]",name:"values",type:"uint96[]"}],name:"setVestingStakes",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{lockedDates:"The arrays of lock dates.",values:"The array of values to add to the staked balance."},notice:"Sets the users' vesting stakes for a giving lock dates and writes checkpoints."},"timestampToLockDate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"timestampToLockDate",outputs:[{internalType:"uint256",name:"lockDate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{timestamp:"The unlocking timestamp."},return:"The actual unlocking date (might be up to 2 weeks shorter than intended).",notice:"Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"vestingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingCodeHashes(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"vestingCodeHashes",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"vestingRegistryLogic()":{constant:!0,inputs:[],name:"vestingRegistryLogic",outputs:[{internalType:"contract IVestingRegistryLogic",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"weightedStakeByDate(address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"weightedStakeByDate",outputs:[{internalType:"uint96",name:"power",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{account:"The user address.",blockNumber:"The block number, needed for checkpointing.",date:"The staking date to compute the power for.",startDate:"The date for which we need to know the power of the stake."},return:"The stacking power.",notice:"Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function."},"weightedVestingStakeByDate(uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"weightedVestingStakeByDate",outputs:[{internalType:"uint96",name:"power",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{blockNumber:"The block number, needed for checkpointing.",date:"The staking date to compute the power for.",startDate:"The date for which we need to know the power of the stake."},return:"The stacking power.",notice:"Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedVestingStakeByDate should probably better be internal instead of a public function."}}},"contracts/Sovryn/Governance/StakingRewards/StakingRewards.sol:StakingRewards":{source:"contracts/Sovryn/Governance/StakingRewards/StakingRewards.sol",name:"StakingRewards",title:"Staking Rewards Contract.",notice:"This is a trial incentive program. In this, the SOV emitted and becoming liquid from the Adoption Fund could be utilized to offset the higher APY's offered for Liquidity Mining events. Vesting contract stakes are excluded from these rewards. Only wallets which have staked previously liquid SOV are eligible for these rewards. Tokenholders who stake their SOV receive staking rewards, a pro-rata share of the revenue that the platform generates from various transaction fees plus revenues from stakers who have a portion of their SOV slashed for early unstaking.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"RewardWithdrawn(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RewardWithdrawn",type:"event"}},methods:{"BASE_RATE()":{constant:!0,inputs:[],name:"BASE_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"DIVISOR()":{constant:!0,inputs:[],name:"DIVISOR",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"TWO_WEEKS()":{constant:!0,inputs:[],name:"TWO_WEEKS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"claimedBalances(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"claimedBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"collectReward()":{constant:!1,inputs:[],name:"collectReward",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"User calls this function to collect SOV staking rewards as per the SIP-0024 program. The weighted stake is calculated using getPriorWeightedStake. Block number sent to the functon must be a finalised block, hence we deduct 1 from the current block. User is only allowed to withdraw after intervals of 14 days.",notice:"Collect rewards"},"deploymentBlock()":{constant:!0,inputs:[],name:"deploymentBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getStakerCurrentReward(bool)":{constant:!0,inputs:[{internalType:"bool",name:"considerMaxDuration",type:"bool"}],name:"getStakerCurrentReward",outputs:[{internalType:"uint256",name:"lastWithdrawalInterval",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"The collectReward() function internally calls this function to calculate reward amount",params:{considerMaxDuration:"True: Runs for the maximum duration - used in tx not to run out of gas False - to query total rewards"},return:"The timestamp of last withdrawalThe accumulated reward",notice:"Get staker's current accumulated reward"},"initialize(address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"contract IStaking",name:"_staking",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_SOV:"SOV token address",_staking:"StakingProxy address should be passed"},notice:"Replacement of constructor by initialize function for Upgradable Contracts This function will be called only once by the owner."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"maxDuration()":{constant:!0,inputs:[],name:"maxDuration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"setMaxDuration(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_duration",type:"uint256"}],name:"setMaxDuration",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Rewards can be collected for a maximum duration at a time. This is to avoid Block Gas Limit failures. Setting it zero would mean that it will loop through the entire duration since the start of rewards program. It should ideally be set to a value, for which the rewards can be easily processed.",params:{_duration:"Max duration for which rewards can be collected at a go (in seconds)"},notice:"Sets the max duration"},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startTime()":{constant:!0,inputs:[],name:"startTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"stop()":{constant:!1,inputs:[],name:"stop",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"All stakes existing on the contract at the point in time of cancellation continue accruing rewards until the end of the staking period being rewarded",notice:"Stops the current rewards program."},"stopBlock()":{constant:!0,inputs:[],name:"stopBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawTokensByOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiverAddress",type:"address"}],name:"withdrawTokensByOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_receiverAddress:"The address where the tokens has to be transferred."},notice:"Withdraws all token from the contract by Multisig."},"withdrawals(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"withdrawals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/StakingRewards/StakingRewardsProxy.sol:StakingRewardsProxy":{source:"contracts/Sovryn/Governance/StakingRewards/StakingRewardsProxy.sol",name:"StakingRewardsProxy",title:"StakingRewards Proxy contract.",details:"StakingRewards contract should be upgradable. Used UpgradableProxy. StakingRewardsStorage is deployed with the upgradable functionality by using this contract instead, that inherits from UpgradableProxy with the possibility of being enhanced and re-deployed.",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"BASE_RATE()":{constant:!0,inputs:[],name:"BASE_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"DIVISOR()":{constant:!0,inputs:[],name:"DIVISOR",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"TWO_WEEKS()":{constant:!0,inputs:[],name:"TWO_WEEKS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"claimedBalances(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"claimedBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"deploymentBlock()":{constant:!0,inputs:[],name:"deploymentBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"maxDuration()":{constant:!0,inputs:[],name:"maxDuration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"setImplementation(address)":{constant:!1,inputs:[{internalType:"address",name:"_implementation",type:"address"}],name:"setImplementation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for _setImplementation that exposes the function as public for owner to be able to set a new version of the contract as current pointing implementation.",params:{_implementation:"Address of the implementation."},notice:"Set address of the implementation."},"setProxyOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setProxyOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_owner:"Address of the owner."},notice:"Set address of the owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startTime()":{constant:!0,inputs:[],name:"startTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"stopBlock()":{constant:!0,inputs:[],name:"stopBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawals(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"withdrawals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/StakingRewards/StakingRewardsStorage.sol:StakingRewardsStorage":{source:"contracts/Sovryn/Governance/StakingRewards/StakingRewardsStorage.sol",name:"StakingRewardsStorage",title:"Staking Rewards Storage Contract.",notice:'Just the storage part of staking rewards contract, no functions, only constant, variables and required structures (mappings). Used by StackingRewardsProxy. * What is SOV staking rewards - SIP-0024? The purpose of the SOV staking rewards - SIP-0024 is to reward, "marginal stakers" (ie, stakers by choice, not currently vesting) with liquid SOV at the beginning of each new staking interval.',events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"BASE_RATE()":{constant:!0,inputs:[],name:"BASE_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"DIVISOR()":{constant:!0,inputs:[],name:"DIVISOR",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"TWO_WEEKS()":{constant:!0,inputs:[],name:"TWO_WEEKS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"claimedBalances(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"claimedBalances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"deploymentBlock()":{constant:!0,inputs:[],name:"deploymentBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"maxDuration()":{constant:!0,inputs:[],name:"maxDuration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startTime()":{constant:!0,inputs:[],name:"startTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"stopBlock()":{constant:!0,inputs:[],name:"stopBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawals(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"withdrawals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/Timelock.sol:ITimelock":{source:"contracts/Sovryn/Governance/Timelock.sol",name:"ITimelock",methods:{"GRACE_PERIOD()":{constant:!0,inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"acceptAdmin()":{constant:!1,inputs:[],name:"acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"cancelTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"delay()":{constant:!0,inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"nonpayable",type:"function"},"queuedTransactions(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"hash",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/Timelock.sol:Timelock":{source:"contracts/Sovryn/Governance/Timelock.sol",name:"Timelock",title:"Sovryn Protocol Timelock contract, based on Compound system.",notice:"This contract lets Sovryn governance system set up its own Time Lock instance to execute transactions proposed through the GovernorAlpha contract instance. * The Timelock contract allows its admin (Sovryn governance on GovernorAlpha contract) to add arbitrary function calls to a queue. This contract can only execute a function call if the function call has been in the queue for at least 3 hours. * Anytime the Timelock contract makes a function call, it must be the case that the function call was first made public by having been publicly added to the queue at least 3 hours prior. * The intention is to provide GovernorAlpha contract the functionality to queue proposal actions. This would mean that any changes made by Sovryn governance of any contract would necessarily come with at least an advanced warning. This makes the Sovryn system follow a “time-delayed, opt-out” upgrade pattern (rather than an “instant, forced” upgrade pattern). * Time-delaying admin actions gives users a chance to exit system if its admins become malicious or compromised (or make a change that the users do not like). Downside is that honest admins would be unable to lock down functionality to protect users if a critical bug was found. * Delayed transactions reduce the amount of trust required by users of Sovryn and the overall risk for contracts building on top of it, as GovernorAlpha.",constructor:{inputs:[{internalType:"address",name:"admin_",type:"address"},{internalType:"uint256",name:"delay_",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"CancelTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"CancelTransaction",type:"event"},"ExecuteTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ExecuteTransaction",type:"event"},"NewAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAdmin",type:"address"}],name:"NewAdmin",type:"event"},"NewDelay(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"newDelay",type:"uint256"}],name:"NewDelay",type:"event"},"NewPendingAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newPendingAdmin",type:"address"}],name:"NewPendingAdmin",type:"event"},"QueueTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"QueueTransaction",type:"event"}},methods:{"GRACE_PERIOD()":{constant:!0,inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAXIMUM_DELAY()":{constant:!0,inputs:[],name:"MAXIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MINIMUM_DELAY()":{constant:!0,inputs:[],name:"MINIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"acceptAdmin()":{constant:!1,inputs:[],name:"acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Accept a new admin for the timelock."},"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"cancelTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Cancel a transaction."},"delay()":{constant:!0,inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Executes a previously queued transaction from the governance."},"pendingAdmin()":{constant:!0,inputs:[],name:"pendingAdmin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Queue a new transaction from the governance contract."},"queuedTransactions(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"setDelay(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"delay_",type:"uint256"}],name:"setDelay",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{delay_:"The amount of time to wait until execution."},notice:"Set a new delay when executing the contract calls."},"setPendingAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"pendingAdmin_",type:"address"}],name:"setPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{pendingAdmin_:"The new pending admin address."},notice:"Set a new pending admin for the timelock."}}},"contracts/Sovryn/Governance/Vesting/DevelopmentFund.sol:DevelopmentFund":{source:"contracts/Sovryn/Governance/Vesting/DevelopmentFund.sol",name:"DevelopmentFund",title:"A holding contract for Sovryn Development Fund.",author:"Shebin John - admin@remedcu.com",notice:"You can use this contract for timed token release from Dev Fund.",constructor:{inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_lockedTokenOwner",type:"address"},{internalType:"address",name:"_safeVault",type:"address"},{internalType:"address",name:"_unlockedTokenOwner",type:"address"},{internalType:"uint256",name:"_lastReleaseTime",type:"uint256"},{internalType:"uint256[]",name:"_releaseDuration",type:"uint256[]"},{internalType:"uint256[]",name:"_releaseTokenAmount",type:"uint256[]"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"DevelopmentFundActivated()":{anonymous:!1,inputs:[],name:"DevelopmentFundActivated",type:"event"},"DevelopmentFundExpired()":{anonymous:!1,inputs:[],name:"DevelopmentFundExpired",type:"event"},"LockedTokenTransferByLockedOwner(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"LockedTokenTransferByLockedOwner",type:"event"},"LockedTokenTransferByUnlockedOwner(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"LockedTokenTransferByUnlockedOwner",type:"event"},"NewLockedOwnerAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_newLockedOwner",type:"address"}],name:"NewLockedOwnerAdded",type:"event"},"NewLockedOwnerApproved(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_oldLockedOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newLockedOwner",type:"address"}],name:"NewLockedOwnerApproved",type:"event"},"TokenDeposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenDeposit",type:"event"},"TokenReleaseChanged(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_releaseCount",type:"uint256"}],name:"TokenReleaseChanged",type:"event"},"UnlockedOwnerUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_newUnlockedOwner",type:"address"}],name:"UnlockedOwnerUpdated",type:"event"},"UnlockedTokenWithdrawalByUnlockedOwner(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_releaseCount",type:"uint256"}],name:"UnlockedTokenWithdrawalByUnlockedOwner",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"approveLockedTokenOwner()":{constant:!1,inputs:[],name:"approveLockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This approval is an added security to avoid development fund takeover by a compromised locked token owner.",notice:"Approve Locked Token Owner."},"changeTokenReleaseSchedule(uint256,uint256[],uint256[])":{constant:!1,inputs:[{internalType:"uint256",name:"_newLastReleaseTime",type:"uint256"},{internalType:"uint256[]",name:"_releaseDuration",type:"uint256[]"},{internalType:"uint256[]",name:"_releaseTokenAmount",type:"uint256[]"}],name:"changeTokenReleaseSchedule",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"_releaseDuration and _releaseTokenAmount should be specified in reverse order of release.",params:{_newLastReleaseTime:"If the last release time is to be changed, zero if no change required.",_releaseDuration:"The time duration between each release calculated from `lastReleaseTime` in seconds.",_releaseTokenAmount:"The amount of token to be released in each duration/interval."},notice:"Change the Token release schedule. It creates a completely new schedule, and does not append on the previous one."},"depositTokens(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"These tokens can be withdrawn/transferred any time by the lockedTokenOwner.",params:{_amount:"the amount of tokens deposited."},notice:"Deposit tokens to this contract."},"getReleaseDuration()":{constant:!0,inputs:[],name:"getReleaseDuration",outputs:[{internalType:"uint256[]",name:"_releaseTokenDuration",type:"uint256[]"}],payable:!1,stateMutability:"view",type:"function",return:"_currentReleaseDuration The current release duration.",notice:"Function to read the current token release duration."},"getReleaseTokenAmount()":{constant:!0,inputs:[],name:"getReleaseTokenAmount",outputs:[{internalType:"uint256[]",name:"_currentReleaseTokenAmount",type:"uint256[]"}],payable:!1,stateMutability:"view",type:"function",return:"_currentReleaseTokenAmount The current release token amount.",notice:"Function to read the current token release amount."},"init()":{constant:!1,inputs:[],name:"init",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Without calling this function, the contract will not work.",notice:"This function is called once after deployment for token transfer based on schedule."},"lastReleaseTime()":{constant:!0,inputs:[],name:"lastReleaseTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lockedTokenOwner()":{constant:!0,inputs:[],name:"lockedTokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"newLockedTokenOwner()":{constant:!0,inputs:[],name:"newLockedTokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"releaseDuration(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"releaseDuration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"releaseTokenAmount(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"releaseTokenAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"safeVault()":{constant:!0,inputs:[],name:"safeVault",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"status()":{constant:!0,inputs:[],name:"status",outputs:[{internalType:"enum DevelopmentFund.Status",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"transferTokensByLockedTokenOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"transferTokensByLockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This could be called when the current development fund has to be upgraded.",params:{_receiver:"The address which receives this token transfer."},notice:"Transfers all of the remaining tokens by the owner maybe for an upgrade."},"transferTokensByUnlockedTokenOwner()":{constant:!1,inputs:[],name:"transferTokensByUnlockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This could be called when governance or development fund might be compromised.",notice:"Transfers all of the remaining tokens in an emergency situation."},"unlockedTokenOwner()":{constant:!0,inputs:[],name:"unlockedTokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"updateLockedTokenOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_newLockedTokenOwner",type:"address"}],name:"updateLockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_newLockedTokenOwner:"The owner of the locked tokens & contract."},notice:"Update Locked Token Owner."},"updateUnlockedTokenOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_newUnlockedTokenOwner",type:"address"}],name:"updateUnlockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_newUnlockedTokenOwner:"The new unlocked token owner."},notice:"Update Unlocked Token Owner."},"withdrawTokensByUnlockedTokenOwner(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawTokensByUnlockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be withdrawn."},notice:"Withdraws all unlocked/released token."}}},"contracts/Sovryn/Governance/Vesting/TeamVesting.sol:TeamVesting":{source:"contracts/Sovryn/Governance/Vesting/TeamVesting.sol",name:"TeamVesting",title:"Team Vesting Contract.",details:"Vesting contracts shouldn't be upgradable, use Proxy instead of UpgradableProxy.",notice:"A regular vesting contract, but the owner (governance) is able to withdraw earlier without a slashing.",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_stakingAddress",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Sovryn/Governance/Vesting/Vesting.sol:Vesting":{source:"contracts/Sovryn/Governance/Vesting/Vesting.sol",name:"Vesting",title:"Vesting Contract.",details:"TODO add tests for governanceWithdrawTokens.",notice:"Team tokens and investor tokens are vested. Therefore, a smart contract needs to be developed to enforce the vesting schedule.",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_stakingAddress",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"governanceWithdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"We need to add this implementation to prevent proxy call VestingLogic.governanceWithdrawTokens",params:{receiver:"The receiver of the token withdrawal."}},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Sovryn/Governance/Vesting/VestingCreator.sol:VestingCreator":{source:"contracts/Sovryn/Governance/Vesting/VestingCreator.sol",name:"VestingCreator",constructor:{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_vestingRegistryProxy",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"DataCleared(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"}],name:"DataCleared",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokenTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokenTransferred",type:"event"},"TokensStaked(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"vesting",type:"address"},{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensStaked",type:"event"},"VestingDataRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"}],name:"VestingDataRemoved",type:"event"}},methods:{"TWO_WEEKS()":{constant:!0,inputs:[],name:"TWO_WEEKS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"addVestings(address[],uint256[],uint256[],uint256[],bool[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"_tokenOwners",type:"address[]"},{internalType:"uint256[]",name:"_amounts",type:"uint256[]"},{internalType:"uint256[]",name:"_cliffs",type:"uint256[]"},{internalType:"uint256[]",name:"_durations",type:"uint256[]"},{internalType:"bool[]",name:"_governanceControls",type:"bool[]"},{internalType:"uint256[]",name:"_vestingCreationTypes",type:"uint256[]"}],name:"addVestings",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"adds vestings to be processed to the list"},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"clearVestingDataList()":{constant:!1,inputs:[],name:"clearVestingDataList",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"removes all data about unprocessed vestings to be processed"},"getMissingBalance()":{constant:!0,inputs:[],name:"getMissingBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",notice:"returns missed balance to process all vestings"},"getUnprocessedAmount()":{constant:!0,inputs:[],name:"getUnprocessedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",notice:"returns total amount of vestings to be processed"},"getUnprocessedCount()":{constant:!0,inputs:[],name:"getUnprocessedCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",notice:"returns count of vestings to be processed"},"getVestingAddress()":{constant:!0,inputs:[],name:"getVestingAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",notice:"returns address after vesting creation"},"getVestingPeriod()":{constant:!0,inputs:[],name:"getVestingPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"will be used for deciding if vesting and staking needs to be processed in a single transaction or separate transactions",notice:"returns period i.e. ((duration - cliff) / 4 WEEKS)"},"isEnoughBalance()":{constant:!0,inputs:[],name:"isEnoughBalance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",notice:"checks if contract balance is enough to process all vestings"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"processNextVesting()":{constant:!1,inputs:[],name:"processNextVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Vesting and Staking are merged for calls that fits the gas limit",notice:"Creates vesting contract and stakes tokens"},"processStaking()":{constant:!1,inputs:[],name:"processStaking",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"it can be the case when vesting creation and tokens staking can't be done in one transaction because of block gas limit",notice:"Staking vested tokens"},"processVestingCreation()":{constant:!1,inputs:[],name:"processVestingCreation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Separating the Vesting and Staking to tackle Block Gas Limit",notice:"Creates vesting contract without staking any tokens"},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"removeNextVesting()":{constant:!1,inputs:[],name:"removeNextVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"we process inverted listwe should be able to remove incorrect vesting data that can't be processed",notice:"removes next vesting data from the list"},"token()":{constant:!0,inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferToken(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be transferred",_receiver:"the address of the Token receiver"},notice:"transfers Token tokens to given address"},"vestingDataList(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"vestingDataList",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"cliff",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"bool",name:"governanceControl",type:"bool"},{internalType:"address",name:"tokenOwner",type:"address"},{internalType:"uint256",name:"vestingCreationType",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"vestingRegistryLogic()":{constant:!0,inputs:[],name:"vestingRegistryLogic",outputs:[{internalType:"contract IVestingRegistryLogic",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/Vesting/VestingFactory.sol:VestingFactory":{source:"contracts/Sovryn/Governance/Vesting/VestingFactory.sol",name:"VestingFactory",title:"Vesting Factory: Contract to deploy vesting contracts of two types: vesting (TokenHolder) and team vesting (Multisig).",notice:"Factory pattern allows to create multiple instances of the same contract and keep track of them easier.",constructor:{inputs:[{internalType:"address",name:"_vestingLogic",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"deployTeamVesting(address,address,address,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_vestingOwner",type:"address"}],name:"deployTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_SOV:"The address of SOV token.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_feeSharing:"The address of fee sharing contract.",_staking:"The address of staking contract.",_tokenOwner:"The owner of the tokens.",_vestingOwner:"The address of an owner of vesting contract."},return:"The vesting contract address.",notice:"Deploys Team Vesting contract."},"deployVesting(address,address,address,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_vestingOwner",type:"address"}],name:"deployVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_SOV:"the address of SOV token.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_feeSharing:"The address of fee sharing contract.",_staking:"The address of staking contract.",_tokenOwner:"The owner of the tokens.",_vestingOwner:"The address of an owner of vesting contract."},return:"The vesting contract address.",notice:"Deploys Vesting contract."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vestingLogic()":{constant:!0,inputs:[],name:"vestingLogic",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/Vesting/VestingLogic.sol:VestingLogic":{source:"contracts/Sovryn/Governance/Vesting/VestingLogic.sol",name:"VestingLogic",title:"Vesting Logic contract.",details:"Deployed by a VestingFactory contract.",notice:"Staking, delegating and withdrawal functionality.",events:{"MigratedToNewStakingContract(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"newStakingContract",type:"address"}],name:"MigratedToNewStakingContract",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokensStaked(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"TokensWithdrawn",type:"event"},"VotesDelegated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"delegatee",type:"address"}],name:"VotesDelegated",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegate(address)":{constant:!1,inputs:[{internalType:"address",name:"_delegatee",type:"address"}],name:"delegate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_delegatee:"The address to delegate votes to."},notice:"Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`."},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"governanceWithdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can be called only by owner.",params:{receiver:"The receiving address."},notice:"Withdraws all tokens from the staking contract and forwards them to an address specified by the token owner."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"migrateToNewStakingContract()":{constant:!1,inputs:[],name:"migrateToNewStakingContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Allows the owners to migrate the positions to a new staking contract."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_data:"The data will be used for low level call."},notice:"Receives approval from SOV token."},"stakeTokens(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to stake."},notice:"Stakes tokens according to the vesting schedule."},"stakeTokensWithApproval(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokensWithApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This function will be invoked from receiveApproval.SOV.approveAndCall -> this.receiveApproval -> this.stakeTokensWithApproval",params:{_amount:"The amount of tokens to stake.",_sender:"The sender of SOV.approveAndCall"},notice:"Stakes tokens according to the vesting schedule."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"withdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{receiver:"The receiving address."},notice:"Withdraws unlocked tokens from the staking contract and forwards them to an address specified by the token owner."}}},"contracts/Sovryn/Governance/Vesting/VestingRegistryLogic.sol:VestingRegistryLogic":{source:"contracts/Sovryn/Governance/Vesting/VestingRegistryLogic.sol",name:"VestingRegistryLogic",events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TeamVestingCreated(address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"vestingCreationType",type:"uint256"}],name:"TeamVestingCreated",type:"event"},"TokenTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokenTransferred",type:"event"},"TokensStaked(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensStaked",type:"event"},"VestingCreated(address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"vestingCreationType",type:"uint256"}],name:"VestingCreated",type:"event"}},methods:{"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"createTeamVesting(address,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_vestingCreationType",type:"uint256"}],name:"createTeamVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be staked",_cliff:"the cliff in seconds",_duration:"the total duration in seconds",_tokenOwner:"the owner of the tokens",_vestingCreationType:"the type of vesting created(e.g. Origin, Bug Bounty etc.)"},notice:"creates Team Vesting contract"},"createVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Calls a public createVestingAddr function with vestingCreationType. This is to accomodate the existing logic for LockedFundvestingCreationType 0 = LockedFund",params:{_amount:"the amount to be staked",_cliff:"the cliff in seconds",_duration:"the total duration in seconds",_tokenOwner:"the owner of the tokens"},notice:"creates Vesting contract"},"createVestingAddr(address,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_vestingCreationType",type:"uint256"}],name:"createVestingAddr",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be staked",_cliff:"the cliff in seconds",_duration:"the total duration in seconds",_tokenOwner:"the owner of the tokens",_vestingCreationType:"the type of vesting created(e.g. Origin, Bug Bounty etc.)"},notice:"creates Vesting contract"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getTeamVesting(address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_vestingCreationType",type:"uint256"}],name:"getTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",notice:"returns team vesting contract address for the given token owner, cliff, duration"},"getVestingAddr(address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"uint256",name:"_vestingCreationType",type:"uint256"}],name:"getVestingAddr",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Important: Please use this instead of getVesting function",notice:"public function that returns vesting contract address for the given token owner, cliff, duration"},"getVestingDetails(address)":{constant:!0,inputs:[{internalType:"address",name:"_vestingAddress",type:"address"}],name:"getVestingDetails",outputs:[{internalType:"uint256",name:"cliff",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",notice:"returns cliff and duration for Vesting & TeamVesting contracts"},"getVestingsOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getVestingsOf",outputs:[{components:[{internalType:"uint256",name:"vestingType",type:"uint256"},{internalType:"uint256",name:"vestingCreationType",type:"uint256"},{internalType:"address",name:"vestingAddress",type:"address"}],internalType:"struct VestingRegistryStorage.VestingDetail[]",name:"",type:"tuple[]"}],payable:!1,stateMutability:"view",type:"function",notice:"returns all vesting details for the given token owner"},"initialize(address,address,address,address,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_vestingFactory",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_vestingOwner",type:"address"},{internalType:"address",name:"_lockedFund",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Replace constructor with initialize function for Upgradable Contracts This function will be called only once by the owner"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"isVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"isVesting",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"isVestingAdress(address)":{constant:!0,inputs:[{internalType:"address",name:"_vestingAddress",type:"address"}],name:"isVestingAdress",outputs:[{internalType:"bool",name:"isVestingAddr",type:"bool"}],payable:!1,stateMutability:"view",type:"function",notice:"returns if the address is a vesting address"},"lockedFund()":{constant:!0,inputs:[],name:"lockedFund",outputs:[{internalType:"contract ILockedFund",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"setVestingFactory(address)":{constant:!1,inputs:[{internalType:"address",name:"_vestingFactory",type:"address"}],name:"setVestingFactory",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_vestingFactory:"the address of vesting factory contract"},notice:"sets vesting factory address"},"stakeTokens(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_vesting",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount of tokens to stake",_vesting:"the address of Vesting contract"},notice:"stakes tokens according to the vesting schedule"},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"token()":{constant:!0,inputs:[],name:"token",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferToken(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be transferred",_receiver:"the address of the token receiver"},notice:"transfers tokens to given address"},"vestingFactory()":{constant:!0,inputs:[],name:"vestingFactory",outputs:[{internalType:"contract IVestingFactory",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingOwner()":{constant:!0,inputs:[],name:"vestingOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestings(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"vestings",outputs:[{internalType:"uint256",name:"vestingType",type:"uint256"},{internalType:"uint256",name:"vestingCreationType",type:"uint256"},{internalType:"address",name:"vestingAddress",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingsOf(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"vestingsOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/Vesting/VestingRegistryProxy.sol:VestingRegistryProxy":{source:"contracts/Sovryn/Governance/Vesting/VestingRegistryProxy.sol",name:"VestingRegistryProxy",title:"Vesting Registry Proxy contract.",details:"Vesting Registry contract should be upgradable, use UpgradableProxy. VestingRegistryStorage is deployed with the upgradable functionality by using this contract instead, that inherits from UpgradableProxy the possibility of being enhanced and re-deployed.",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"isVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"isVesting",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"lockedFund()":{constant:!0,inputs:[],name:"lockedFund",outputs:[{internalType:"contract ILockedFund",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"setImplementation(address)":{constant:!1,inputs:[{internalType:"address",name:"_implementation",type:"address"}],name:"setImplementation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for _setImplementation that exposes the function as public for owner to be able to set a new version of the contract as current pointing implementation.",params:{_implementation:"Address of the implementation."},notice:"Set address of the implementation."},"setProxyOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setProxyOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_owner:"Address of the owner."},notice:"Set address of the owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"token()":{constant:!0,inputs:[],name:"token",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vestingFactory()":{constant:!0,inputs:[],name:"vestingFactory",outputs:[{internalType:"contract IVestingFactory",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingOwner()":{constant:!0,inputs:[],name:"vestingOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestings(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"vestings",outputs:[{internalType:"uint256",name:"vestingType",type:"uint256"},{internalType:"uint256",name:"vestingCreationType",type:"uint256"},{internalType:"address",name:"vestingAddress",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingsOf(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"vestingsOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/Vesting/VestingRegistryStorage.sol:VestingRegistryStorage":{source:"contracts/Sovryn/Governance/Vesting/VestingRegistryStorage.sol",name:"VestingRegistryStorage",title:"Vesting Registry Storage Contract.",details:"Use Ownable as a parent to align storage structure for Logic and Proxy contracts.",notice:"This contract is just the storage required for vesting registry. It is parent of VestingRegistryProxy and VestingRegistryLogic.",events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"isVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"isVesting",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"lockedFund()":{constant:!0,inputs:[],name:"lockedFund",outputs:[{internalType:"contract ILockedFund",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"token()":{constant:!0,inputs:[],name:"token",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vestingFactory()":{constant:!0,inputs:[],name:"vestingFactory",outputs:[{internalType:"contract IVestingFactory",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingOwner()":{constant:!0,inputs:[],name:"vestingOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestings(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"vestings",outputs:[{internalType:"uint256",name:"vestingType",type:"uint256"},{internalType:"uint256",name:"vestingCreationType",type:"uint256"},{internalType:"address",name:"vestingAddress",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingsOf(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"vestingsOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Governance/Vesting/VestingStorage.sol:VestingStorage":{source:"contracts/Sovryn/Governance/Vesting/VestingStorage.sol",name:"VestingStorage",title:"Vesting Storage Contract.",details:"Use Ownable as a parent to align storage structure for Logic and Proxy contracts.",notice:"This contract is just the storage required for vesting. It is parent of VestingLogic and TeamVesting.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Sovryn/Helper/ErrorDecoder.sol:ErrorDecoder":{source:"contracts/Sovryn/Helper/ErrorDecoder.sol",name:"ErrorDecoder",title:"Base contract to properly handle returned data on failed calls",details:'On EVM if the return data length of a call is less than 68, then the transaction fails silently without a revert message! * As described in the Solidity documentation https://solidity.readthedocs.io/en/v0.5.17/control-structures.html#revert the revert reason is an ABI-encoded string consisting of: 0x08c379a0 // Function selector (method id) for "Error(string)" signature 0x0000000000000000000000000000000000000000000000000000000000000020 // Data offset 0x000000000000000000000000000000000000000000000000000000000000001a // String length 0x4e6f7420656e6f7567682045746865722070726f76696465642e000000000000 // String data * Another example, debug data from test:  0x08c379a0  0000000000000000000000000000000000000000000000000000000000000020  0000000000000000000000000000000000000000000000000000000000000034  54696d656c6f636b3a3a73657444656c61793a2044656c6179206d7573742065  7863656564206d696e696d756d2064656c61792e000000000000000000000000 * Parsed into:  Data offset: 20  Length: 34  Error message:    54696d656c6f636b3a3a73657444656c61793a2044656c6179206d7573742065    7863656564206d696e696d756d2064656c61792e000000000000000000000000'},"contracts/Sovryn/Helper/SafeMath96.sol:SafeMath96":{source:"contracts/Sovryn/Helper/SafeMath96.sol",name:"SafeMath96",title:"SafeMath96 contract.",details:"SafeMath96 uses uint96, unsigned integers of 96 bits length, so every integer from 0 to 2^96-1 can be operated. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. SafeMath restores this intuition by reverting the transaction when an operation overflows. * Using this contract instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",notice:"Improved Solidity's arithmetic operations with added overflow checks."},"contracts/Sovryn/Multisig/MultiSigWallet.sol:MultiSigWallet":{source:"contracts/Sovryn/Multisig/MultiSigWallet.sol",name:"MultiSigWallet",title:"Multisignature wallet - Allows multiple parties to agree on  transactions before execution.",author:"Stefan George - <stefan.george@consensys.net>",constructor:{inputs:[{internalType:"address[]",name:"_owners",type:"address[]"},{internalType:"uint256",name:"_required",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"Confirmation(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"Confirmation",type:"event"},"Deposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Deposit",type:"event"},"Execution(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"Execution",type:"event"},"ExecutionFailure(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"ExecutionFailure",type:"event"},"OwnerAddition(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"}],name:"OwnerAddition",type:"event"},"OwnerRemoval(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"}],name:"OwnerRemoval",type:"event"},"RequirementChange(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"required",type:"uint256"}],name:"RequirementChange",type:"event"},"Revocation(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"Revocation",type:"event"},"Submission(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"Submission",type:"event"}},methods:{"MAX_OWNER_COUNT()":{constant:!0,inputs:[],name:"MAX_OWNER_COUNT",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"addOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"addOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{owner:"Address of new owner."},notice:"Allows to add a new owner. Transaction has to be sent by wallet."},"changeRequirement(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_required",type:"uint256"}],name:"changeRequirement",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_required:"Number of required confirmations."},notice:"Allows to change the number of required confirmations. Transaction has to be sent by wallet."},"confirmTransaction(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"confirmTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{transactionId:"Transaction ID."},notice:"Allows an owner to confirm a transaction."},"confirmations(uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"confirmations",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"executeTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{transactionId:"Transaction ID."},notice:"Allows anyone to execute a confirmed transaction."},"getConfirmationCount(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"getConfirmationCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{transactionId:"Transaction ID."},return:"Number of confirmations.",notice:"Get the number of confirmations of a transaction."},"getConfirmations(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"getConfirmations",outputs:[{internalType:"address[]",name:"_confirmations",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",params:{transactionId:"Transaction ID."},return:"Returns array of owner addresses.",notice:"Get the array with owner addresses, which confirmed transaction."},"getOwners()":{constant:!0,inputs:[],name:"getOwners",outputs:[{internalType:"address[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",return:"List of owner addresses.",notice:"Get the list of owners."},"getTransactionCount(bool,bool)":{constant:!0,inputs:[{internalType:"bool",name:"pending",type:"bool"},{internalType:"bool",name:"executed",type:"bool"}],name:"getTransactionCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{executed:"Include executed transactions.",pending:"Include pending transactions."},return:"Total number of transactions after filters are applied.",notice:"Get the total number of transactions after filers are applied."},"getTransactionIds(uint256,uint256,bool,bool)":{constant:!0,inputs:[{internalType:"uint256",name:"from",type:"uint256"},{internalType:"uint256",name:"to",type:"uint256"},{internalType:"bool",name:"pending",type:"bool"},{internalType:"bool",name:"executed",type:"bool"}],name:"getTransactionIds",outputs:[{internalType:"uint256[]",name:"_transactionIds",type:"uint256[]"}],payable:!1,stateMutability:"view",type:"function",params:{executed:"Include executed transactions.",from:"Index start position of transaction array.",pending:"Include pending transactions.",to:"Index end position of transaction array."},return:"Returns array of transaction IDs.",notice:"Get the list of transaction IDs in defined range."},"isConfirmed(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"isConfirmed",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{transactionId:"Transaction ID."},return:"Confirmation status.",notice:"Returns the confirmation status of a transaction."},"isOwner(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"owners(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"owners",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"removeOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"removeOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{owner:"Address of owner."},notice:"Allows to remove an owner. Transaction has to be sent by wallet."},"replaceOwner(address,address)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"newOwner",type:"address"}],name:"replaceOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newOwner:"Address of new owner.",owner:"Address of owner to be replaced."},notice:"Allows to replace an owner with a new owner. Transaction has  to be sent by wallet."},"required()":{constant:!0,inputs:[],name:"required",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"revokeConfirmation(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"revokeConfirmation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{transactionId:"Transaction ID."},notice:"Allows an owner to revoke a confirmation for a transaction."},"submitTransaction(address,uint256,bytes)":{constant:!1,inputs:[{internalType:"address",name:"destination",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"submitTransaction",outputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"Transaction data payload.",destination:"Transaction target address.",value:"Transaction ether value."},return:"Returns transaction ID.",notice:"Allows an owner to submit and confirm a transaction."},"transactionCount()":{constant:!0,inputs:[],name:"transactionCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transactions(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"transactions",outputs:[{internalType:"address",name:"destination",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bool",name:"executed",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/Sovryn/Proxy/Proxy.sol:Proxy":{source:"contracts/Sovryn/Proxy/Proxy.sol",name:"Proxy",title:"Base Proxy contract.",details:"UpgradableProxy is the contract that inherits Proxy and wraps these functions.",notice:"The proxy performs delegated calls to the contract implementation it is pointing to. This way upgradable contracts are possible on blockchain. * Delegating proxy contracts are widely used for both upgradeability and gas savings. These proxies rely on a logic contract (also known as implementation contract or master copy) that is called using delegatecall. This allows proxies to keep a persistent state (storage and balance) while the code is delegated to the logic contract. * Proxy contract is meant to be inherited and its internal functions _setImplementation and _setProxyOwner to be called when upgrades become neccessary. * The loan token (iToken) contract as well as the protocol contract act as proxies, delegating all calls to underlying contracts. Therefore, if you want to interact with them using web3, you need to use the ABIs from the contracts containing the actual logic or the interface contract.  ABI for LoanToken contracts: LoanTokenLogicStandard  ABI for Protocol contract: ISovryn",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."}}},"contracts/Sovryn/Proxy/UpgradableProxy.sol:UpgradableProxy":{source:"contracts/Sovryn/Proxy/UpgradableProxy.sol",name:"UpgradableProxy",title:"Upgradable Proxy contract.",notice:"A disadvantage of the immutable ledger is that nobody can change the source code of a smart contract after it’s been deployed. In order to fix bugs or introduce new features, smart contracts need to be upgradable somehow. * Although it is not possible to upgrade the code of an already deployed smart contract, it is possible to set-up a proxy contract architecture that will allow to use new deployed contracts as if the main logic had been upgraded. * A proxy architecture pattern is such that all message calls go through a Proxy contract that will redirect them to the latest deployed contract logic. To upgrade, a new version of the contract is deployed, and the Proxy is updated to reference the new contract address.",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"setImplementation(address)":{constant:!1,inputs:[{internalType:"address",name:"_implementation",type:"address"}],name:"setImplementation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for _setImplementation that exposes the function as public for owner to be able to set a new version of the contract as current pointing implementation.",params:{_implementation:"Address of the implementation."},notice:"Set address of the implementation."},"setProxyOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setProxyOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_owner:"Address of the owner."},notice:"Set address of the owner."}}},"contracts/Sovryn/RSK/RSKAddrValidator.sol:RSKAddrValidator":{source:"contracts/Sovryn/RSK/RSKAddrValidator.sol",name:"RSKAddrValidator"},"contracts/Sovryn/Token/ApprovalReceiver.sol:ApprovalReceiver":{source:"contracts/Sovryn/Token/ApprovalReceiver.sol",name:"ApprovalReceiver",title:"Base contract for receiving approval from SOV token.",methods:{"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_data:"The data will be used for low level call."},notice:"Receives approval from SOV token."}}},"contracts/Sovryn/Token/Token.sol:Token":{source:"contracts/Sovryn/Token/Token.sol",name:"Token",title:"Token is an ERC-20 token contract.",details:"This contract represents a token with dynamic supply.  The owner of the token contract can mint/burn tokens to/from any account  based upon previous governance voting and approval.",notice:"This contract accounts for all holders' balances.",constructor:{inputs:[{internalType:"uint256",name:"_initialAmount",type:"uint256"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"uint8",name:"_decimals",type:"uint8"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DECIMALS()":{constant:!0,inputs:[],name:"DECIMALS",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"NAME()":{constant:!0,inputs:[],name:"NAME",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"SYMBOL()":{constant:!0,inputs:[],name:"SYMBOL",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.\t * Requirements:\t * - `spender` cannot be the zero address."},"approveAndCall(address,uint256,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"approveAndCall",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to be sent.",_data:"Parameters for the contract call, such as endpoint signature.",_spender:"The contract address to spend the tokens."},notice:"Approves and then calls the receiving contract. Useful to encapsulate sending tokens to a contract in one call. Solidity has no native way to send tokens to contracts. ERC-20 tokens require approval to be spent by third parties, such as a contract in this case."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).\t * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.\t * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.\t * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\t * Emits an {Approval} event indicating the updated allowance.\t * Requirements:\t * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.\t * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\t * Emits an {Approval} event indicating the updated allowance.\t * Requirements:\t * - `spender` cannot be the zero address."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Don't create more than 2^96/10 tokens before updating the governance first.",params:{_account:"The recipient address to get the minted tokens.",_amount:"The amount of tokens to be minted."},notice:"Creates new tokens and sends them to the recipient."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.\t * Requirements:\t * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.\t * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};\t * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Sovryn/Token/TokenSender.sol:TokenSender":{source:"contracts/Sovryn/Token/TokenSender.sol",name:"TokenSender",title:"SOV Token sender contract.",details:"TODO: Maybe this token transfer functionality should be included in the SOV token contract, because other contracts are requiring it too: VestingRegistry.sol and VestingRegistry2.sol",notice:"This contract includes functions to transfer SOV tokens to a recipient or to several recipients in a list. There is an ACL control check by modifier.",constructor:{inputs:[{internalType:"address",name:"_SOV",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SOVTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SOVTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferSOV(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be transferred.",_receiver:"The address of the SOV receiver."},notice:"Transfer SOV tokens to given address."},"transferSOVusingList(address[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"_receivers",type:"address[]"},{internalType:"uint256[]",name:"_amounts",type:"uint256[]"}],name:"transferSOVusingList",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amounts:"The amounts to be transferred.",_receivers:"The addresses of the SOV receivers."},notice:"Transfer given amounts of SOV to the given addresses."}}},"contracts/Sovryn/Utils/AdminRole.sol:AdminRole":{source:"contracts/Sovryn/Utils/AdminRole.sol",name:"AdminRole",events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}}},wt=new ze({routes:[{path:"/",component:vt,props:()=>({json:gt})},{path:"*",component:mt,props:e=>({json:gt[e.path.slice(1)]})}]});new a.a({el:"#app",router:wt,mounted(){document.dispatchEvent(new Event("render-event"))},render:e=>e(Xe)})},function(e,t,n){"use strict";function a(e,t){for(var n=[],a={},i=0;i<t.length;i++){var s=t[i],r=s[0],o={id:e+":"+i,css:s[1],media:s[2],sourceMap:s[3]};a[r]?a[r].parts.push(o):n.push(a[r]={id:r,parts:[o]})}return n}n.r(t),n.d(t,"default",(function(){return y}));var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var s={},r=i&&(document.head||document.getElementsByTagName("head")[0]),o=null,u=0,d=!1,p=function(){},l=null,c="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function y(e,t,n,i){d=n,l=i||{};var r=a(e,t);return m(r),function(t){for(var n=[],i=0;i<r.length;i++){var o=r[i];(u=s[o.id]).refs--,n.push(u)}t?m(r=a(e,t)):r=[];for(i=0;i<n.length;i++){var u;if(0===(u=n[i]).refs){for(var d=0;d<u.parts.length;d++)u.parts[d]();delete s[u.id]}}}}function m(e){for(var t=0;t<e.length;t++){var n=e[t],a=s[n.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](n.parts[i]);for(;i<n.parts.length;i++)a.parts.push(h(n.parts[i]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{var r=[];for(i=0;i<n.parts.length;i++)r.push(h(n.parts[i]));s[n.id]={id:n.id,refs:1,parts:r}}}}function f(){var e=document.createElement("style");return e.type="text/css",r.appendChild(e),e}function h(e){var t,n,a=document.querySelector('style[data-vue-ssr-id~="'+e.id+'"]');if(a){if(d)return p;a.parentNode.removeChild(a)}if(c){var i=u++;a=o||(o=f()),t=v.bind(null,a,i,!1),n=v.bind(null,a,i,!0)}else a=f(),t=g.bind(null,a),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else n()}}var b,T=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join("\n")});function v(e,t,n,a){var i=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=T(t,i);else{var s=document.createTextNode(i),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(s,r[t]):e.appendChild(s)}}function g(e,t){var n=t.css,a=t.media,i=t.sourceMap;if(a&&e.setAttribute("media",a),l.ssrId&&e.setAttribute("data-vue-ssr-id",t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}]);